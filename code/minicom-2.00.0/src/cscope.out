cscope 15 $HOME/code/minicom-2.00.0/src               0000813799
	@Makefile.am

2 
	gEXTRA_PROGRAMS
 = 
möicom
.
key£rv


4 
bö_PROGRAMS
 = 
möicom
 
runs¸ùt
 
ascii
-
x‰
 @
KEYSERV
@

6 
bö_SCRIPTS
 = 
xmöicom


8 
möicom_SOURCES
 = 
möicom
.
c
 
vt100
.¯
c⁄fig
.¯
hñp
.¯
updown
.c \

9 
utû
.
c
 
dül
.¯
wödow
.¯
wkeys
.¯
ùc
.c \

10 
wödiv
.
c
 
sysdï1
.¯
sysdï2
.¯
rwc⁄f
.¯
maö
.c \

11 
fûe
.
c
 
gësdú
.¯
wûdm©
.¯
comm⁄
.c

13 
noö°_HEADERS
 = 
ch¨m≠
.
h
 
c⁄figsym
.h 
defm≠
.h \

14 
gësdú
.
h
 
öé
.h 
keybﬂrd
.h 
möicom
.h \

15 
p‹t
.
h
 
vt100
.h 
wödow
.h 
sysdï
.h 
rcsid
.h

17 
runs¸ùt_SOURCES
 = 
s¸ùt
.
c
 
sysdï1
.¯
comm⁄
.¯
p‹t
.
h
 
möicom
.h

19 
ascii_x‰_SOURCES
 = 
ascii
-
x‰
.
c


21 
möicom_key£rv_SOURCES
 = 
key£rv
.
c
 
wkeys
.¯
sysdï2
.c

23 
AUTOMAKE_OPTIONS
 = 
di°
-
èrZ
 
no
-
dïídícõs
 1.0

25 
möicom_LDADD
 = @
INTLLIBS
@

27 
runs¸ùt_LDADD
 = @
INTLLIBS
@

29 
LDADD
 = 
$
(
t›_buûddú
)/
lib
/
libp‹t
.
a


30 
CPPFLAGS
 = @CPPFLAGS@ -
I$
(
t›_§cdú
)/
lib


32 
EXTRA_DIST
 = 
fun˘i⁄s
.
c
 
xmöicom


	@Makefile.in

1 #Makefûe.
ö
 
gíî©ed
 
autom©iˇŒy
 
by
 
automake
 1.4 
‰om
 
Makefûe
.
am


3 #C›yrighà(
C
Ë1994, 1995-8, 1999 
Fªe
 
So·w¨e
 
Found©i⁄
, 
Inc
.

4 #Thi†
Makefûe
.
ö
 
is
 
‰ì
 
so·w¨e
; 
the
 
Fªe
 
So·w¨e
 
Found©i⁄


5 #give†
u∆imôed
 
≥rmissi⁄
 
to
 
c›y
 
™d
/
‹
 
di°ribuã
 
ô
,

6 #wôh 
‹
 
wôhout
 
modifiˇti⁄s
, 
as
 a†
this
 
nŸi˚
 
is
 
¥e£rved
.

8 #Thi†
¥ogøm
 
is
 
di°ribuãd
 
ö
 
the
 
h›e
 
th©
 
ô
 
wûl
 
be
 
u£ful
,

9 #buà
WITHOUT
 
ANY
 
WARRANTY
, 
to
 
the
 
exã¡
 
≥rmôãd
 
by
 
œw
; 
wôhout


10 #eví 
the
 
im∂õd
 
w¨ø¡y
 
of
 
MERCHANTABILITY
 
‹
 
FITNESS
 
FOR
 
A


11 #PARTICULAR 
PURPOSE
.

14 
	gSHELL
 = @
SHELL
@

16 
§cdú
 = @srcdir@

17 
t›_§cdú
 = @top_srcdir@

18 
VPATH
 = @
§cdú
@

19 
¥efix
 = @prefix@

20 
exec_¥efix
 = @exec_prefix@

22 
bödú
 = @bindir@

23 
sbödú
 = @sbindir@

24 
libexecdú
 = @libexecdir@

25 
d©adú
 = @datadir@

26 
sysc⁄fdú
 = @sysconfdir@

27 
sh¨ed°©edú
 = @sharedstatedir@

28 
loˇl°©edú
 = @localstatedir@

29 
libdú
 = @libdir@

30 
öfodú
 = @infodir@

31 
m™dú
 = @mandir@

32 
ö˛udedú
 = @includedir@

33 
ﬁdö˛udedú
 = /
u§
/
ö˛ude


35 
DESTDIR
 =

37 
pkgd©adú
 = 
$
(
d©adú
)/@
PACKAGE
@

38 
pkglibdú
 = 
$
(
libdú
)/@
PACKAGE
@

39 
pkgö˛udedú
 = 
$
(
ö˛udedú
)/@
PACKAGE
@

41 
t›_buûddú
 = ..

43 
ACLOCAL
 = @ACLOCAL@

44 
AUTOCONF
 = @AUTOCONF@

45 
AUTOMAKE
 = @AUTOMAKE@

46 
AUTOHEADER
 = @AUTOHEADER@

48 
INSTALL
 = @INSTALL@

49 
INSTALL_PROGRAM
 = @INSTALL_PROGRAM@ 
	$$
(
AM_INSTALL_PROGRAM_FLAGS
)

50 
INSTALL_DATA
 = @INSTALL_DATA@

51 
INSTALL_SCRIPT
 = @INSTALL_SCRIPT@

52 
å™sf‹m
 = @
¥ogøm_å™sf‹m_«me
@

54 
NORMAL_INSTALL
 = :

55 
PRE_INSTALL
 = :

56 
POST_INSTALL
 = :

57 
NORMAL_UNINSTALL
 = :

58 
PRE_UNINSTALL
 = :

59 
POST_UNINSTALL
 = :

60 
CATALOGS
 = @CATALOGS@

61 
CATOBJEXT
 = @CATOBJEXT@

62 
CC
 = @CC@

63 
CPP
 = @CPP@

64 
DATADIRNAME
 = @DATADIRNAME@

65 
GENCAT
 = @GENCAT@

66 
GMOFILES
 = @GMOFILES@

67 
GMSGFMT
 = @GMSGFMT@

68 
GT_NO
 = @GT_NO@

69 
GT_YES
 = @GT_YES@

70 
INCLUDE_LOCALE_H
 = @INCLUDE_LOCALE_H@

71 
INSTOBJEXT
 = @INSTOBJEXT@

72 
INTLDEPS
 = @INTLDEPS@

73 
INTLLIBS
 = @INTLLIBS@

74 
INTLOBJS
 = @INTLOBJS@

75 
KEYSERV
 = @KEYSERV@

76 
LIBOBJS
 = @LIBOBJS@

77 
MAKEINFO
 = @MAKEINFO@

78 
MKINSTALLDIRS
 = @MKINSTALLDIRS@

79 
MSGFMT
 = @MSGFMT@

80 
PACKAGE
 = @PACKAGE@

81 
PATH_KERMIT
 = @PATH_KERMIT@

82 
POFILES
 = @POFILES@

83 
POSUB
 = @POSUB@

84 
RANLIB
 = @RANLIB@

85 
U
 = @U@

86 
USE_INCLUDED_LIBINTL
 = @USE_INCLUDED_LIBINTL@

87 
USE_NLS
 = @USE_NLS@

88 
VERSION
 = @VERSION@

89 
l
 = @l@

91 
EXTRA_PROGRAMS
 = 
möicom
.
key£rv


93 
bö_PROGRAMS
 = 
möicom
 
runs¸ùt
 
ascii
-
x‰
 @
KEYSERV
@

95 
bö_SCRIPTS
 = 
xmöicom


97 
möicom_SOURCES
 = 
möicom
.
c
 
vt100
.¯
c⁄fig
.¯
hñp
.¯
updown
.¯
utû
.¯
dül
.¯
wödow
.¯
wkeys
.¯
ùc
.¯
wödiv
.¯
sysdï1
.¯
sysdï2
.¯
rwc⁄f
.¯
maö
.¯
fûe
.¯
gësdú
.¯
wûdm©
.¯
comm⁄
.c

100 
noö°_HEADERS
 = 
ch¨m≠
.
h
 
c⁄figsym
.h 
defm≠
.h 
gësdú
.h 
öé
.h 
keybﬂrd
.h 
möicom
.h 
p‹t
.h 
vt100
.h 
wödow
.h 
sysdï
.h 
rcsid
.h

103 
runs¸ùt_SOURCES
 = 
s¸ùt
.
c
 
sysdï1
.¯
comm⁄
.¯
p‹t
.
h
 
möicom
.h

105 
ascii_x‰_SOURCES
 = 
ascii
-
x‰
.
c


107 
möicom_key£rv_SOURCES
 = 
key£rv
.
c
 
wkeys
.¯
sysdï2
.c

109 
AUTOMAKE_OPTIONS
 = 
di°
-
èrZ
 
no
-
dïídícõs
 1.0

111 
möicom_LDADD
 = @
INTLLIBS
@

113 
runs¸ùt_LDADD
 = @
INTLLIBS
@

115 
LDADD
 = 
	`$
(
t›_buûddú
)/
lib
/
libp‹t
.
a


116 
CPPFLAGS
 = @CPPFLAGS@ -
	`I$
(
t›_§cdú
)/
lib


118 
EXTRA_DIST
 = 
fun˘i⁄s
.
c
 
xmöicom


119 
mkö°Ældús
 = 
	`$
(
SHELL
Ë$(
t›_§cdú
)/
aux
/mkinstalldirs

120 
CONFIG_HEADER
 = ../
c⁄fig
.
h


121 
CONFIG_CLEAN_FILES
 =

122 
PROGRAMS
 = 
	$$
(
bö_PROGRAMS
)

125 
DEFS
 = @DEFS@ -
I
. -
	`I$
(
§cdú
) -I..

126 
LDFLAGS
 = @LDFLAGS@

127 
LIBS
 = @LIBS@

128 
möicom_key£rv_OBJECTS
 = 
key£rv
.
o
 
wkeys
.ÿ
sysdï2
.o

129 
möicom_key£rv_LDADD
 = 
	$$
(
LDADD
)

130 
möicom_key£rv_DEPENDENCIES
 = 
	`$
(
t›_buûddú
)/
lib
/
libp‹t
.
a


131 
möicom_key£rv_LDFLAGS
 =

132 
möicom_OBJECTS
 = 
möicom
.
o
 
vt100
.ÿ
c⁄fig
.ÿ
hñp
.ÿ
updown
.ÿ
utû
.o \

133 
dül
.
o
 
wödow
.ÿ
wkeys
.ÿ
ùc
.ÿ
wödiv
.ÿ
sysdï1
.ÿ
sysdï2
.ÿ
rwc⁄f
.o \

134 
maö
.
o
 
fûe
.ÿ
gësdú
.ÿ
wûdm©
.ÿ
comm⁄
.o

135 
möicom_DEPENDENCIES
 =

136 
möicom_LDFLAGS
 =

137 
runs¸ùt_OBJECTS
 = 
s¸ùt
.
o
 
sysdï1
.ÿ
comm⁄
.o

138 
runs¸ùt_DEPENDENCIES
 =

139 
runs¸ùt_LDFLAGS
 =

140 
ascii_x‰_OBJECTS
 = 
ascii
-
x‰
.
o


141 
ascii_x‰_LDADD
 = 
	$$
(
LDADD
)

142 
ascii_x‰_DEPENDENCIES
 = 
	`$
(
t›_buûddú
)/
lib
/
libp‹t
.
a


143 
ascii_x‰_LDFLAGS
 =

144 
SCRIPTS
 = 
	$$
(
bö_SCRIPTS
)

146 
CFLAGS
 = @CFLAGS@

147 
COMPILE
 = 
	`$
(
CC
Ë$(
DEFS
Ë$(
INCLUDES
Ë$(
AM_CPPFLAGS
Ë$(
CPPFLAGS
Ë$(
AM_CFLAGS
Ë
	$$
(
CFLAGS
)

148 
CCLD
 = 
	$$
(
CC
)

149 
LINK
 = 
	`$
(
CCLD
Ë$(
AM_CFLAGS
Ë$(
CFLAGS
Ë$(
LDFLAGS
Ë-
o
 
$
@

150 
HEADERS
 = 
	$$
(
noö°_HEADERS
)

152 
DIST_COMMON
 = 
Makefûe
.
am
 Makefûe.
ö


155 
DISTFILES
 = 
	`$
(
DIST_COMMON
Ë$(
SOURCES
Ë$(
HEADERS
Ë$(
TEXINFOS
Ë
	$$
(
EXTRA_DIST
)

157 
TAR
 = 
gèr


158 
GZIP_ENV
 = --
be°


159 
SOURCES
 = 
	`$
(
möicom_key£rv_SOURCES
Ë$(
möicom_SOURCES
Ë$(
runs¸ùt_SOURCES
Ë
	$$
(
ascii_x‰_SOURCES
)

160 
OBJECTS
 = 
	`$
(
möicom_key£rv_OBJECTS
Ë$(
möicom_OBJECTS
Ë$(
runs¸ùt_OBJECTS
Ë
	$$
(
ascii_x‰_OBJECTS
)

162 
Æl
:áŒ-
ªdúe˘


163 .
SUFFIXES
:

164 .
SUFFIXES
: .
S
 .
c
 .
o
 .
s


165 
	`$
(
§cdú
)/
Makefûe
.
ö
: Makefûe.
am
 $(
t›_§cdú
)/
c⁄figuª
.ö 
	$$
(
ACLOCAL_M4
)

166 
cd
 
	`$
(
t›_§cdú
Ë&& $(
AUTOMAKE
Ë--
gnu
 
§c
/
Makefûe


168 
Makefûe
: 
	`$
(
§cdú
)/Makefûe.
ö
 $(
t›_buûddú
)/
c⁄fig
.
°©us


169 
cd
 
	`$
(
t›_buûddú
) \

170 && 
CONFIG_FILES
=
	`$
(
subdú
)/
$
@ 
CONFIG_HEADERS
$(
SHELL
Ë./
c⁄fig
.
°©us


173 
mo°ly˛ón
-
böPROGRAMS
:

175 
˛ón
-
böPROGRAMS
:

176 -
ã°
 -
z
 "$(bö_PROGRAMS)" || 
rm
 -
f
 
	$$
(
bö_PROGRAMS
)

178 
di°˛ón
-
böPROGRAMS
:

180 
maöèöî
-
˛ón
-
böPROGRAMS
:

182 
ö°Æl
-
böPROGRAMS
: 
	`$
(
bö_PROGRAMS
)

183 @
	`$
(
NORMAL_INSTALL
)

184 
	`$
(
mkö°Ældús
Ë$(
DESTDIR
)$(
bödú
)

185 @
li°
='$(bö_PROGRAMS)'; 
p
 
ö
 
$$li°
; do \

186 
ã°
 -
f
 
$$p
; 
thí
 \

187 
echo
 " $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`"; \

188 
	`$
(
INSTALL_PROGRAM
Ë
$$p
 $(
DESTDIR
)$(
bödú
)/`
echo
 $$p|
£d
 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \

189 :; 
fi
; \

190 
d⁄e


192 
unö°Æl
-
böPROGRAMS
:

193 @
	$$
(
NORMAL_UNINSTALL
)

194 
li°
='$(bö_PROGRAMS)'; 
p
 
ö
 
$$li°
; do \

195 
rm
 -
f
 
	`$
(
DESTDIR
)$(
bödú
)/`
echo
 
$$p
|
£d
 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \

196 
d⁄e


198 .
c
.
o
:

199 
	`$
(
COMPILE
Ë-
c
 
$
<

201 .
s
.
o
:

202 
	`$
(
COMPILE
Ë-
c
 
$
<

204 .
S
.
o
:

205 
	`$
(
COMPILE
Ë-
c
 
$
<

207 
mo°ly˛ón
-
compûe
:

208 -
rm
 -
f
 *.
o
 
c‹e
 *.core

210 
˛ón
-
compûe
:

212 
di°˛ón
-
compûe
:

213 -
rm
 -
f
 *.
èb
.
c


215 
maöèöî
-
˛ón
-
compûe
:

217 
möicom
.
key£rv
: 
	`$
(
möicom_key£rv_OBJECTS
Ë$(
möicom_key£rv_DEPENDENCIES
)

218 @
rm
 -
f
 
möicom
.
key£rv


219 
	`$
(
LINK
Ë$(
möicom_key£rv_LDFLAGS
Ë$(
möicom_key£rv_OBJECTS
Ë$(
möicom_key£rv_LDADD
Ë
	$$
(
LIBS
)

221 
möicom
: 
	`$
(
möicom_OBJECTS
Ë$(
möicom_DEPENDENCIES
)

222 @
rm
 -
f
 
möicom


223 
	`$
(
LINK
Ë$(
möicom_LDFLAGS
Ë$(
möicom_OBJECTS
Ë$(
möicom_LDADD
Ë
	$$
(
LIBS
)

225 
runs¸ùt
: 
	`$
(
runs¸ùt_OBJECTS
Ë$(
runs¸ùt_DEPENDENCIES
)

226 @
rm
 -
f
 
runs¸ùt


227 
	`$
(
LINK
Ë$(
runs¸ùt_LDFLAGS
Ë$(
runs¸ùt_OBJECTS
Ë$(
runs¸ùt_LDADD
Ë
	$$
(
LIBS
)

229 
ascii
-
x‰
: 
	`$
(
ascii_x‰_OBJECTS
Ë$(
ascii_x‰_DEPENDENCIES
)

230 @
rm
 -
f
 
ascii
-
x‰


231 
	`$
(
LINK
Ë$(
ascii_x‰_LDFLAGS
Ë$(
ascii_x‰_OBJECTS
Ë$(
ascii_x‰_LDADD
Ë
	$$
(
LIBS
)

233 
ö°Æl
-
böSCRIPTS
: 
	`$
(
bö_SCRIPTS
)

234 @
	`$
(
NORMAL_INSTALL
)

235 
	`$
(
mkö°Ældús
Ë$(
DESTDIR
)$(
bödú
)

236 @
li°
='$(bö_SCRIPTS)'; 
p
 
ö
 
$$li°
; do \

237 
ã°
 -
f
 
$$p
; 
thí
 \

238 
echo
 " $(INSTALL_SCRIPT) $$p $(DESTDIR)$(bindir)/`echo $$p|sed '$(transform)'`"; \

239 
	`$
(
INSTALL_SCRIPT
Ë
$$p
 $(
DESTDIR
)$(
bödú
)/`
echo
 $$p|
£d
 '$(transform)'`; \

240 
ã°
 -
f
 
	`$
(
§cdú
)/
$$p
; 
thí
 \

241 
echo
 " $(INSTALL_SCRIPT) $(srcdir)/$$p $(DESTDIR)$(bindir)/`echo $$p|sed '$(transform)'`"; \

242 
	`$
(
INSTALL_SCRIPT
Ë$(
§cdú
)/
$$p
 $(
DESTDIR
)$(
bödú
)/`
echo
 $$p|
£d
 '$(transform)'`; \

243 :; 
fi
; fi; \

244 
d⁄e


246 
unö°Æl
-
böSCRIPTS
:

247 @
	$$
(
NORMAL_UNINSTALL
)

248 
li°
='$(bö_SCRIPTS)'; 
p
 
ö
 
$$li°
; do \

249 
rm
 -
f
 
	`$
(
DESTDIR
)$(
bödú
)/`
echo
 
$$p
|
£d
 '$(transform)'`; \

250 
d⁄e


252 
ègs
: 
TAGS


254 
ID
: 
	`$
(
HEADERS
Ë$(
SOURCES
Ë
	$$
(
LISP
)

255 
li°
='$(SOURCES) $(HEADERS)'; \

256 
unique
=`
i
 
ö
 
$$li°
; dÿ
echo
 
$$i
; 
d⁄e
 | \

257 
awk
 ' { files[$$0] = 1; } \
 { for (i in files)Örint i; }'`; \

259 
hîe
=`
pwd
` && 
cd
 
	`$
(
§cdú
) \

260 && 
mkid
 -
f$$hîe
/
ID
 
$$unique
 
	$$
(
LISP
)

262 
TAGS
: 
	`$
(
HEADERS
Ë$(
SOURCES
Ë$(
TAGS_DEPENDENCIES
Ë
	$$
(
LISP
)

263 
ègs
=; \

264 
hîe
=`
pwd
`; \

265 
li°
='$(SOURCES) $(HEADERS)'; \

266 
unique
=`
i
 
ö
 
$$li°
; dÿ
echo
 
$$i
; 
d⁄e
 | \

267 
awk
 ' { files[$$0] = 1; } \
 { for (i in files)Örint i; }'`; \

269 
ã°
 -
z
 "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \

270 || (
cd
 
	`$
(
§cdú
Ë&& 
ëags
 $(
ETAGS_ARGS
Ë
$$ègs
 
$$unique
 $(
LISP
Ë-
o
 
$$hîe
/
TAGS
)

272 
mo°ly˛ón
-
ègs
:

274 
˛ón
-
ègs
:

276 
di°˛ón
-
ègs
:

277 -
rm
 -
f
 
TAGS
 
ID


279 
maöèöî
-
˛ón
-
ègs
:

281 
di°dú
 = 
	`$
(
t›_buûddú
)/$(
PACKAGE
)-$(
VERSION
)/
	$$
(
subdú
)

283 
subdú
 = 
§c


285 
di°dú
: 
	`$
(
DISTFILES
)

286 @
fûe
 
ö
 
	`$
(
DISTFILES
); do \

287 
d
=
	`$
(
§cdú
); \

288 
ã°
 -
d
 
$$d
/
$$fûe
; 
thí
 \

289 
˝
 -
¥
 
$$d
/
$$fûe
 
	`$
(
di°dú
)/$$file; \

291 
ã°
 -
f
 
	`$
(
di°dú
)/
$$fûe
 \

292 || 
 
 
$$d
/
$$fûe
 
	`$
(
di°dú
)/$$fûê2> /
dev
/
nuŒ
 \

293 || 
˝
 -
p
 
$$d
/
$$fûe
 
	`$
(
di°dú
)/$$file || :; \

294 
fi
; \

295 
d⁄e


296 
öfo
-
am
:

297 
öfo
: info-
am


298 
dvi
-
am
:

299 
dvi
: dvi-
am


300 
check
-
am
: 
Æl
-am

301 
check
: check-
am


302 
ö°Ælcheck
-
am
:

303 
ö°Ælcheck
: in°Ælcheck-
am


304 
ö°Æl
-
exec
-
am
: in°Æl-
böPROGRAMS
 in°Æl-
böSCRIPTS


305 
ö°Æl
-
exec
: in°Æl-exec-
am


307 
ö°Æl
-
d©a
-
am
:

308 
ö°Æl
-
d©a
: in°Æl-d©a-
am


310 
ö°Æl
-
am
: 
Æl
-am

311 @
	`$
(
MAKE
Ë
	$$
(
AM_MAKEFLAGS
Ë
ö°Æl
-
exec
-
am
 in°Æl-
d©a
-am

312 
ö°Æl
: in°Æl-
am


313 
unö°Æl
-
am
: unö°Æl-
böPROGRAMS
 unö°Æl-
böSCRIPTS


314 
unö°Æl
: unö°Æl-
am


315 
Æl
-
am
: 
Makefûe
 
	`$
(
PROGRAMS
Ë$(
SCRIPTS
Ë
	$$
(
HEADERS
)

316 
Æl
-
ªdúe˘
:áŒ-
am


317 
ö°Æl
-
°rù
:

318 
	`$
(
MAKE
Ë
	$$
(
AM_MAKEFLAGS
Ë
AM_INSTALL_PROGRAM_FLAGS
=-
s
 
ö°Æl


319 
ö°Ældús
:

320 
	`$
(
mkö°Ældús
Ë$(
DESTDIR
)$(
bödú
Ë$(DESTDIR)
	$$
(
bödú
)

323 
mo°ly˛ón
-
gíîic
:

325 
˛ón
-
gíîic
:

327 
di°˛ón
-
gíîic
:

328 -
rm
 -
f
 
Makefûe
 
	`$
(
CONFIG_CLEAN_FILES
)

329 -
rm
 -
f
 
c⁄fig
.
ˇche
 c⁄fig.
log
 
°amp
-
h
 stamp-h[0-9]*

331 
maöèöî
-
˛ón
-
gíîic
:

332 
mo°ly˛ón
-
am
: mo°ly˛ón-
böPROGRAMS
 mo°ly˛ón-
compûe
 \

333 
mo°ly˛ón
-
ègs
 mo°ly˛ón-
gíîic


335 
mo°ly˛ón
: mo°ly˛ón-
am


337 
˛ón
-
am
: cÀ™-
böPROGRAMS
 cÀ™-
compûe
 cÀ™-
ègs
 cÀ™-
gíîic
 \

338 
mo°ly˛ón
-
am


340 
˛ón
: cÀ™-
am


342 
di°˛ón
-
am
: di°˛ón-
böPROGRAMS
 di°˛ón-
compûe
 di°˛ón-
ègs
 \

343 
di°˛ón
-
gíîic
 
˛ón
-
am


345 
di°˛ón
: di°˛ón-
am


347 
maöèöî
-
˛ón
-
am
: maöèöî-˛ón-
böPROGRAMS
 \

348 
maöèöî
-
˛ón
-
compûe
 maöèöî-˛ón-
ègs
 \

349 
maöèöî
-
˛ón
-
gíîic
 
di°˛ón
-
am


350 @
echo
 "This command is intended for maintainersÅo use;"

351 @
echo
 "it deletes filesÅhat mayÑequire specialÅoolsÅoÑebuild."

353 
maöèöî
-
˛ón
: maöèöî-˛ón-
am


355 .
PHONY
: 
mo°ly˛ón
-
böPROGRAMS
 
di°˛ón
-böPROGRAMS 
˛ón
-binPROGRAMS \

356 
maöèöî
-
˛ón
-
böPROGRAMS
 
unö°Æl
-böPROGRAMS 
ö°Æl
-binPROGRAMS \

357 
mo°ly˛ón
-
compûe
 
di°˛ón
-compûê
˛ón
-compile \

358 
maöèöî
-
˛ón
-
compûe
 
unö°Æl
-
böSCRIPTS
 
ö°Æl
-böSCRIPTS 
ègs
 \

359 
mo°ly˛ón
-
ègs
 
di°˛ón
-èg†
˛ón
-èg†
maöèöî
-clean-tags \

360 
di°dú
 
öfo
-
am
 infÿ
dvi
-am dvò
check
 check-am 
ö°Ælcheck
-am \

361 
ö°Ælcheck
 
ö°Æl
-
exec
-
am
 in°Æl-exe¯ö°Æl-
d©a
-am install-data \

362 
ö°Æl
-
am
 in°Æ»
unö°Æl
-am unö°Æ»
Æl
-
ªdúe˘
áll-amáll \

363 
ö°Ældús
 
mo°ly˛ón
-
gíîic
 
di°˛ón
-gíîi¯
˛ón
-generic \

364 
maöèöî
-
˛ón
-
gíîic
 cÀ™ 
mo°ly˛ón
 
di°˛ón
 maintainer-clean

367 #Tñ»
vîsi⁄s
 [3.59,3.63Ë
of
 
GNU
 
make
 
to
 
nŸ
 
exp‹t
 
Æl
 
v¨übÀs
.

368 #Othîwi£ 
a
 
sy°em
 
	`limô
 (
SysV
 
©
 
Àa°
Ë
may
 
be
 
ex˚eded
.

369 .
NOEXPORT
:

	@ascii-xfr.c

9 #ifde‡
HAVE_CONFIG_H


10 
	~<c⁄fig.h
>

13 
	~"rcsid.h
"

14 
RCSID
("$Id:áscii-xfr.c,v 1.4 2000/11/17 15:20:27 walker Exp $")

16 
	~<°dio.h
>

17 
	~<°dlib.h
>

18 
	~<uni°d.h
>

19 
	~<°rög.h
>

20 
	~<time.h
>

21 
	~<sys/time.h
>

22 
	~<sys/ty≥s.h
>

27 
gë›t
();

28 
›töd
;

29 *
›èrg
;

34 
	gcdñay
 = 0;

35 
	gldñay
 = 0;

36 
	gdŸøns
 = 1;

37 
	geofch¨
 = 26;

38 
	gu£eof
 = 0;

39 
	gvîbo£
 = 0;

40 
time_t
 
	g°¨t
;

41 
time_t
 
	gœ°
;

42 
	gbd⁄e
 = 0;

47 
	$ms_dñay
(
ms
)

48 
ms
;

50 #ifde‡
HAVE_USLEEP


51 
	`u¶ìp
(1000 * 
ms
);

53 
	}
}

58 
	$löeout
(
löe
)

59 *
löe
;

61 *
löe
) {

62 
	`putch¨
(*
löe
++);

63 i‡(
cdñay
) {

64 
	`fÊush
(
°dout
);

65 
	`ms_dñay
(
cdñay
);

68 
	}
}

73 
	$°©s
(
f‹˚
)

74 
f‹˚
;

76 
time_t
 
now
;

77 
time_t
 
dif
;

79 i‡(!
vîbo£
) ;

81 
	`time
(&
now
);

82 
dif
 = 
now
 - 
°¨t
;

84 i‡(!
f‹˚
 && 
dif
 < 2) ;

85 i‡(
dif
 < 1) dif = 1;

86 
œ°
 = 
now
;

88 
	`Ârötf
(
°dîr
, "\r%.1f KbytesÅransferredát %d CPS",

89 ()
bd⁄e
 / 1024, ()(bd⁄ê/ 
dif
));

90 
	`fÊush
(
°dîr
);

91 
	}
}

93 
	$check_™swî
()

95 
löe
[1024];

96 
n
;

97 
fd_£t
 
rfds
;

98 
timevÆ
 
tv
;

100 
	`FD_ZERO
 (&
rfds
);

101 
	`FD_SET
 (0, &
rfds
);

102 
tv
.
tv_£c
 = 0;

103 
tv
.
tv_u£c
 = 0;

104 
	`£À˘
 (1, &
rfds
, 
NULL
, NULL, &
tv
) > 0) {

105 
n
 = 
	`ªad
 (0, 
löe
, 1024);

106 
	`wrôe
(2, 
löe
, 
n
);

107 
	`FD_ZERO
 (&
rfds
);

108 
	`FD_SET
 (0, &
rfds
);

109 
tv
.
tv_£c
 = 0;

110 
tv
.
tv_u£c
 = 0;

112 
	}
}

117 
	$a£nd
(
fûe
)

118 *
fûe
;

120 
FILE
 *
Â
;

121 
löe
[1024];

122 *
s
;

123 
fú°
 = 1;

125 i‡((
Â
 = 
	`f›í
(
fûe
, "r")Ë=
NULL
) {

126 
	`≥º‹
(
fûe
);

130 
	`fgës
(
löe
, 1024, 
Â
Ë!
NULL
) {

131 i‡(
dŸøns
 && (
s
 = 
	`°ºchr
(
löe
, '\n')Ë!
NULL
) {

132 i‡(
s
 > 
löe
 && *(s - 1) == '\r')

133 
s
--;

134 *
s
 = 0;

135 
	`löeout
(
löe
);

136 
	`löeout
("\r\n");

137 
bd⁄e
 +
	`°æí
(
löe
) + 2;

139 
	`löeout
(
löe
);

140 
bd⁄e
 +
	`°æí
(
löe
);

142 i‡(
ldñay
) {

143 
	`fÊush
(
°dout
);

144 
	`ms_dñay
(
ldñay
);

146 
	`°©s
(
fú°
);

147 
fú°
 = 0;

148 
	`check_™swî
();

150 i‡(
u£eof
)

151 
	`putch¨
(
eofch¨
);

152 
	`fÊush
(
°dout
);

153 i‡(
	`ißây
 (1))

154 
	`tcdøö
 (1);

155 
	`f˛o£
(
Â
);

158 
	}
}

163 
	$¨ecv
(
fûe
)

164 *
fûe
;

166 
FILE
 *
Â
;

167 
löe
[1024];

168 *
s
;

169 
n
;

170 
fú°
 = 1;

172 i‡((
Â
 = 
	`f›í
(
fûe
, "w")Ë=
NULL
) {

173 
	`≥º‹
(
fûe
);

177 (
n
 = 
	`ªad
(0, 
löe
, 1024)) > 0) {

178 
s
 = 
löe
; 
n
-- >0; s++) {

179 i‡(*
s
 =
eofch¨
) ;

180 i‡(
dŸøns
 && *
s
 == '\r') ;

181 
bd⁄e
++;

182 
	`Âutc
(*
s
, 
Â
);

184 
	`°©s
(
fú°
);

185 
fú°
 = 0;

186 i‡(*
s
 =
eofch¨
) ;

188 
	`f˛o£
(
Â
);

191 
	}
}

193 
	$ußge
()

195 
	`Ârötf
(
°dîr
, "\
:áscii-xfr -s|-r [-dvn] [-lÜinedelay] [-c character delay] filename\n\
-s: send\n\
-r:Ñeceive\n\
-e: sendÅhe End Of File character (default isÇotÅo)\n\
-d: set End Of File characterÅo Control-D (instead of Control-Z)\n\
-v: verbose (statistics on stderr output)\n\
-n: doÇotÅranslate CRLF <--> LF\n\
áre in milliseconds.\n");

204 
	`exô
(1);

205 
	}
}

207 
	$maö
(
¨gc
, 
¨gv
)

208 
¨gc
;

209 **
¨gv
;

211 
c
;

212 
wh©
 = 0;

213 *
fûe
;

214 
ªt
;

216 (
c
 = 
	`gë›t
(
¨gc
, 
¨gv
, "§dev∆:c:")Ë!
EOF
) {

217 
c
) {

220 
wh©
 = 
c
;

223 
eofch¨
 = 4;

226 
u£eof
 = 1;

229 
vîbo£
++;

232 
dŸøns
 = 0;

235 
ldñay
 = 
	`©oi
(
›èrg
);

238 
cdñay
 = 
	`©oi
(
›èrg
);

241 
	`ußge
();

245 i‡(
›töd
 !
¨gc
 - 1 || 
wh©
 =0Ë
	`ußge
();

246 
fûe
 = 
¨gv
[
›töd
];

248 
	`time
(&
°¨t
);

249 
œ°
 = 
°¨t
;

251 i‡(
wh©
 == 's') {

252 
	`Ârötf
(
°dîr
, "ASCII u∂ﬂd o‡\"%s\"\n", 
fûe
);

253 i‡(
cdñay
 || 
ldñay
)

254 
	`Ârötf
(
°dîr
, "Line delay: %d ms, character delay %d ms\n",

255 
ldñay
, 
cdñay
);

256 
	`Ârötf
(
°dîr
, "\n");

257 
	`fÊush
(
°dîr
);

258 
ªt
 = 
	`a£nd
(
fûe
);

260 
	`Ârötf
(
°dîr
, "ASCII dow∆ﬂd o‡\"%s\"\n\n", 
fûe
);

261 
	`fÊush
(
°dîr
);

262 
ªt
 = 
	`¨ecv
(
fûe
);

264 i‡(
vîbo£
) {

265 
	`°©s
(1);

266 
	`Ârötf
(
°dîr
, "... Done.\n");

267 
	`fÊush
(
°dout
);

270  (
ªt
 < 0 ? 1 : 0);

271 
	}
}

	@charmap.h

15 
	gwch¨m≠
[256] = {

	@common.c

22 #ifde‡
HAVE_CONFIG_H


23 
	~<c⁄fig.h
>

26 
	~"rcsid.h
"

27 
RCSID
("$Id: common.c,v 1.4 2001/02/21 18:16:14 misiek Exp $")

29 
	~"p‹t.h
"

30 
	~"möicom.h
"

31 
	~<°d¨g.h
>

33 #i‡
_HAVE_MACROS


35 *
	$pfix_home
(
s
)

36 *
s
;

38 #i‡
	`deföed
(
FILENAME_MAX
)

39 
buf
[
FILENAME_MAX
];

41 
buf
[256];

44 i‡(
s
 && *s != '/') {

45 
	`¢¥ötf
(
buf
, (buf),"%s/%s", 
homedú
, 
s
);

46 (
buf
);

48 (
s
);

49 
	}
}

52 #ifde‡
LOGFILE


54 
	$do_log
(*
löe
, ...)

56 
FILE
 *
logfûe
;

57 #ifde‡
_HAVE_MACROS


58 *
log«me
 = 
	`pfix_home
(
log‚ame
);

60 *
log«me
 = 
log‚ame
;

62 
tm
 *
±r
;

63 
time_t
 
âime
;

64 
va_li°
 
≠
;

66 i‡(
log‚ame
[0] == 0) ;

67 
logfûe
 = 
	`f›í
(
log«me
,"a");

68 i‡(!
logfûe
) ;

70 
	`va_°¨t
(
≠
, 
löe
);

71 
âime
=
	`time
(
NULL
);

72 
±r
=
	`loˇ…ime
(&
âime
);

74 
	`Ârötf
(
logfûe
,"%04d%02d%02d %02d:%02d:%02d ",

75 (
±r
->
tm_yór
)+1900,’å->
tm_m⁄
)+1,±r->
tm_mday
,

76 
±r
->
tm_hour
,±r->
tm_mö
,±r->
tm_£c
);

77 
	`vÂrötf
(
logfûe
, 
löe
, 
≠
);

78 
	`Ârötf
(
logfûe
, "\n");

79 
	`f˛o£
(
logfûe
);

80 
	}
}

82 
	$do_log
(*
löe
, ...)

85 
	}
}

	@config.c

29 #ifde‡
HAVE_CONFIG_H


30 
	~<c⁄fig.h
>

33 
	~"rcsid.h
"

34 
RCSID
("$Id: config.c,v 1.7 2000/10/28 12:51:43 walker Exp $")

36 
	~"p‹t.h
"

37 
	~"möicom.h
"

38 
	~"öé.h
"

40 
doc⁄v
();

43 
	$ªad_∑rms
()

45 
FILE
 *
Â
;

46 
f
;

47 
buf
[64];

48 *
p
;

51 i‡((
Â
 = 
	`f›í
(
∑rfûe
, "r")Ë=(
FILE
 *)
NULL
) {

52 i‡(
ªÆ_uid
 == 0) {

53 
	`Âuts
(

54 
	`_
("möicom: WARNING: c⁄figuøti⁄ fûênŸ found, usög deÁu…s\n"),
°dîr
);

55 
	`¶ìp
(2);

58 
	`Ârötf
(
°dîr
,

59 
	`_
("möicom:Åhîêi†nÿglobÆ c⁄figuøti⁄ fûê%s\n"), 
∑rfûe
);

60 
	`Âuts
(
	`_
("Ask you∏syßdmÅÿ¸óã o√ (wôh möicom -s).\n"), 
°dîr
);

61 
	`exô
(1);

63 
	`ªad∑rs
(
Â
, 1);

64 
	`f˛o£
(
Â
);

66 i‡((
Â
 = 
	`sf›í
(
µ¨fûe
, "r")Ë!(
FILE
 *)
NULL
) {

67 
	`ªad∑rs
(
Â
, 0);

68 
	`f˛o£
(
Â
);

72 
mfcﬁ‹
 = 
	`Jcﬁ‹
(
P_MFG
); 
mbcﬁ‹
 = Jcﬁ‹(
P_MBG
);

73 
tfcﬁ‹
 = 
	`Jcﬁ‹
(
P_TFG
); 
tbcﬁ‹
 = Jcﬁ‹(
P_TBG
);

74 
sfcﬁ‹
 = 
	`Jcﬁ‹
(
P_SFG
); 
sbcﬁ‹
 = Jcﬁ‹(
P_SBG
);

76 #i‡
_HAVE_MACROS


78 i‡(
P_MACROS
[0] != 0) {

79 i‡((
Â
 = 
	`sf›í
(
	`pfix_home
(
P_MACROS
), "r")Ë=
NULL
) {

80 i‡(
î∫o
 !
ENOENT
) {

81 
	`Ârötf
(
°dîr
,

82 
	`_
("möicom: c™nŸ o≥¿ma¸ÿfûê%s\n"), 
	`pfix_home
(
P_MACROS
));

83 
	`¶ìp
(1);

86 
	`ªadmacs
(
Â
, 0);

87 
	`f˛o£
(
Â
);

90 i‡(
P_CONVF
[0] != 0) {

91 
	`lﬂdc⁄v
(
P_CONVF
);

96 
f
 = 
PROTO_BASE
; f < 
MAXPROTO
; f++) {

97 i‡(
	`P_PNAME
(
f
)[0] && 
	`P_PIORED
(f) != 'Y' && P_PIORED(f) != 'N') {

98 
	`°∫˝y
(
buf
, 
	`P_PNAME
(
f
) - 2, (buf));

99 
	`°r˝y
(
	`P_PNAME
(
f
), 
buf
);

100 
	`P_PIORED
(
f
) = 'Y';

101 
	`P_PFULL
(
f
) = 'N';

104 
p
 = 
	`mba£«me
(
P_LOCK
);

105 i‡(
	`°∫cmp
(
p
, "LCK", 3) == 0) *p = 0;

106 
	}
}

111 
	$Jcﬁ‹
(
s
)

112 *
s
;

114 
c1
, 
c3
;

116 
c1
 = 
	`touµî
(
s
[0]);

117 
c3
 = 
	`touµî
(
s
[2]);

119 
c1
)

121 'G' :  (
GREEN
);

122 'Y' :  (
YELLOW
);

123 'W' :  (
WHITE
);

124 'R' :  (
RED
);

125 'M' :  (
MAGENTA
);

126 'C' :  (
CYAN
);

127 'B' : i‡(
c3
 == 'A')

128  (
BLACK
);

129 i‡(
c3
 == 'U')

130  (
BLUE
);

135 
	}
}

141 
	$wac˚ss
(
s
)

142 *
s
;

144 *
p
;

145 
buf
[128];

146 
°©
 
°t
;

151 i‡(
	`°©
(
s
, &
°t
) == 0) {

152 i‡(
	`ac˚ss
(
s
, 
W_OK
) == 0)

153 (
XA_OK_EXIST
);

156 
	`°∫˝y
(
buf
, 
s
, (buf)-1);

157 
buf
[(buf)-1]=0;

158 if((
p
 = 
	`°ºchr
(
buf
, '/')Ë=(*)
NULL
)

159 
	`°r˝y
(
buf
, ".");

161 *
p
 = '\0';

162 i‡(
	`ac˚ss
(
buf
, 
W_OK
) == 0)

163 (
XA_OK_NOTEXIST
);

165 
	}
}

167 #i‡
_HAVE_MACROS


176 
	$mgës
(
w
, 
x
, 
y
, 
s
, 
Àn
, 
maxl
)

177 
WIN
 *
w
;

178 
x
, 
y
;

179 *
s
;

180 
Àn
;

181 
maxl
;

183 
macs
 *
m
 = (mac†*)
s
;

185 i‡((
m
->
Êags
 & 
PRIVATE
Ë&& 
ªÆ_uid
 != 0) {

186 
	`wîr‹
(
	`_
("YouáreÇotállowedÅo changeÅhisÖarameter"));

189 
	`wloˇã
(
w
, 
x
, 
y
);

190 (Ë
	`wgës
(
w
, 
s
, 
Àn
, 
maxl
);

191 
m
->
Êags
 |
CHANGED
;

192 
	}
}

199 
	$pgës
(
w
, 
x
, 
y
, 
s
, 
Àn
, 
maxl
)

200 
WIN
 *
w
;

201 
x
, 
y
;

202 *
s
;

203 
Àn
;

204 
maxl
;

206 
∑rs
 *
p
 = (∑r†*)
s
;

208 i‡((
p
->
Êags
 & 
PRIVATE
Ë&& 
ªÆ_uid
 != 0) {

209 
	`wîr‹
(
	`_
("YouáreÇotállowedÅo changeÅhisÖarameter"));

212 
	`wloˇã
(
w
, 
x
, 
y
);

213 (Ë
	`wgës
(
w
, 
s
, 
Àn
, 
maxl
);

214 
p
->
Êags
 |
CHANGED
;

215 
	}
}

220 
	$m¨kch
(
s
)

221 *
s
;

223 
∑rs
 *
p
 = (∑r†*)
s
;

225 
p
->
Êags
 |
CHANGED
;

226 
	}
}

231 
	$p£ts
(
s
, 
w
)

232 *
s
, *
w
;

234 
∑rs
 *
p
 = (∑r†*)
s
;

236 i‡((
p
->
Êags
 & 
PRIVATE
Ë&& 
ªÆ_uid
 != 0) {

237 
	`wîr‹
(
	`_
("YouáreÇotállowedÅo changeÅhisÖarameter"));

240 
	`°r˝y
(
s
, 
w
);

241 
p
->
Êags
 |
CHANGED
;

242 
	}
}

248 
	$rwxgëch
()

250 
c
;

252 
c
 = 
	`wxgëch
();

253 i‡(
	`i¶owî
(
c
)Ë¯
	`touµî
(c);

254 i‡(
c
 == '\n' || c == '\r' || c == '\033') ('\n');

255 (
c
);

256 
	}
}

258 #ifde‡
LOGFILE


259 
	$dﬁog›t
()

261 
WIN
 *
w
;

262 
c
;

263 *
log‚°r
 = 
	`_
(" A - FileÇame (empty=disable) :"),

264 *
logc⁄n
 = 
	`_
(" B - Log connectsánd hangups :"),

265 *
logx„r
 = 
	`_
(" C - Log fileÅransfers :"),

266 *
que°i⁄
 = 
	`_
("Change which setting?");

268 
w
 = 
	`w›í
(5, 4, 75, 8, 
BDOUBLE
, 
°d©å
, 
mfcﬁ‹
, 
mbcﬁ‹
, 0, 0, 1);

270 
	`wtôÀ
(
w
, 
TMID
, 
	`_
("Logging options"));

271 
	`w¥ötf
(
w
, "%†%s\n", 
log‚°r
, 
P_LOGFNAME
);

272 
	`w¥ötf
(
w
, "%†%s\n", 
logc⁄n
, 
	`_
(
P_LOGCONN
));

273 
	`w¥ötf
(
w
, "%†%s\n", 
logx„r
, 
	`_
(
P_LOGXFER
));

274 
	`wloˇã
(
w
, 4, 4);

275 
	`wputs
(
w
, 
que°i⁄
);

276 
	`wªdøw
(
w
, 1);

278 
	`wloˇã
(
w
, 
	`°æí
(
que°i⁄
) + 5, 5);

279 
c
 = 
	`rwxgëch
();

280 
c
) {

282 
	`w˛o£
(
w
, 1);

285 
	`pgës
(
w
, 
	`°æí
(
log‚°r
) + 1, 0,

286 
P_LOGFNAME
, 
PARS_VAL_LEN
, PARS_VAL_LEN);

287 
	`°r˝y
(
log‚ame
,
P_LOGFNAME
);

290 
	`°r˝y
(
P_LOGCONN
, 
	`ye¢o
(P_LOGCONN[0] == 'N'));

291 
	`wloˇã
(
w
, 
	`°æí
(
logc⁄n
) + 1, 1);

292 
	`w¥ötf
(
w
, "%† ", 
	`_
(
P_LOGCONN
));

293 
	`m¨kch
(
P_LOGCONN
);

296 
	`°r˝y
(
P_LOGXFER
, 
	`ye¢o
(P_LOGXFER[0] == 'N'));

297 
	`wloˇã
(
w
, 
	`°æí
(
logx„r
) + 1, 2);

298 
	`w¥ötf
(
w
, "%† ", 
	`_
(
P_LOGXFER
));

299 
	`m¨kch
(
P_LOGXFER
);

305 
	}
}

308 
	$d›©h
()

310 
WIN
 *
w
;

311 
c
;

312 * 
dow∆ﬂd_dúe˘‹y
 = 
	`_
(" A - Download directory :"),

313 * 
u∂ﬂd_dúe˘‹y
 = 
	`_
(" B - Upload directory :"),

314 * 
s¸ùt_dúe˘‹y
 = 
	`_
(" C - Script directory :"),

315 * 
s¸ùt_¥ogøm
 = 
	`_
(" D - ScriptÖrogram :"),

316 * 
kîmô_¥ogøm
 = 
	`_
(" E - KermitÖrogram :"),

317 * 
log_£âögs
 = 
	`_
(" F - Logging options"),

318 * 
que°i⁄
 = 
	`_
("Change which setting?");

320 
w
 = 
	`w›í
(5, 5, 75, 12, 
BDOUBLE
, 
°d©å
, 
mfcﬁ‹
, 
mbcﬁ‹
, 0, 0, 1);

321 
	`w¥ötf
(
w
, "%†%.44s\n", 
dow∆ﬂd_dúe˘‹y
, 
P_DOWNDIR
);

322 
	`w¥ötf
(
w
, "%†%.44s\n", 
u∂ﬂd_dúe˘‹y
, 
P_UPDIR
);

323 
	`w¥ötf
(
w
, "%†%.44s\n", 
s¸ùt_dúe˘‹y
, 
P_SCRIPTDIR
);

324 
	`w¥ötf
(
w
, "%†%.44s\n", 
s¸ùt_¥ogøm
, 
P_SCRIPTPROG
);

325 
	`w¥ötf
(
w
, "%†%.44s\n", 
kîmô_¥ogøm
, 
P_KERMIT
);

326 #ifde‡
LOGFILE


327 
	`w¥ötf
(
w
, "%s\n", 
log_£âögs
);

329 
	`wloˇã
(
w
, 4, 8);

330 
	`wputs
(
w
, 
que°i⁄
);

332 
	`wªdøw
(
w
, 1);

335 
	`wloˇã
(
w
, 
	`°æí
 (
que°i⁄
) + 5, 8);

336 
c
 = 
	`rwxgëch
();

337 
c
) {

339 
	`w˛o£
(
w
, 1);

342 
	`pgës
(
w
, 
	`°æí
 (
dow∆ﬂd_dúe˘‹y
Ë+ 1, 0, 
P_DOWNDIR
, 64, 64);

343 
	`öô_dú
('d');

346 
	`pgës
(
w
, 
	`°æí
 (
u∂ﬂd_dúe˘‹y
Ë+ 1, 1, 
P_UPDIR
, 64, 64);

347 
	`öô_dú
('u');

350 
	`pgës
(
w
, 
	`°æí
 (
s¸ùt_dúe˘‹y
Ë+ 1, 2, 
P_SCRIPTDIR
, 64, 64);

353 
	`pgës
(
w
, 
	`°æí
 (
s¸ùt_¥ogøm
Ë+ 1, 3, 
P_SCRIPTPROG
, 64, 64);

356 
	`pgës
(
w
, 
	`°æí
 (
kîmô_¥ogøm
Ë+ 1, 4, 
P_KERMIT
, 64, 64);

358 #ifde‡
LOGFILE


360 
	`dﬁog›t
();

367 
	}
}

369 *
	$ye¢o
(
k
)

370 
k
;

372 (
k
 ? 
	`N_
("Yes") : N_("No "));

373 
	}
}

378 
	$öpuçrŸo
(
w
, 
n
)

379 
WIN
 *
w
;

380 
n
;

382 
c
 = 0;

384 
m∑rs
[
PROTO_BASE
 + 
n
].
Êags
 |
CHANGED
;

386 i‡(
	`P_PNAME
(
n
)[0] == '\0') {

387 
	`P_PNN
(
n
) = 'Y';

388 
	`P_PUD
(
n
) = 'U';

389 
	`P_PFULL
(
n
) = 'N';

390 
	`P_PPROG
(
n
)[0] = 0;

391 
	`P_PIORED
(
n
) = 'Y';

392 
	`wloˇã
(
w
, 4, 
n
+1);

393 
	`wputs
(
w
, " ");

395 
	`wloˇã
(
w
, 4, 
n
+1);

396 (Ë
	`wgës
(
w
, 
	`P_PNAME
(
n
), 10, 64);

397 
	`pgës
(
w
, 15, 
n
+1, 
	`P_PPROG
(n), 31, 64);

399 
	`wloˇã
(
w
, 47, 
n
+1);

400 
	`w¥ötf
(
w
, "%c", 
	`P_PNN
(
n
));

401 
c
 = 
	`rwxgëch
();

402 i‡(
c
 ='Y'Ë
	`P_PNN
(
n
) = 'Y';

403 i‡(
c
 ='N'Ë
	`P_PNN
(
n
) = 'N';

404 } 
c
 != '\r' && c != '\n');

406 
	`wloˇã
(
w
, 52, 
n
+1);

407 
	`w¥ötf
(
w
, "%c", 
	`P_PUD
(
n
));

408 
c
 = 
	`rwxgëch
();

409 i‡(
c
 ='U'Ë
	`P_PUD
(
n
) = 'U';

410 i‡(
c
 ='D'Ë
	`P_PUD
(
n
) = 'D';

411 } 
c
 != '\r' && c != '\n');

413 
	`wloˇã
(
w
, 57, 
n
+1);

414 
	`w¥ötf
(
w
, "%c", 
	`P_PFULL
(
n
));

415 
c
 = 
	`rwxgëch
();

416 i‡(
c
 ='Y'Ë
	`P_PFULL
(
n
) = 'Y';

417 i‡(
c
 ='N'Ë
	`P_PFULL
(
n
) = 'N';

418 } 
c
 != '\r' && c != '\n');

420 
	`wloˇã
(
w
, 65, 
n
+1);

421 
	`w¥ötf
(
w
, "%c", 
	`P_PIORED
(
n
));

422 
c
 = 
	`rwxgëch
();

423 i‡(
c
 ='Y'Ë
	`P_PIORED
(
n
) = 'Y';

424 i‡(
c
 ='N'Ë
	`P_PIORED
(
n
) = 'N';

425 } 
c
 != '\r' && c != '\n');

427 
	`wloˇã
(
w
, 73, 
n
+1);

428 
	`w¥ötf
(
w
, "%c", 
	`P_MUL
(
n
));

429 
c
 = 
	`rwxgëch
();

430 i‡(
c
 ='Y'Ë
	`P_MUL
(
n
) = 'Y';

431 i‡(
c
 ='N'Ë
	`P_MUL
(
n
) = 'N';

432 } 
c
 != '\r' && c != '\n');

433 
	}
}

435 
	$d›rŸo
()

437 
WIN
 *
w
;

438 
f
, 
c
;

439 * 
zmodem_dow∆ﬂd
 = 
	`_
("M Zmodem download stringáctivates..."),

440 * 
u£_fûíame_£À˘i⁄
 = 
	`_
("N Use filename selection window......"),

441 * 
¥om±_downdú
 = 
	`_
("O Prompt for download directory......"),

442 * 
que°i⁄
 = 
	`_
("Change which setting? (SPACEÅo delete)");

444 
w
 = 
	`w›í
(1, 3, 78, 20, 
BDOUBLE
, 
°d©å
, 
mfcﬁ‹
, 
mbcﬁ‹
, 0, 0, 1);

445 
	`wputs
(
w
, 
	`_
(" Name Program"));

446 
	`wloˇã
(
w
, 46, 0);

447 
	`wputs
(
w
, 
	`_
("Name U/D FullScr IO-Red. Multi"));

448 
f
 = 0; f < 12; f++) {

449 
	`wloˇã
(
w
, 1, 
f
+1);

450 i‡(
	`P_PNAME
(
f
)[0])

451 
	`w¥ötf
(
w
, "%c %-10.10s %-31.31s %c %c %c %c %c",

452 'A' + 
f
,

453 
	`P_PNAME
(
f
), 
	`P_PPROG
(f),

454 
	`P_PNN
(
f
), 
	`P_PUD
(f),

455 
	`P_PFULL
(
f
), 
	`P_PIORED
(f),

456 
	`P_MUL
(
f
));

458 
	`w¥ötf
(
w
, "%¯ -", 'A' + 
f
);

460 
	`wloˇã
(
w
, 1, 13);

461 
	`w¥ötf
(
w
, "%†%c", 
zmodem_dow∆ﬂd
, 
P_PAUTO
[0]);

462 
	`wloˇã
(
w
, 1, 14);

463 
	`w¥ötf
(
w
, "%†%s", 
u£_fûíame_£À˘i⁄
, 
	`_
(
P_FSELW
));

464 
	`wloˇã
(
w
, 1, 15);

465 
	`w¥ötf
(
w
, "%†%s", 
¥om±_downdú
, 
	`_
(
P_ASKDNDIR
));

467 
	`wloˇã
(
w
, 3, 17);

468 
	`wputs
(
w
, 
que°i⁄
);

469 
	`wªdøw
(
w
, 1);

472 
	`wloˇã
(
w
, 
	`°æí
 (
que°i⁄
) + 4, 17);

473 
c
 = 
	`rwxgëch
();

474 i‡(
c
 >'A' && c <'L'Ë
	`öpuçrŸo
(
w
, c - 'A');

475 i‡(
c
 == ' ') {

476 
	`wloˇã
(
w
, 3, 17);

477 
	`wputs
(
w
, 
	`_
("Delete whichÖrotocol? "));

478 
	`w˛ªﬁ
(
w
);

479 
c
 = 
	`rwxgëch
();

480 i‡(
c
 >= 'A' && c <= 'L') {

481 
	`P_PNAME
(
c
 - 'A')[0] = '\0';

482 
m∑rs
[
PROTO_BASE
 + (
c
 - 'A')].
Êags
 |
CHANGED
;

483 
	`wloˇã
(
w
, 3, 
c
 - 'A' + 1);

484 
	`w˛ªﬁ
(
w
);

485 
	`wputs
(
w
, " -");

487 
	`wloˇã
(
w
, 3, 17);

488 
	`wputs
(
w
, 
que°i⁄
);

489 
c
 = ' ';

491 i‡(
c
 == 'M') {

492 
	`wloˇã
(
w
, 
	`°æí
 (
zmodem_dow∆ﬂd
) + 2, 13);

493 
	`w¥ötf
(
w
, " \b");

494 
c
 = 
	`rwxgëch
();

495 i‡(
c
 >= 'A' && c <= 'L') {

496 
P_PAUTO
[0] = 
c
;

497 
	`m¨kch
(
P_PAUTO
);

498 
	`w¥ötf
(
w
, "%c", 
c
);

499 } i‡(
c
 == '\n' || c == ' ') {

500 
P_PAUTO
[0] = ' ';

501 
	`m¨kch
(
P_PAUTO
);

503 
	`w¥ötf
(
w
, "%c", 
P_PAUTO
[0]);

505 
c
 = 0;

507 i‡(
c
 == 'N') {

508 
	`°r˝y
(
P_FSELW
, 
	`ye¢o
(P_FSELW[0] == 'N'));

509 i‡(
P_FSELW
[0] == 'N') {

510 
	`°r˝y
(
P_ASKDNDIR
, "No ");

511 
	`wloˇã
(
w
, 
	`°æí
 (
¥om±_downdú
) + 2, 15);

512 
	`w¥ötf
(
w
, "%†", 
	`_
(
P_ASKDNDIR
));

513 
	`m¨kch
(
P_ASKDNDIR
);

515 
	`wloˇã
(
w
, 
	`°æí
 (
u£_fûíame_£À˘i⁄
) + 2, 14);

516 
	`w¥ötf
(
w
, "%†", 
	`_
(
P_FSELW
));

517 
	`m¨kch
(
P_FSELW
);

519 i‡(
c
 == 'O') {

520 
	`°r˝y
(
P_ASKDNDIR
, 
	`ye¢o
(P_ASKDNDIR[0] == 'N'));

521 i‡(
P_ASKDNDIR
[0] == 'Y') {

522 
	`°r˝y
(
P_FSELW
, "Yes");

523 
	`wloˇã
(
w
, 
	`°æí
 (
u£_fûíame_£À˘i⁄
) + 2, 14);

524 
	`w¥ötf
(
w
, "%†", 
	`_
(
P_FSELW
));

525 
	`m¨kch
(
P_FSELW
);

527 
	`wloˇã
(
w
, 
	`°æí
 (
¥om±_downdú
) + 2, 15);

528 
	`w¥ötf
(
w
, "%†", 
	`_
(
P_ASKDNDIR
));

529 
	`m¨kch
(
P_ASKDNDIR
);

531 } 
c
 != '\n');

532 
	`w˛o£
(
w
, 1);

533 
	}
}

535 
	$do£rül
()

537 
WIN
 *
w
;

538 * 
£rül_devi˚
 = 
	`_
(" A - Serial Device :"),

539 * 
lockfûe_loˇti⁄
 = 
	`_
(" B - Lockfile Location :"),

540 * 
ˇŒö_¥ogøm
 = 
	`_
(" C - Callin Program :"),

541 * 
ˇŒout_¥ogøm
 = 
	`_
(" D - Callout Program :"),

542 * 
bps_∑r_bôs
 = 
	`_
(" E - Bps/Par/Bits :"),

543 * 
h¨dw¨e_Êow_c⁄åﬁ
 = 
	`_
(" F - Hardware Flow Control :"),

544 * 
so·w¨e_Êow_c⁄åﬁ
 = 
	`_
(" G - Software Flow Control :"),

545 * 
que°i⁄
 = 
	`_
("Change which setting?");

547 
w
 = 
	`w›í
(5, 4, 75, 12, 
BDOUBLE
, 
°d©å
, 
mfcﬁ‹
, 
mbcﬁ‹
, 0, 0, 1);

548 
	`w¥ötf
(
w
, "%†%.41s\n", 
£rül_devi˚
, 
P_PORT
);

549 
	`w¥ötf
(
w
, "%†%.41s\n", 
lockfûe_loˇti⁄
, 
P_LOCK
);

550 
	`w¥ötf
(
w
, "%†%.41s\n", 
ˇŒö_¥ogøm
, 
P_CALLIN
);

551 
	`w¥ötf
(
w
, "%†%.41s\n", 
ˇŒout_¥ogøm
, 
P_CALLOUT
);

552 
	`w¥ötf
(
w
, "%s %s %s%s%s\n",

553 
bps_∑r_bôs
, 
P_BAUDRATE
, 
P_BITS
, 
P_PARITY
, 
P_STOPB
);

554 
	`w¥ötf
(
w
, "%†%s\n", 
h¨dw¨e_Êow_c⁄åﬁ
, 
	`_
(
P_HASRTS
));

555 
	`w¥ötf
(
w
, "%†%s\n", 
so·w¨e_Êow_c⁄åﬁ
, 
	`_
(
P_HASXON
));

556 
	`wloˇã
(
w
, 4, 8);

557 
	`wputs
(
w
, 
que°i⁄
);

558 
	`wªdøw
(
w
, 1);

561 
	`wloˇã
(
w
, 
	`°æí
 (
que°i⁄
) + 5, 8);

562 
	`rwxgëch
()) {

564 
	`w˛o£
(
w
, 1);

567 
	`pgës
(
w
, 
	`°æí
 (
£rül_devi˚
Ë+ 1, 0, 
P_PORT
, 64, 64);

570 
	`pgës
(
w
, 
	`°æí
 (
lockfûe_loˇti⁄
Ë+ 1, 1, 
P_LOCK
, 64, 64);

573 
	`pgës
(
w
, 
	`°æí
 (
ˇŒö_¥ogøm
Ë+ 1, 2, 
P_CALLIN
, 64, 64);

576 
	`pgës
(
w
, 
	`°æí
 (
ˇŒout_¥ogøm
Ë+ 1, 3, 
P_CALLOUT
, 64, 64);

579 
	`gë_bbp
(
P_BAUDRATE
, 
P_BITS
, 
P_PARITY
, 
P_STOPB
, 0);

580 i‡(
p‹tfd
 >0Ë
	`p‹t_öô
();

581 
	`wloˇã
(
w
, 
	`°æí
 (
bps_∑r_bôs
) + 1, 4);

582 
	`w¥ötf
(
w
, "%s %s%s%s \n",

583 
P_BAUDRATE
, 
P_BITS
, 
P_PARITY
, 
P_STOPB
);

584 i‡(
°
 !
NIL_WIN
Ë
	`mode_°©us
();

585 
	`m¨kch
(
P_BAUDRATE
);

586 
	`m¨kch
(
P_BITS
);

587 
	`m¨kch
(
P_PARITY
);

588 
	`m¨kch
(
P_STOPB
);

591 
	`°r˝y
(
P_HASRTS
, 
	`ye¢o
(P_HASRTS[0] == 'N'));

592 
	`wloˇã
(
w
, 
	`°æí
 (
h¨dw¨e_Êow_c⁄åﬁ
) + 1, 5);

593 
	`w¥ötf
(
w
, "%†", 
	`_
(
P_HASRTS
));

594 i‡(
p‹tfd
 >0Ë
	`p‹t_öô
();

595 
	`m¨kch
(
P_HASRTS
);

598 
	`°r˝y
(
P_HASXON
, 
	`ye¢o
(P_HASXON[0] == 'N'));

599 
	`wloˇã
(
w
, 
	`°æí
 (
so·w¨e_Êow_c⁄åﬁ
) + 1, 6);

600 
	`w¥ötf
(
w
, "%†", 
	`_
(
P_HASXON
));

601 i‡(
p‹tfd
 >0Ë
	`p‹t_öô
();

602 
	`m¨kch
(
P_HASXON
);

608 
	}
}

610 * 
	$s•d
(*
•typ
)

612 i‡(
•typ
[0] == 'd')

613  (
	`_
("DTE speed "));

615  (
	`_
("line speed"));

616 
	}
}

618 
	$domodem
()

620 
WIN
 *
w
;

621 *
°r
;

622 
c
, 
x
, 
y
, 
ypos
, 
maxl
, 
°rög_size
;

623 * 
öô_°rög
 = 
	`_
(" A - Init string ........."),

624 * 
ª£t_°rög
 = 
	`_
(" B - Reset string ........"),

625 * 
dülög_¥efix_1
 = 
	`_
(" C - DialingÖrefix #1...."),

626 * 
dülög_suffix_1
 = 
	`_
(" D - Dialing suffix #1...."),

627 * 
dülög_¥efix_2
 = 
	`_
(" E - DialingÖrefix #2...."),

628 * 
dülög_suffix_2
 = 
	`_
(" F - Dialing suffix #2...."),

629 * 
dülög_¥efix_3
 = 
	`_
(" G - DialingÖrefix #3...."),

630 * 
dülög_suffix_3
 = 
	`_
(" H - Dialing suffix #3...."),

631 * 
c⁄√˘_°rög
 = 
	`_
(" I - Connect string ......"),

632 * 
no_c⁄√˘_°rögs
 = 
	`_
(" J - No connect strings .."),

633 * 
h™gup_°rög
 = 
	`_
(" K - Hang-up string ......"),

634 * 
dül_ˇn˚l_°rög
 = 
	`_
(" L - Dial cancel string .."),

635 * 
dül_time
 = 
	`_
(" M - DialÅime ..........."),

636 * 
dñay_bef‹e_ªdül
 = 
	`_
(" N - Delay beforeÑedial ."),

637 * 
numbî_of_åõs
 = 
	`_
(" O - Number ofÅries ....."),

638 * 
då_dr›_time
 = 
	`_
(" P - DTR dropÅime (0=no)."),

639 * 
auto_bps_dëe˘
 = 
	`_
(" Q - Auto bps detect ....."),

640 * 
modem_has_dcd_löe
 = 
	`_
(" R - Modem has DCDÜine .."),

641 * 
shown_•ìd
 = 
	`_
(" S - StatusÜine shows ..."),

642 * 
mu…i_node
 = 
	`_
(" T - Multi-line untag ...."),

643 * 
que°i⁄
 = 
	`_
("Change which setting?");

645 
w
 = 
	`w›í
(2, 2, 77, 22, 
BDOUBLE
, 
°d©å
, 
mfcﬁ‹
, 
mbcﬁ‹
, 0, 0, 1);

647 
dúÊush
 = 0;

648 
	`wtôÀ
(
w
, 
TMID
, 
	`_
("Modemánd dialingÖarameter setup"));

649 
	`w¥ötf
(
w
, "\n");

650 
	`w¥ötf
(
w
, "%†%.48s\n", 
öô_°rög
, 
P_MINIT
);

651 
	`w¥ötf
(
w
, "%†%.48s\n", 
ª£t_°rög
, 
P_MRESET
);

652 
	`w¥ötf
(
w
, "%†%.48s\n", 
dülög_¥efix_1
, 
P_MDIALPRE
);

653 
	`w¥ötf
(
w
, "%†%.48s\n", 
dülög_suffix_1
, 
P_MDIALSUF
);

654 
	`w¥ötf
(
w
, "%†%.48s\n", 
dülög_¥efix_2
, 
P_MDIALPRE2
);

655 
	`w¥ötf
(
w
, "%†%.48s\n", 
dülög_suffix_2
, 
P_MDIALSUF2
);

656 
	`w¥ötf
(
w
, "%†%.48s\n", 
dülög_¥efix_3
, 
P_MDIALPRE3
);

657 
	`w¥ötf
(
w
, "%†%.48s\n", 
dülög_suffix_3
, 
P_MDIALSUF3
);

658 
	`w¥ötf
(
w
, "%†%.48s\n", 
c⁄√˘_°rög
, 
P_MCONNECT
);

659 
	`w¥ötf
(
w
, "%†%-20.20† %.20s\n", 
no_c⁄√˘_°rögs
, 
P_MNOCON1
, 
P_MNOCON2
);

660 
	`wloˇã
(
w
, 
	`°æí
 (
no_c⁄√˘_°rögs
) + 1, 11);

661 
	`w¥ötf
(
w
, "%-20.20† %.20s\n", 
P_MNOCON3
, 
P_MNOCON4
);

662 
	`w¥ötf
(
w
, "%†%.48s\n", 
h™gup_°rög
, 
P_MHANGUP
);

663 
	`w¥ötf
(
w
, "%†%.48s\n", 
dül_ˇn˚l_°rög
, 
P_MDIALCAN
);

664 
	`w¥ötf
(
w
, "\n");

665 
	`w¥ötf
(
w
, "%†%.3s\n", 
dül_time
, 
P_MDIALTIME
);

666 
	`w¥ötf
(
w
, "%†%.3s\n", 
dñay_bef‹e_ªdül
, 
P_MRDELAY
);

667 
	`w¥ötf
(
w
, "%†%.3s\n", 
numbî_of_åõs
, 
P_MRETRIES
);

668 
	`w¥ötf
(
w
, "%†%.3s\n", 
då_dr›_time
, 
P_MDROPDTR
);

669 
	`wloˇã
(
w
, 34, 15);

670 
	`w¥ötf
(
w
, "%†%s\n", 
auto_bps_dëe˘
, 
	`_
(
P_MAUTOBAUD
));

671 
	`wloˇã
(
w
, 34, 16);

672 
	`w¥ötf
(
w
, "%†%s\n", 
modem_has_dcd_löe
, 
	`_
(
P_HASDCD
));

673 
	`wloˇã
(
w
, 34, 17);

674 
	`w¥ötf
(
w
, "%†%s\n", 
shown_•ìd
, 
	`s•d
(
P_SHOWSPD
));

675 
	`wloˇã
(
w
, 34, 18);

676 
	`w¥ötf
(
w
, "%†%s\n", 
mu…i_node
, 
	`_
(
P_MULTILINE
));

678 
	`wloˇã
(
w
, 1, 20);

679 
	`w¥ötf
(
w
, "%†", 
que°i⁄
);

680 
x
 = 
w
->
curx
; 
y
 = w->
cury
;

681 
	`w¥ötf
(
w
, 
	`_
(" (Return or EscÅoÉxit)"));

682 
	`wªdøw
(
w
, 1);

685 
	`wloˇã
(
w
, 
x
, 
y
);

686 
	`wÊush
();

687 
c
 = 
	`rwxgëch
();

688 
ypos
 = 1;

689 
maxl
 = 64;

690 
°rög_size
 = 0;

691 
c
) {

693 i‡(
°rög_size
 == 0)

694 
°rög_size
 = 
	`°æí
 (
dül_time
);

696 i‡(
°rög_size
 == 0)

697 
°rög_size
 = 
	`°æí
 (
dñay_bef‹e_ªdül
);

699 i‡(
°rög_size
 == 0)

700 
°rög_size
 = 
	`°æí
 (
numbî_of_åõs
);

702 i‡(
°rög_size
 == 0)

703 
°rög_size
 = 
	`°æí
 (
då_dr›_time
);

705 
ypos
++;

706 
maxl
 = 4;

708 i‡(
°rög_size
 == 0)

709 
°rög_size
 = 
	`°æí
 (
h™gup_°rög
);

711 i‡(
°rög_size
 == 0)

712 
°rög_size
 = 
	`°æí
 (
dül_ˇn˚l_°rög
);

714 
ypos
 -= 2;

715 
c
 += 3;

717 i‡(
°rög_size
 == 0)

718 
°rög_size
 = 
	`°æí
 (
öô_°rög
);

720 i‡(
°rög_size
 == 0)

721 
°rög_size
 = 
	`°æí
 (
ª£t_°rög
);

723 i‡(
°rög_size
 == 0)

724 
°rög_size
 = 
	`°æí
 (
dülög_¥efix_1
);

726 i‡(
°rög_size
 == 0)

727 
°rög_size
 = 
	`°æí
 (
dülög_suffix_1
);

729 i‡(
°rög_size
 == 0)

730 
°rög_size
 = 
	`°æí
 (
dülög_¥efix_2
);

732 i‡(
°rög_size
 == 0)

733 
°rög_size
 = 
	`°æí
 (
dülög_suffix_2
);

735 i‡(
°rög_size
 == 0)

736 
°rög_size
 = 
	`°æí
 (
dülög_¥efix_3
);

738 i‡(
°rög_size
 == 0)

739 
°rög_size
 = 
	`°æí
 (
dülög_suffix_3
);

741 i‡(
°rög_size
 == 0)

742 
°rög_size
 = 
	`°æí
 (
c⁄√˘_°rög
);

745 
°r
 = 
P_MINIT
 + (
c
 - 'A'Ë* (
∑rs
);

746 
	`pgës
(
w
, 
°rög_size
 + 1, 
ypos
 + (
c
 - 'A'), 
°r
, 
maxl
, maxl);

749 
°rög_size
 = 
	`°æí
 (
no_c⁄√˘_°rögs
);

751 
	`pgës
(
w
, 
°rög_size
 + 1, 10, 
P_MNOCON1
, 20, 64);

752 
	`pgës
(
w
, 
°rög_size
 + 1 + 22, 10, 
P_MNOCON2
, 20, 64);

753 
	`pgës
(
w
, 
°rög_size
 + 1 , 11, 
P_MNOCON3
, 20, 64);

754 
	`pgës
(
w
, 
°rög_size
 + 1 + 22, 11, 
P_MNOCON4
, 20, 64);

757 
	`p£ts
(
P_MAUTOBAUD
, 
	`ye¢o
(P_MAUTOBAUD[0] == 'N'));

758 
	`wloˇã
(
w
, 35 + 
	`°æí
 (
auto_bps_dëe˘
), 15);

759 
	`wputs
(
w
, 
	`_
(
P_MAUTOBAUD
));

762 
	`p£ts
(
P_HASDCD
, 
	`ye¢o
(P_HASDCD[0] == 'N'));

763 
	`wloˇã
(
w
, 35 + 
	`°æí
 (
modem_has_dcd_löe
), 16);

764 
	`wputs
(
w
, 
	`_
(
P_HASDCD
));

767 
	`p£ts
(
P_SHOWSPD
, P_SHOWSPD[0] == 'd' ? "l": "d");

768 
	`wloˇã
(
w
, 35 + 
	`°æí
 (
shown_•ìd
), 17);

769 
	`wputs
(
w
, 
	`s•d
(
P_SHOWSPD
));

770 
	`mode_°©us
();

773 
	`p£ts
(
P_MULTILINE
, 
	`ye¢o
(P_MULTILINE[0] == 'N' ));

774 
	`wloˇã
(
w
, 35 + 
	`°æí
(
mu…i_node
), 18);

775 
	`wputs
(
w
, 
	`_
(
P_MULTILINE
));

779 
dúÊush
 = 1;

780 
	`w˛o£
(
w
, 1);

786 
	}
}

792 
	$dos¸keyb
()

794 
WIN
 *
w
, *
w1
;

795 
c
;

796 
⁄˚
 = 0;

797 
˛r
 = 1;

798 
tmp_c
;

799 
buf
[16];

800 
möy
 = 4,

801 
maxy
 = 17;

802 
ﬁd_°©
 = 
P_STATLINE
[0];

803 * 
comm™d_key
 = 
	`_
(" A - Command key is :"),

804 * 
back•a˚_key
 = 
	`_
(" B - Backspace key sends :"),

805 * 
°©us_löe
 = 
	`_
(" C - StatusÜine is :"),

806 * 
Æ¨m_sound
 = 
	`_
(" D - Alarm sound :"),

807 * 
f‹eground_cﬁ‹_míu
 = 
	`_
(" E - Foreground Color (menu):"),

808 * 
background_cﬁ‹_míu
 = 
	`_
(" F - Background Color (menu):"),

809 * 
f‹eground_cﬁ‹_ãrm
 = 
	`_
(" G - Foreground Color (term):"),

810 * 
background_cﬁ‹_ãrm
 = 
	`_
(" H - Background Color (term):"),

811 * 
f‹eground_cﬁ‹_°©
 = 
	`_
(" I - Foreground Color (stat):"),

812 * 
background_cﬁ‹_°©
 = 
	`_
(" J - Background Color (stat):"),

813 * 
hi°‹y_buf„r_size
 = 
	`_
(" K - History Buffer Size :"),

814 * 
que°i⁄
 = 
	`_
("Change which setting? (EscÅoÉxit)");

815 #i‡
_HAVE_MACROS


816 * 
ma¸os_fûe
 = 
	`_
(" L - Macros file :"),

817 * 
ma¸os_íabÀd
 = 
	`_
(" N - MacrosÉnabled :"),

818 * 
ch¨a˘î_c⁄vîsi⁄
 = 
	`_
(" O - Character conversion :");

820 
FILE
 *
Â
;

822 
möy
 = 3;

823 
maxy
 = 20;

826 
w
 = 
	`w›í
(15, 
möy
, 69, 
maxy
, 
BDOUBLE
, 
°d©å
, 
mfcﬁ‹
, 
mbcﬁ‹
, 0, 0, 1);

828 
	`wtôÀ
(
w
, 
TMID
, 
	`_
("Screenánd keyboard"));

830 
	`w¥ötf
(
w
, "\n%†%s\n", 
comm™d_key
, 
P_ESCAPE
);

831 
	`w¥ötf
(
w
, "%†%s\n", 
back•a˚_key
, 
P_BACKSPACE
);

832 
	`w¥ötf
(
w
, "%†%s\n", 
°©us_löe
, 
	`_
(
P_STATLINE
));

833 
	`w¥ötf
(
w
, "%†%s\n", 
Æ¨m_sound
, 
	`_
(
P_SOUND
));

835 
	`w¥ötf
(
w
, "%†%s\n", 
f‹eground_cﬁ‹_míu
, 
	`_
(
J_cﬁ
[
mfcﬁ‹
]));

836 
	`w¥ötf
(
w
, "%†%s\n", 
background_cﬁ‹_míu
, 
	`_
(
J_cﬁ
[
mbcﬁ‹
]));

837 
	`w¥ötf
(
w
, "%†%s\n", 
f‹eground_cﬁ‹_ãrm
, 
	`_
(
J_cﬁ
[
tfcﬁ‹
]));

838 
	`w¥ötf
(
w
, "%†%s\n", 
background_cﬁ‹_ãrm
, 
	`_
(
J_cﬁ
[
tbcﬁ‹
]));

839 
	`w¥ötf
(
w
, "%†%s\n", 
f‹eground_cﬁ‹_°©
, 
	`_
(
J_cﬁ
[
sfcﬁ‹
]));

840 
	`w¥ötf
(
w
, "%†%s\n", 
background_cﬁ‹_°©
, 
	`_
(
J_cﬁ
[
sbcﬁ‹
]));

843 
	`w¥ötf
(
w
, "%†%s\n", 
hi°‹y_buf„r_size
, 
P_HISTSIZE
);

845 #i‡
_HAVE_MACROS


847 
	`w¥ötf
(
w
, "%†%s\n", 
ma¸os_fûe
, 
P_MACROS
);

848 
	`w¥ötf
(
w
, 
	`_
(" M - Edit Macros\n"));

849 
	`w¥ötf
(
w
, "%†%s\n", 
ma¸os_íabÀd
, 
	`_
(
P_MACENAB
));

850 
	`w¥ötf
(
w
, "%†%s\n", 
ch¨a˘î_c⁄vîsi⁄
, 
P_CONVF
);

853 
	`wªdøw
(
w
, 1);

856 i‡(
˛r
) {

857 
	`wloˇã
(
w
, 2, 
maxy
 - 
möy
);

858 
	`w¥ötf
(
w
, "%†", 
que°i⁄
);

859 
	`w˛ªﬁ
(
w
);

860 
˛r
 = 0;

862 
	`wloˇã
(
w
, 
	`°æí
 (
que°i⁄
Ë+ 3, 
maxy
 - 
möy
);

864 i‡(
⁄˚
) {

865 
c
 = 
⁄˚
;

866 
⁄˚
 = 0;

867 } 
c
 = 
	`rwxgëch
();

869 i‡(!
u£cﬁ‹
 && (
c
 >= 'E' && c <= 'J')) {

870 
	`wîr‹
(
	`_
("You can't change colors in blackánd white mode"));

874 
c
) {

878 i‡(
mfcﬁ‹
 =
mbcﬁ‹
)

880 
tmp_c
=
mfcﬁ‹
;

881 
mfcﬁ‹
=
WHITE
;

882 
mbcﬁ‹
=
BLACK
;

883 
	`wîr‹
(
	`_
("Menu foreground == background color, change!"));

884 
mfcﬁ‹
=
tmp_c
;

885 
mbcﬁ‹
=
tmp_c
;

888 i‡(
tfcﬁ‹
 =
tbcﬁ‹
)

890 
tmp_c
=
mfcﬁ‹
;

891 
mfcﬁ‹
=
WHITE
;

892 
mbcﬁ‹
=
BLACK
;

893 
	`wîr‹
(
	`_
("Terminal foreground == background color, change!"));

894 
mfcﬁ‹
=
tmp_c
;

895 
mbcﬁ‹
=
tmp_c
;

903 i‡(
	`©oi
(
P_HISTSIZE
Ë!
num_hi°_löes
) {

904 
w1
 = 
	`w›í
(14, 9, 70, 15, 
BSINGLE
, 
°d©å
, 
mfcﬁ‹
, 
mbcﬁ‹
, 0, 0, 1);

905 
	`wtôÀ
(
w1
, 
TMID
, 
	`_
("History Buffer Size"));

906 
	`wputs
(
w1
, 
	`_
("\n\
 have changedÅhe history buffer size.\n\
 willÇeedÅo saveÅhe configuration fileánd\n\
 minicom forÅhe changeÅoÅakeÉffect.\n\n\
á keyÅo Continue... "));

911 
	`wªdøw
(
w1
, 1);

912 
c
 = 
	`wxgëch
();

913 
	`w˛o£
(
w1
, 1);

916 
	`w˛o£
(
w
, 1);

918 i‡(
P_STATLINE
[0] !
ﬁd_°©
)

919 
	`öô_emul
(
ãrmöÆ
, 0);

922 
w1
 = 
	`w›í
(11, 8, 73, 17, 
BSINGLE
, 
°d©å
, 
mfcﬁ‹
, 
mbcﬁ‹
, 0, 0, 1);

923 
	`wtôÀ
(
w1
, 
TMID
, 
	`_
("ProgramÇew command key"));

924 
	`wputs
(
w1
, 
	`_
("\n PressÅheÇew command key. If you wantÅo use\n"));

925 
	`wputs
(
w1
, 
	`_
("Åhe META or ALT keyÉnter:\n\n"));

926 
	`wputs
(
w1
, 
	`_
(" o SPACE if your meta key setsÅhe 8th bit high\n"));

927 
	`wputs
(
w1
, 
	`_
(" o ESC if your meta key sendsÅhe ESCAPEÖrefix (standard)\n"));

928 
	`wputs
(
w1
, 
	`_
("\n\n PressÇew command key: "));

929 
	`wªdøw
(
w1
, 1);

930 
c
 = 
	`wxgëch
();

931 
	`w˛o£
(
w1
, 1);

932 i‡(
c
 == ' ')

933 
	`°r˝y
(
buf
, 
	`N_
("Meta-8th bit "));

934 i‡(
c
 == 27)

935 
	`°r˝y
(
buf
, 
	`N_
("Escape (Meta)"));

937 
	`•rötf
(
buf
, "^%¯ ", (
c
 & 0x1f) + 'A' - 1);

938 
	`p£ts
(
P_ESCAPE
, 
buf
);

939 
	`wloˇã
(
w
, 
	`°æí
 (
comm™d_key
) + 1, 1);

940 
	`wputs
(
w
, 
	`_
(
buf
));

941 
˛r
 = 1;

942 
Æt_ovîride
 = 0;

943 
P_ESCAPE
[0]) {

945 
c
 = 
P_ESCAPE
[1] & 31;

948 
c
 = 27;

951 
c
 = 128;

954 
	`keybﬂrd
(
KSETESC
, 
c
);

955 i‡(
°
Ë
	`show_°©us
();

958 i‡(
P_BACKSPACE
[0] == 'D')

959 
	`p£ts
(
P_BACKSPACE
, "BS");

961 
	`p£ts
(
P_BACKSPACE
, "DEL");

962 
	`wloˇã
(
w
, 
	`°æí
 (
back•a˚_key
) + 1, 2);

963 
	`w¥ötf
(
w
, "%†", 
P_BACKSPACE
);

964 
	`keybﬂrd
(
KSETBS
, 
P_BACKSPACE
[0] == 'B' ? 8 : 127);

967 i‡(
P_STATLINE
[0] == 'e') {

968 
	`p£ts
(
P_STATLINE
, 
	`N_
("disabled"));

969 
ãmp°
 = 1;

971 
	`p£ts
(
P_STATLINE
, 
	`N_
("enabled"));

973 i‡(
LINES
 > 24Ë
ãmp°
 = 0;

975 
	`wloˇã
(
w
, 
	`°æí
 (
°©us_löe
) + 1, 3);

976 
	`w¥ötf
(
w
, "%†", 
	`_
(
P_STATLINE
));

979 
	`p£ts
(
P_SOUND
, 
	`ye¢o
(P_SOUND[0] == 'N'));

980 
	`wloˇã
(
w
, 
	`°æí
 (
Æ¨m_sound
) + 1, 4);

981 
	`w¥ötf
(
w
, "%s", 
	`_
(
P_SOUND
));

984 i‡(
mfcﬁ‹
 =
WHITE
)

985 
mfcﬁ‹
 = 
BLACK
;

987 
mfcﬁ‹
++;

988 
	`p£ts
(
P_MFG
, 
J_cﬁ
[
mfcﬁ‹
]);

989 
	`wloˇã
(
w
, 
	`°æí
 (
f‹eground_cﬁ‹_míu
) + 1, 5);

990 
	`w¥ötf
(
w
, "%† ", 
	`_
(
J_cﬁ
[
mfcﬁ‹
]));

993 i‡(
mbcﬁ‹
 =
WHITE
)

994 
mbcﬁ‹
 = 
BLACK
;

996 
mbcﬁ‹
++;

997 
	`p£ts
(
P_MBG
, 
J_cﬁ
[
mbcﬁ‹
]);

998 
	`wloˇã
(
w
, 
	`°æí
 (
background_cﬁ‹_míu
) + 1, 6);

999 
	`w¥ötf
(
w
, "%† ", 
	`_
(
J_cﬁ
[
mbcﬁ‹
]));

1002 i‡(
tfcﬁ‹
 =
WHITE
)

1003 
tfcﬁ‹
 = 
BLACK
;

1005 
tfcﬁ‹
++;

1006 
	`p£ts
(
P_TFG
, 
J_cﬁ
[
tfcﬁ‹
]);

1007 
	`wloˇã
(
w
, 
	`°æí
 (
f‹eground_cﬁ‹_ãrm
) + 1, 7);

1008 
	`w¥ötf
(
w
, "%† ", 
	`_
(
J_cﬁ
[
tfcﬁ‹
]));

1009 i‡(
us
Ë
	`vt_pöô
(us, 
tfcﬁ‹
, 
tbcﬁ‹
);

1012 i‡(
tbcﬁ‹
 =
WHITE
)

1013 
tbcﬁ‹
 = 
BLACK
;

1015 
tbcﬁ‹
++;

1016 
	`p£ts
(
P_TBG
, 
J_cﬁ
[
tbcﬁ‹
]);

1017 
	`wloˇã
(
w
, 
	`°æí
 (
background_cﬁ‹_ãrm
) + 1, 8);

1018 
	`w¥ötf
(
w
, "%† ", 
	`_
(
J_cﬁ
[
tbcﬁ‹
]));

1019 i‡(
us
Ë
	`vt_pöô
(us, 
tfcﬁ‹
, 
tbcﬁ‹
);

1022 i‡(
sfcﬁ‹
 =
WHITE
)

1023 
sfcﬁ‹
 = 
BLACK
;

1025 
sfcﬁ‹
++;

1030 i‡(
°
)

1032 
	`w˛o£
(
°
,0);

1033 
°
 = 
	`w›í
(0, 
LINES
 - 1, 
COLS
 - 1, LINES - 1, 
BNONE
,

1034 
XA_NORMAL
, 
sfcﬁ‹
, 
sbcﬁ‹
, 1, 0, 1);

1035 
	`show_°©us
();

1037 
	`p£ts
(
P_SFG
, 
J_cﬁ
[
sfcﬁ‹
]);

1038 
	`wloˇã
(
w
, 
	`°æí
 (
f‹eground_cﬁ‹_°©
) + 1, 9);

1039 
	`w¥ötf
(
w
, "%† ", 
	`_
(
J_cﬁ
[
sfcﬁ‹
]));

1042 i‡(
sbcﬁ‹
 =
WHITE
)

1043 
sbcﬁ‹
 = 
BLACK
;

1045 
sbcﬁ‹
++;

1050 i‡(
°
)

1052 
	`w˛o£
(
°
,0);

1053 
°
 = 
	`w›í
(0, 
LINES
 - 1, 
COLS
 - 1, LINES - 1, 
BNONE
,

1054 
XA_NORMAL
, 
sfcﬁ‹
, 
sbcﬁ‹
, 1, 0, 0);

1055 
	`show_°©us
();

1057 
	`p£ts
(
P_SBG
, 
J_cﬁ
[
sbcﬁ‹
]);

1058 
	`wloˇã
(
w
, 
	`°æí
 (
background_cﬁ‹_°©
) + 1, 10);

1059 
	`w¥ötf
(
w
, "%† ", 
	`_
(
J_cﬁ
[
sbcﬁ‹
]));

1062 #i‡
HISTORY


1063 
	`pgës
(
w
, 
	`°æí
 (
hi°‹y_buf„r_size
) + 1, 11,

1064 
P_HISTSIZE
, 5, 5);

1070 i‡(
	`©oi
(
P_HISTSIZE
) <= 0)

1071 
	`°r˝y
(
P_HISTSIZE
,"0");

1072 i‡(
	`©oi
(
P_HISTSIZE
) >= 5000)

1073 
	`°r˝y
(
P_HISTSIZE
,"5000");

1075 
	`wloˇã
(
w
, 
	`°æí
 (
hi°‹y_buf„r_size
) + 1, 11);

1076 
	`w¥ötf
(
w
, "%† ", 
P_HISTSIZE
);

1078 
	`wîr‹
(
	`_
("This system doesÇot support history"));

1081 #i‡
_HAVE_MACROS


1083 
	`pgës
(
w
, 
	`°æí
 (
ma¸os_fûe
Ë+ 1, 12, 
P_MACROS
, 64, 64);

1086 
Â
 = 
	`sf›í
(
	`pfix_home
(
P_MACROS
), "r+");

1087 i‡(
Â
 =
NULL
) {

1088 i‡(
î∫o
 =
EPERM
) {

1090 
	`wîr‹
(
	`_
("ERROR: you doÇot haveÖermissionÅo createá fileÅhere!"));

1091 
⁄˚
 = 'J';

1094 i‡(
î∫o
 !
ENOENT
) {

1096 
	`wîr‹
(
	`_
("ERROR: cannot open macro file %s"),

1097 
	`pfix_home
(
P_MACROS
));

1102 
	`wîr‹
(
	`_
("Reading macros"));

1103 
	`ªadmacs
(
Â
, 0);

1104 
	`f˛o£
(
Â
);

1107 
	`doma¸os
();

1110 
	`p£ts
(
P_MACENAB
, 
	`ye¢o
(P_MACENAB[0] == 'N'));

1111 
	`wloˇã
(
w
, 
	`°æí
 (
ma¸os_íabÀd
) + 1, 14);

1112 
	`w¥ötf
(
w
, "%s", 
	`_
(
P_MACENAB
));

1115 
	`doc⁄v
();

1116 
	`wloˇã
(
w
, 
	`°æí
 (
ch¨a˘î_c⁄vîsi⁄
) + 1, 15);

1117 
	`w¥ötf
(
w
, "%-16.16s", 
	`_
(
P_CONVF
));

1122 
	}
}

1129 
	$dŸîmmíu
()

1131 
WIN
 *
w
;

1132 
c
;

1133 
√w_ãrm
 = -1;

1134 
ﬁd_°©
 = 
P_STATLINE
[0];

1135 
u£_°©us
;

1136 
buf
[8];

1137 
vt_∆_dñay
;

1138 * 
ãrmöÆ_emuœti⁄
 = 
	`_
(" A - TerminalÉmulation :"),

1139 * 
back•a˚_key_£nds
 = 
	`_
(" B - Backspace key sends :"),

1140 * 
°©us_löe
 = 
	`_
(" C - StatusÜine is :"),

1141 * 
msg_∆_dñay
 = 
	`_
(" D - Newline delay (ms) :"),

1142 * 
que°i⁄
 = 
	`_
("Change which setting?");

1144 
w
 = 
	`w›í
(20, 7, 59, 14, 
BDOUBLE
, 
°d©å
, 
mfcﬁ‹
, 
mbcﬁ‹
, 0, 0, 1);

1145 
	`wtôÀ
(
w
, 
TMID
, 
	`_
("Terminal settings"));

1146 
	`w¥ötf
(
w
, "\n");

1147 
	`w¥ötf
(
w
, "%†%s\n", 
ãrmöÆ_emuœti⁄
, 
ãrmöÆ
 =
VT100
 ? "VT102" : "ANSI");

1148 
	`w¥ötf
(
w
, "%†%s\n", 
back•a˚_key_£nds
, 
P_BACKSPACE
);

1149 
	`w¥ötf
(
w
, "%†%s\n", 
°©us_löe
, 
	`_
(
P_STATLINE
));

1150 
	`w¥ötf
(
w
, "%†%d\n", 
msg_∆_dñay
, 
vt_∆_dñay
);

1151 
	`wloˇã
(
w
, 4, 6);

1152 
	`wputs
(
w
, 
que°i⁄
);

1154 
	`wªdøw
(
w
, 1);

1157 
	`wloˇã
(
w
, 
	`°æí
 (
que°i⁄
) + 5, 6);

1158 
c
 = 
	`rwxgëch
();

1159 
c
) {

1161 
	`w˛o£
(
w
, 1);

1163 i‡(
P_STATLINE
[0] !
ﬁd_°©
 && 
√w_ãrm
 < 0)

1164 
	`öô_emul
(
ãrmöÆ
, 0);

1165 (
√w_ãrm
);

1167 i‡(
√w_ãrm
 < 0Ë√w_ãrm = 
ãrmöÆ
;

1168 i‡(
√w_ãrm
 =
VT100
) {

1169 
√w_ãrm
 = 
ANSI
;

1170 
	`p£ts
(
P_BACKSPACE
, "BS");

1172 
√w_ãrm
 = 
VT100
;

1173 
	`p£ts
(
P_BACKSPACE
, "DEL");

1175 
	`wloˇã
(
w
, 
	`°æí
 (
ãrmöÆ_emuœti⁄
) + 1, 1);

1176 
	`w¥ötf
(
w
, "%†", 
√w_ãrm
 =
VT100
 ? "VT102" : "ANSI");

1177 
	`wloˇã
(
w
, 
	`°æí
 (
back•a˚_key_£nds
) + 1, 2);

1178 
	`w¥ötf
(
w
, "%†", 
P_BACKSPACE
);

1179 
	`keybﬂrd
(
KSETBS
, 
P_BACKSPACE
[0] == 'B' ? 8 : 127);

1182 i‡(
P_BACKSPACE
[0] == 'D')

1183 
	`p£ts
(
P_BACKSPACE
, "BS");

1185 
	`p£ts
(
P_BACKSPACE
, "DEL");

1186 
	`wloˇã
(
w
, 
	`°æí
 (
back•a˚_key_£nds
) + 1, 2);

1187 
	`w¥ötf
(
w
, "%†", 
P_BACKSPACE
);

1188 
	`keybﬂrd
(
KSETBS
, 
P_BACKSPACE
[0] == 'B' ? 8 : 127);

1191 i‡(
P_STATLINE
[0] == 'e') {

1192 
	`p£ts
(
P_STATLINE
, 
	`N_
("disabled"));

1193 
ãmp°
 = 1;

1195 
	`p£ts
(
P_STATLINE
, 
	`N_
("enabled"));

1197 i‡(
LINES
 > 24 || 
u£_°©us
)

1198 
ãmp°
 = 0;

1200 
	`wloˇã
(
w
, 
	`°æí
 (
°©us_löe
) + 1, 3);

1201 
	`w¥ötf
(
w
, "%†", 
	`_
(
P_STATLINE
));

1204 
	`•rötf
(
buf
, "%d", 
vt_∆_dñay
);

1205 
	`wloˇã
(
w
, 
	`°æí
(
msg_∆_dñay
) +1, 4);

1206 
	`wgës
(
w
, 
buf
, 4, 4);

1207 
vt_∆_dñay
 = 
	`©oi
(
buf
);

1208 
	`wloˇã
(
w
, 
	`°æí
(
msg_∆_dñay
) +1, 4);

1209 
	`w¥ötf
(
w
, "%-3d", 
vt_∆_dñay
);

1215 
	}
}

1221 
	$vdodÊßve
()

1223 
	`dodÊßve
();

1224 
	}
}

1229 
	$dodÊßve
()

1231 
FILE
 *
Â
;

1234 i‡(
ªÆ_uid
 == 0) {

1235 i‡((
Â
 = 
	`f›í
(
∑rfûe
, "w")Ë=(
FILE
 *)
NULL
) {

1236 
	`wîr‹
(
	`_
("C™nŸ wrôêtÿ%s"), 
∑rfûe
);

1239 
	`wrôï¨s
(
Â
, 1);

1240 
	`f˛o£
(
Â
);

1241 
	`wîr‹
(
	`_
("Configuration saved"));

1244 i‡((
Â
 = 
	`sf›í
(
µ¨fûe
, "w")Ë=(
FILE
 *)
NULL
) {

1245 
	`wîr‹
(
	`_
("C™nŸ wrôêtÿ%s"), 
µ¨fûe
);

1248 
	`wrôï¨s
(
Â
, 0);

1249 
	`f˛o£
(
Â
);

1250 
	`wîr‹
(
	`_
("Configuration saved"));

1252 #i‡
_HAVE_MACROS


1253 i‡(
	`domacßve
() < 0)

1257 
	}
}

1259 #i‡
_HAVE_MACROS


1263 
	$domacßve
()

1265 
FILE
 *
Â
;

1268 i‡(!
	`°rcmp
(
P_MACCHG
,"CHANGED")) {

1269 i‡(
	`°æí
(
P_MACROS
) == 0) {

1270 
	`wîr‹
(
	`_
("ERROR: Macros have changed butÇo filename is set!"));

1273 i‡((
Â
 = 
	`sf›í
(
	`pfix_home
(
P_MACROS
), "w")Ë=(
FILE
 *)
NULL
) {

1274 
	`wîr‹
(
	`_
("Cannot write macros file %s"),

1275 
	`pfix_home
(
P_MACROS
));

1278 
	`wrôemacs
(
Â
, 0);

1279 
	`f˛o£
(
Â
);

1280 
	`wîr‹
(
	`_
("Macros saved"));

1281 
	`°r˝y
(
P_MACCHG
,"SAVED");

1286 
	}
}

1292 
	$d⁄amßve
()

1294 
ifûe
[128];

1295 *
s
;

1297 i‡(
ªÆ_uid
 != 0) {

1298 
	`wîr‹
(
	`_
("YouáreÇotállowedÅo createá configuration"));

1302 
ifûe
[0] = 0;

1303 
s
 = 
	`öput
(
	`_
("Givê«mêtÿßvêthi†c⁄figuøti⁄?"), 
ifûe
);

1304 i‡(
s
 != (*)0 && *s != 0) {

1305 
	`¢¥ötf
(
∑rfûe
, ’¨fûe), "%s/möúc.%s", 
LIBDIR
, 
s
);

1306 
	`dodÊßve
();

1308 
	}
}

1310 (*
	gfuncs1
[])() = {

1311 
d›©h
,

1312 
d›rŸo
,

1313 
do£rül
,

1314 
domodem
,

1315 
dos¸keyb
,

1316 
vdodÊßve
,

1317 
d⁄amßve
,

1318 
NIL_FUN
,

1319 
NIL_FUN


1322 
	gsome_°rög
[32];

1324 *
	gmíu1
[] = {

1325 
N_
("FilenamesándÖaths"),

1326 
N_
("FileÅransferÖrotocols"),

1327 
N_
("SerialÖort setup"),

1328 
N_
("Modemánd dialing"),

1329 
N_
("Screenánd keyboard"),

1330 
some_°rög
,

1331 
N_
("Save setupás.."),

1332 
N_
("Exit"),

1333 
N_
("Exit from Minicom"),

1334 
MENU_END


1338 
	$c⁄fig
(
£tup
)

1339 
£tup
;

1341 
c
;

1342 *
s
;

1345 
s
 = 
∑rfûe
 + 
	`°æí
(
LIBDIR
) + 8;

1346 
	`¢¥ötf
(
some_°rög
, (some_°rög), 
	`_
("Savê£tu∞a†%s"), 
s
);

1348 i‡(!
£tup
Ë
míu1
[8] = 
MENU_END
;

1350 
c
 = 
	`w£À˘
(13, 10, 
míu1
, 
funcs1
, 
	`_
("c⁄figuøti⁄"), 
°d©å
, 
mfcﬁ‹
, 
mbcﬁ‹
);

1351 i‡(
c
 == 9) (1);

1353 
	}
}

1357 *
	gJ_cﬁ
[] =

1358 { 
N_
("BLACK"), N_("RED"), N_("GREEN"), N_("YELLOW"),

1359 
N_
("BLUE"), N_("MAGENTA"), N_("CYAN"), N_("WHITE") };

1361 *
	g•ìds
[] =

1368 
	$gë_bbp
(
ba
, 
bi
, 
∑
, 
°›b
, 
cuº_ok
)

1369 *
ba
;

1370 *
bi
;

1371 *
∑
;

1372 *
°›b
;

1373 
cuº_ok
;

1375 
c
;

1376 
WIN
 *
w
;

1377 
x
, 
y
;

1378 
max
 = 
	`m_gëmax•d
();

1380 
w
 = 
	`w›í
(21, 3, 60, 20, 
BDOUBLE
, 
°d©å
, 
mfcﬁ‹
, 
mbcﬁ‹
, 0, 0, 1);

1381 
	`wtôÀ
(
w
, 
TMID
, 
	`_
("Comm Parameters"));

1383 
dúÊush
 = 0;

1385 
	`wloˇã
(
w
, 0, 3);

1386 
	`wputs
(
w
, 
	`_
(" Speed Parity Data\n\n"));

1387 
	`wputs
(
w
, 
	`_
(" A: 300 L: None S: 5\n"));

1388 
	`wputs
(
w
, 
	`_
(" B: 1200 M: Even T: 6\n"));

1389 
	`wputs
(
w
, 
	`_
(" C: 2400 N: Odd U: 7\n"));

1390 
	`wputs
(
w
, 
	`_
(" D: 4800 O: Mark V: 8\n"));

1391 
	`wputs
(
w
, 
	`_
(" E: 9600 P: Space\n"));

1392 i‡(
max
 > 96)

1393 
	`wputs
(
w
, 
	`_
(" F: 19200 Stopbits\n"));

1395 
	`wputs
(
w
, " Stopbits\n");

1396 i‡(
max
 > 192)

1397 
	`wputs
(
w
, 
	`_
(" G: 38400 W: 1\n"));

1399 
	`wputs
(
w
, 
	`_
(" W: 1\n"));

1400 i‡(
max
 > 384)

1401 
	`wputs
(
w
, 
	`_
(" H: 57600 X: 2\n"));

1403 
	`wputs
(
w
, " X: 2\n");

1404 i‡(
max
 > 576)

1405 
	`wputs
(
w
, 
	`_
(" I: 115200 Q: 8-N-1\n"));

1407 
	`wputs
(
w
, 
	`_
(" Q: 8-N-1\n"));

1408 i‡(
max
 > 1152)

1409 
	`wputs
(
w
, 
	`_
(" J: 230400 R: 7-E-1\n"));

1411 
	`wputs
(
w
, 
	`_
(" R: 7-E-1\n"));

1412 i‡(
cuº_ok
)

1413 
	`wputs
(
w
, 
	`_
(" K: Current\n"));

1415 
	`wputs
(
w
, "\n");

1416 
	`wputs
(
w
, 
	`_
("\n Choice, or <Enter>ÅoÉxit? "));

1417 
x
 = 
w
->
curx
;

1418 
y
 = 
w
->
cury
;

1420 
bi
[1] = 0;

1421 
∑
[1] = 0;

1423 
	`wªdøw
(
w
, 1);

1426 
	`wloˇã
(
w
, 1, 1);

1427 
	`w¥ötf
(
w
, 
	`_
("Cuºít: %5†%s%s%† "), 
ba
, 
bi
, 
∑
, 
°›b
);

1428 
	`wloˇã
(
w
, 
x
, 
y
);

1429 
	`wÊush
();

1430 
c
 = 
	`wxgëch
();

1431 i‡(
c
 >= 'a') c -= 32;

1432 
c
) {

1434 i‡(
max
 < 2304) ;

1436 i‡(
max
 < 1152) ;

1438 i‡(
max
 < 576) ;

1440 i‡(
max
 < 384) ;

1442 i‡(
max
 < 192) ;

1449 i‡(
c
 ='K' && !
cuº_ok
) ;

1450 
	`°r˝y
(
ba
, 
•ìds
[
c
 - 'A']);

1453 
∑
[0] = 'N';

1456 
∑
[0] = 'E';

1459 
∑
[0] = 'O';

1462 
∑
[0] = 'M';

1465 
∑
[0] = 'S';

1468 
∑
[0] = 'N';

1469 
bi
[0] = '8';

1470 
°›b
[0] = '1';

1473 
∑
[0] = 'E';

1474 
bi
[0] = '7';

1475 
°›b
[0] = '1';

1478 
bi
[0] = '5';

1481 
bi
[0] = '6';

1484 
bi
[0] = '7';

1487 
bi
[0] = '8';

1490 
°›b
[0] = '1';

1493 
°›b
[0] = '2';

1498 
dúÊush
 = 1;

1499 
	`w˛o£
(
w
, 1);

1505 
	}
}

1507 #i‡
_HAVE_MACROS


1511 
	$out_mac
(
w
, 
s
, 
n
)

1512 
WIN
 *
w
;

1513 *
s
;

1514 
n
;

1516 
	`w¥ötf
(
w
, " %¯: %.67s\n", 
n
, 
s
 ? s : "[none]");

1517 
	}
}

1522 
	$doma¸os
()

1524 
WIN
 *
w
;

1525 
˛r
 = 1;

1526 
Jch
='1', 
Jm
=0;

1527 * 
que°i⁄
 = 
	`_
("Change which setting? (EscÅoÉxit)");

1529 
w
 = 
	`w›í
(3, 6, 75, 21 , 
BDOUBLE
, 
°d©å
, 
mfcﬁ‹
, 
mbcﬁ‹
, 0, 0, 1);

1530 
	`wtôÀ
(
w
, 
TMID
, 
	`_
("F1Åo F10 Macros"));

1532 
	`w¥ötf
(
w
, "\n");

1533 
	`out_mac
(
w
,
mmacs
[
Jm
++].
vÆue
, 
Jch
++);

1534 
	`out_mac
(
w
,
mmacs
[
Jm
++].
vÆue
, 
Jch
++);

1535 
	`out_mac
(
w
,
mmacs
[
Jm
++].
vÆue
, 
Jch
++);

1536 
	`out_mac
(
w
,
mmacs
[
Jm
++].
vÆue
, 
Jch
++);

1537 
	`out_mac
(
w
,
mmacs
[
Jm
++].
vÆue
, 
Jch
++);

1538 
	`out_mac
(
w
,
mmacs
[
Jm
++].
vÆue
, 
Jch
++);

1539 
	`out_mac
(
w
,
mmacs
[
Jm
++].
vÆue
, 
Jch
++);

1540 
	`out_mac
(
w
,
mmacs
[
Jm
++].
vÆue
, 
Jch
++);

1541 
	`out_mac
(
w
,
mmacs
[
Jm
++].
vÆue
, 
Jch
++);

1542 
Jch
 = 'A';

1543 
	`out_mac
(
w
,
mmacs
[
Jm
++].
vÆue
, 
Jch
++);

1545 
	`wªdøw
(
w
, 1);

1548 
	`wloˇã
(
w
, 1, 14);

1549 
	`wputs
(
w
, 
	`_
(" (LEGEND: ^M = C-M, ^L = C-L, ^G = C-G, ^R = C-R, ^~ =Öause 1 second,"));

1550 
	`wloˇã
(
w
, 1, 15);

1551 
	`wputs
(
w
, 
	`_
(" \\u = username, \\p =Öassword, \\\\ = \\)"));

1552 i‡(
˛r
) {

1553 
	`wloˇã
(
w
, 1, 12);

1554 
	`w¥ötf
(
w
, "%†", 
que°i⁄
);

1555 
	`w˛ªﬁ
(
w
);

1556 
˛r
 = 0;

1557 } 
	`wloˇã
(
w
, 
	`°æí
 (
que°i⁄
) + 2, 12);

1559 
	`rwxgëch
()) {

1560 '\n': 
	`w˛o£
(
w
, 1); ;

1562 
	`mgës
(
w
, 5, 1, 
P_MAC1
, 72, 
MAC_LEN
);

1563 
	`°r˝y
(
P_MACCHG
,
	`_
("CHANGED"));

1564 
	`wloˇã
(
w
, 0, 1);

1565 
	`out_mac
(
w
,
P_MAC1
, '1');

1568 
	`mgës
(
w
, 5, 2, 
P_MAC2
, 72, 
MAC_LEN
);

1569 
	`°r˝y
(
P_MACCHG
,"CHANGED");

1570 
	`wloˇã
(
w
, 0, 2);

1571 
	`out_mac
(
w
,
P_MAC2
, '2');

1574 
	`mgës
(
w
, 5, 3, 
P_MAC3
, 72, 
MAC_LEN
);

1575 
	`°r˝y
(
P_MACCHG
,"CHANGED");

1576 
	`wloˇã
(
w
, 0, 3);

1577 
	`out_mac
(
w
,
P_MAC3
, '3');

1580 
	`mgës
(
w
, 5, 4, 
P_MAC4
, 72, 
MAC_LEN
);

1581 
	`°r˝y
(
P_MACCHG
,"CHANGED");

1582 
	`wloˇã
(
w
, 0, 4);

1583 
	`out_mac
(
w
,
P_MAC4
, '4');

1586 
	`mgës
(
w
, 5, 5, 
P_MAC5
, 72, 
MAC_LEN
);

1587 
	`°r˝y
(
P_MACCHG
,"CHANGED");

1588 
	`wloˇã
(
w
, 0, 5);

1589 
	`out_mac
(
w
,
P_MAC5
, '5');

1592 
	`mgës
(
w
, 5, 6, 
P_MAC6
, 72, 
MAC_LEN
);

1593 
	`°r˝y
(
P_MACCHG
,"CHANGED");

1594 
	`wloˇã
(
w
, 0, 6);

1595 
	`out_mac
(
w
,
P_MAC6
, '6');

1598 
	`mgës
(
w
, 5, 7, 
P_MAC7
, 72, 
MAC_LEN
);

1599 
	`°r˝y
(
P_MACCHG
,"CHANGED");

1600 
	`wloˇã
(
w
, 0, 7);

1601 
	`out_mac
(
w
,
P_MAC7
, '7');

1604 
	`mgës
(
w
, 5, 8, 
P_MAC8
, 72, 
MAC_LEN
);

1605 
	`°r˝y
(
P_MACCHG
,"CHANGED");

1606 
	`wloˇã
(
w
, 0, 8);

1607 
	`out_mac
(
w
,
P_MAC8
, '8');

1610 
	`mgës
(
w
, 5, 9, 
P_MAC9
, 72, 
MAC_LEN
);

1611 
	`°r˝y
(
P_MACCHG
,"CHANGED");

1612 
	`wloˇã
(
w
, 0, 9);

1613 
	`out_mac
(
w
,
P_MAC9
, '9');

1616 
	`mgës
(
w
, 5, 10, 
P_MAC10
, 72, 
MAC_LEN
);

1617 
	`°r˝y
(
P_MACCHG
,"CHANGED");

1618 
	`wloˇã
(
w
, 0, 10);

1619 
	`out_mac
(
w
,
P_MAC10
, 'A');

1623 
	}
}

1629 
	$¥ch
(
c
)

1631 i‡(
c
 < 32 || c == 127 || c == 155)

1634  (
c
);

1635 
	}
}

1638 
	$doc⁄v
()

1640 
WIN
 *
w
;

1641 
i
, 
j
, 
k
, 
l
,

1642 
offs
=32,

1643 
ymax
=22,

1644 
h
,

1645 
ªdøw
=1;

1646 
buf
[64];

1647 *
¥om±
;

1649 
h
 = 16;

1650 
w
 = 
	`w›í
 (1, 1, 77, 
ymax
, 
BDOUBLE
, 
°d©å
, 
mfcﬁ‹
, 
mbcﬁ‹
, 0, 0, 1);

1651 
	`wtôÀ
(
w
, 
TMID
, 
	`_
("Character conversion"));

1653 i‡(
ªdøw
) {

1654 
	`wö˛r
(
w
);

1655 
	`w¥ötf
(
w
,

1656 
	`_
(" char in out char in out char in out char in out\n"));

1657 
i
=
offs
,
j
=i+
h
,
k
=j+h,
l
=k+h ;

1658 
i
<
offs
+
h
 && i<256 ; i++,
j
++,
k
++,
l
++){

1659 
	`w¥ötf
(
w
, "%3d (%c) %3d %3d ",

1660 
i
, 
	`¥ch
(i), (Ë
vt_öm≠
[i], (Ë
vt_outm≠
[i]);

1661 i‡(
j
<256)

1662 
	`w¥ötf
(
w
, "%3d (%c) %3d %3d ",

1663 
j
, 
	`¥ch
(j), (Ë
vt_öm≠
[j], (Ë
vt_outm≠
[j]);

1665 
	`w¥ötf
(
w
, " ");

1666 i‡(
k
<256)

1667 
	`w¥ötf
(
w
, "%3d (%c) %3d %3d ",

1668 
k
, 
	`¥ch
(k), (Ë
vt_öm≠
[k], (Ë
vt_outm≠
[k]);

1670 
	`w¥ötf
(
w
, " ");

1671 i‡(
l
<256)

1672 
	`w¥ötf
(
w
, "%3d (%c) %3d %3d\n",

1673 
l
, 
	`¥ch
÷), (Ë
vt_öm≠
[l], (Ë
vt_outm≠
[l]);

1675 
	`w¥ötf
(
w
, " \n");

1677 
	`w¥ötf
(
w
, 
	`_
("\n A -ÜoadÅable\tB - saveÅable"));

1678 i‡(
P_CONVF
[0])

1679 
	`w¥ötf
(
w
, 
	`_
("\tfûe:%s"),
P_CONVF
);

1680 
	`w¥ötf
(
w
, 
	`_
("\n C -Édit char\tD -Çext screen\tE -Örev screen\n"));

1681 
	`w¥ötf
(
w
, 
	`_
(" F - c⁄vîàˇ±uª: %s\n"), _(
P_CONVCAP
));

1683 
	`wªdøw
(
w
, 1);

1684 
ªdøw
=0;

1687 
	`wloˇã
(
w
, 1, 
ymax
 - 1);

1688 
	`w˛ªﬁ
(
w
);

1689 
	`wÊush
();

1690 
	`touµî
(
	`rwxgëch
())) {

1692 
	`w˛o£
(
w
, 1); ;

1695 
	`°r˝y
(
buf
,
P_CONVF
);

1696 
¥om±
=
	`_
("Load file: %s");

1697 
	`w¥ötf
(
w
, 
¥om±
, 
buf
);

1698 
	`pgës
(
w
, 
	`°æí
(
¥om±
Ë- 1, 
ymax
 - 1, 
P_CONVF
, 64, 64);

1699 i‡(
	`lﬂdc⁄v
(
P_CONVF
) == 0) {

1700 if(
	`°rcmp
(
P_CONVF
,
buf
))

1701 
	`m¨kch
(
P_CONVF
);

1702 
ªdøw
=1;

1704 
	`°r˝y
(
P_CONVF
,
buf
);

1707 
	`°r˝y
(
buf
,
P_CONVF
);

1708 
¥om±
=
	`_
("Saveás file: %s");

1709 
	`w¥ötf
(
w
, 
¥om±
, 
buf
);

1710 
	`pgës
(
w
, 
	`°æí
(
¥om±
Ë- 1, 
ymax
 - 1, 
P_CONVF
, 64, 64);

1711 i‡(
	`ßvec⁄v
(
P_CONVF
) == 0) {

1712 if(
	`°rcmp
(
P_CONVF
,
buf
))

1713 
	`m¨kch
(
P_CONVF
);

1714 
ªdøw
=1;

1716 
	`°r˝y
(
P_CONVF
,
buf
);

1719 
¥om±
=
	`_
("CharacterÅo beÉdited: ");

1720 
	`w¥ötf
(
w
, 
¥om±
);

1721 
buf
[0]=0; 
i
=-1;

1722 
	`wloˇã
(
w
, 
	`°æí
(
¥om±
), 
ymax
 - 1);

1723 
	`wgës
(
w
, 
buf
, 4, 4);

1724 
	`ssˇnf
(
buf
,"%d",&
i
);

1725 i‡(
i
>255 || i<0) {

1726 
	`wîr‹
(
	`_
("Input characteráscii value 0-255"));

1730 
	`•rötf
(
buf
,"%u",(Ë
vt_öm≠
[
i
]);

1731 
	`wloˇã
(
w
, 30, 
ymax
 - 1);

1732 
¥om±
=
	`_
("Change inputÅo: %s");

1733 
	`w¥ötf
(
w
, 
¥om±
,
buf
);

1734 
	`wloˇã
(
w
, 
	`°æí
(
¥om±
Ë+ 28, 
ymax
 - 1);

1735 
	`wgës
(
w
, 
buf
, 4, 4);

1736 
	`ssˇnf
(
buf
,"%d",&
j
);

1737 i‡(
j
>255 || j<0) {

1738 
	`wîr‹
(
	`_
("Input characteráscii value 0-255"));

1741 
vt_öm≠
[
i
] = 
j
;

1742 
	`•rötf
(
buf
,"%u",(Ë
vt_outm≠
[
i
]);

1743 
	`wloˇã
(
w
, 54, 
ymax
 - 1);

1744 
¥om±
=
	`_
("Change outputÅo: %s");

1745 
	`w¥ötf
(
w
, 
¥om±
, 
buf
);

1746 
	`wloˇã
(
w
, 
	`°æí
(
¥om±
Ë+ 52, 
ymax
 - 1);

1747 
	`wgës
(
w
, 
buf
, 4, 4);

1748 
	`ssˇnf
(
buf
,"%d",&
j
);

1749 i‡(
j
>255 || j<0) {

1750 
	`wîr‹
(
	`_
("Input characteráscii value 0-255"));

1753 
vt_outm≠
[
i
] = 
j
;

1754 
ªdøw
=1;

1757 
offs
 +4 * 
h
;

1758 i‡(
offs
 > 255)

1759 
offs
 = 0;

1760 
ªdøw
=1;

1763 
offs
 -4 * 
h
;

1764 i‡(
offs
 < 0)

1765 
offs
 = 0;

1766 
ªdøw
=1;

1769 
	`°r˝y
(
P_CONVCAP
, 
	`ye¢o
(P_CONVCAP[0] == 'N'));

1770 
	`m¨kch
(
P_CONVCAP
);

1771 
ªdøw
=1;

1775 
	}
}

1777 
	$lﬂdc⁄v
(*
buf
)

1779 
FILE
 *
Â
;

1781 i‡((
Â
 = 
	`sf›í
(
	`pfix_home
(
buf
), "rb")Ë=(
FILE
 *)
NULL
) {

1782 
	`wîr‹
(
	`_
("C™nŸ o≥¿c⁄vîsi⁄ÅabÀ %s"),
	`pfix_home
(
buf
));

1785 
	`‰ód
(
vt_öm≠
, (vt_öm≠), (
size_t
)1, 
Â
);

1786 
	`‰ód
(
vt_outm≠
, (vt_outm≠), (
size_t
)1, 
Â
);

1787 
	`f˛o£
(
Â
);

1789 
	}
}

1791 
	$ßvec⁄v
(*
buf
)

1793 
FILE
 *
Â
;

1795 i‡((
Â
 = 
	`sf›í
(
	`pfix_home
(
buf
), "wb")Ë=(
FILE
 *)
NULL
) {

1796 
	`wîr‹
(
	`_
("C™nŸ wrôêc⁄vîsi⁄ÅabÀ %s"),
	`pfix_home
(
buf
));

1799 
	`fwrôe
(
vt_öm≠
, (vt_öm≠), (
size_t
)1, 
Â
);

1800 
	`fwrôe
(
vt_outm≠
, (vt_outm≠), (
size_t
)1, 
Â
);

1801 
	`f˛o£
(
Â
);

1803 
	}
}

	@configsym.h

34 
	#PARS_VAL_LEN
 64

	)

36 
	s∑rs
 {

39 
	mvÆue
[
PARS_VAL_LEN
];

40 
	mÊags
;

41 *
	mdesc
;

43 
∑rs
 
m∑rs
[];

47 #i‚de‡
MAC_LEN


48 
	#MAC_LEN
 257

	)

51 
	smacs
 {

52 
	mvÆue
[
MAC_LEN
];

53 
	mÊags
;

54 *
	mdesc
;

56 
macs
 
mmacs
[];

59 
	#CHANGED
 3

	)

60 
	#PRIVATE
 4

	)

61 
	#PUBLIC
 8

	)

63 
	#PROTO_BASE
 0

	)

64 
	#MAXPROTO
 12

	)

65 
	#PROG_BASE
 12

	)

67 
	#P_PNN
(
n
Ë(
m∑rs
[
PROTO_BASE
 +Ç].
vÆue
[0])

	)

68 
	#P_PUD
(
n
Ë(
m∑rs
[
PROTO_BASE
 +Ç].
vÆue
[1])

	)

69 
	#P_PFULL
(
n
Ë(
m∑rs
[
PROTO_BASE
 +Ç].
vÆue
[2])

	)

70 
	#P_PIORED
(
n
Ë(
m∑rs
[
PROTO_BASE
 +Ç].
vÆue
[3])

	)

71 
	#P_MUL
(
n
Ë(
m∑rs
[
PROTO_BASE
 +Ç].
vÆue
[4])

	)

72 
	#P_PNAME
(
n
Ë(&
m∑rs
[
PROTO_BASE
 +Ç].
vÆue
[5])

	)

73 
	#P_PPROG
(
n
Ë
m∑rs
[
PROG_BASE
 +Ç].
vÆue


	)

75 
	#P_PORT
 
m∑rs
[24].
vÆue


	)

76 
	#P_CALLIN
 
m∑rs
[25].
vÆue


	)

77 
	#P_CALLOUT
 
m∑rs
[26].
vÆue


	)

78 
	#P_LOCK
 
m∑rs
[27].
vÆue


	)

79 
	#P_BAUDRATE
 
m∑rs
[28].
vÆue


	)

80 
	#P_BITS
 
m∑rs
[29].
vÆue


	)

81 
	#P_PARITY
 
m∑rs
[30].
vÆue


	)

82 
	#P_STOPB
 
m∑rs
[31].
vÆue


	)

83 
	#P_KERMIT
 
m∑rs
[32].
vÆue


	)

84 
	#P_KERMALLOW
 
m∑rs
[33].
vÆue


	)

85 
	#P_KERMREAL
 
m∑rs
[34].
vÆue


	)

86 
	#P_COLUSAGE
 
m∑rs
[35].
vÆue


	)

87 
	#P_SCRIPTPROG
 
m∑rs
[36].
vÆue


	)

89 
	#P_MINIT
 
m∑rs
[37].
vÆue


	)

90 
	#P_MRESET
 
m∑rs
[38].
vÆue


	)

91 
	#P_MDIALPRE
 
m∑rs
[39].
vÆue


	)

92 
	#P_MDIALSUF
 
m∑rs
[40].
vÆue


	)

93 
	#P_MDIALPRE2
 
m∑rs
[41].
vÆue


	)

94 
	#P_MDIALSUF2
 
m∑rs
[42].
vÆue


	)

95 
	#P_MDIALPRE3
 
m∑rs
[43].
vÆue


	)

96 
	#P_MDIALSUF3
 
m∑rs
[44].
vÆue


	)

97 
	#P_MCONNECT
 
m∑rs
[45].
vÆue


	)

98 
	#P_MNOCON1
 
m∑rs
[46].
vÆue


	)

99 
	#P_MNOCON2
 
m∑rs
[47].
vÆue


	)

100 
	#P_MNOCON3
 
m∑rs
[48].
vÆue


	)

101 
	#P_MNOCON4
 
m∑rs
[49].
vÆue


	)

102 
	#P_MHANGUP
 
m∑rs
[50].
vÆue


	)

103 
	#P_MDIALCAN
 
m∑rs
[51].
vÆue


	)

104 
	#P_MDIALTIME
 
m∑rs
[52].
vÆue


	)

105 
	#P_MRDELAY
 
m∑rs
[53].
vÆue


	)

106 
	#P_MRETRIES
 
m∑rs
[54].
vÆue


	)

108 
	#P_MDROPDTR
 
m∑rs
[55].
vÆue


	)

109 
	#P_MAUTOBAUD
 
m∑rs
[56].
vÆue


	)

110 
	#P_SHOWSPD
 
m∑rs
[57].
vÆue


	)

111 
	#P_UPDIR
 
m∑rs
[58].
vÆue


	)

112 
	#P_DOWNDIR
 
m∑rs
[59].
vÆue


	)

113 
	#P_SCRIPTDIR
 
m∑rs
[60].
vÆue


	)

114 
	#P_ESCAPE
 
m∑rs
[61].
vÆue


	)

115 
	#P_BACKSPACE
 
m∑rs
[62].
vÆue


	)

116 
	#P_STATLINE
 
m∑rs
[63].
vÆue


	)

117 
	#P_HASDCD
 
m∑rs
[64].
vÆue


	)

118 
	#P_HASRTS
 
m∑rs
[65].
vÆue


	)

119 
	#P_HASXON
 
m∑rs
[66].
vÆue


	)

120 
	#P_PAUTO
 
m∑rs
[67].
vÆue


	)

125 
	#P_MFG
 
m∑rs
[68].
vÆue


	)

126 
	#P_MBG
 
m∑rs
[69].
vÆue


	)

127 
	#P_TFG
 
m∑rs
[70].
vÆue


	)

128 
	#P_TBG
 
m∑rs
[71].
vÆue


	)

129 
	#P_SFG
 
m∑rs
[72].
vÆue


	)

130 
	#P_SBG
 
m∑rs
[73].
vÆue


	)

134 
	#P_MACROS
 
m∑rs
[74].
vÆue


	)

135 
	#P_MACCHG
 
m∑rs
[75].
vÆue


	)

136 
	#P_MACENAB
 
m∑rs
[76].
vÆue


	)

138 
	#P_SOUND
 
m∑rs
[77].
vÆue


	)

139 
	#P_HISTSIZE
 
m∑rs
[78].
vÆue


	)

141 
	#P_CONVF
 
m∑rs
[79].
vÆue


	)

142 
	#P_CONVCAP
 
m∑rs
[80].
vÆue


	)

144 
	#P_FSELW
 
m∑rs
[81].
vÆue


	)

145 
	#P_ASKDNDIR
 
m∑rs
[82].
vÆue


	)

148 
	#P_LOGFNAME
 
m∑rs
[83].
vÆue


	)

149 
	#P_LOGCONN
 
m∑rs
[84].
vÆue


	)

150 
	#P_LOGXFER
 
m∑rs
[85].
vÆue


	)

152 
	#P_MULTILINE
 
m∑rs
[86].
vÆue


	)

156 
	#P_MAC1
 
mmacs
[0].
vÆue


	)

157 
	#P_MAC2
 
mmacs
[1].
vÆue


	)

158 
	#P_MAC3
 
mmacs
[2].
vÆue


	)

159 
	#P_MAC4
 
mmacs
[3].
vÆue


	)

160 
	#P_MAC5
 
mmacs
[4].
vÆue


	)

161 
	#P_MAC6
 
mmacs
[5].
vÆue


	)

162 
	#P_MAC7
 
mmacs
[6].
vÆue


	)

163 
	#P_MAC8
 
mmacs
[7].
vÆue


	)

164 
	#P_MAC9
 
mmacs
[8].
vÆue


	)

165 
	#P_MAC10
 
mmacs
[9].
vÆue


	)

	@defmap.h

	@dial.c

25 #ifde‡
HAVE_CONFIG_H


26 
	~<c⁄fig.h
>

29 
	~"rcsid.h
"

30 
RCSID
("$Id: dial.c,v 1.12 2001/07/04 14:43:25 kloczek Exp $")

32 
	~"p‹t.h
"

33 
	~"möicom.h
"

34 
	~"öé.h
"

36 #i‡
VC_MUSIC


37 #i‡
deföed
(
__löux__
)

38 
	~<sys/io˘l.h
>

39 
	~<sys/kd.h
>

40 
	~<sys/time.h
>

42 #i‡
deföed
(
_COH42
Ë|| deföed(
_SCO
)

43 
	~<sys/vtkd.h
>

48 #i‚de‡
off£tof


49 
	#off£tof
(
ty≥
, 
membî
Ë((Ë&(—y≥ *)0)->membî)

	)

53 
	#FL_ECHO
 0x01

	)

54 
	#FL_DEL
 0x02

	)

55 
	#FL_WRAP
 0x04

	)

56 
	#FL_ANSI
 0x08

	)

57 
	#FL_TAG
 0x80

	)

58 
	#FL_SAVE
 0x0‡

	)

61 
	sv1_düÀ¡
 {

62 
	m«me
[32];

63 
	mnumbî
[16];

64 
	ms¸ùt
[16];

65 
	mu£∫ame
[32];

66 
	m∑ssw‹d
[32];

67 
	mãrm
;

68 
	mbaud
[8];

69 
	m∑rôy
[2];

70 
	mdü…y≥
;

71 
	mÊags
;

72 
	mbôs
[2];

73 
düÀ¡
 *
	m√xt
;

76 
	sv3_düÀ¡
 {

77 
	m«me
[32];

78 
	mnumbî
[32];

79 
	ms¸ùt
[32];

80 
	mu£∫ame
[32];

81 
	m∑ssw‹d
[32];

82 
	mãrm
;

83 
	mbaud
[8];

84 
	m∑rôy
[2];

85 
	mdü…y≥
;

86 
	mÊags
;

87 
	mbôs
[2];

88 
düÀ¡
 *
	m√xt
;

91 
	sdüÀ¡
 {

92 
	m«me
[32];

93 
	mnumbî
[32];

94 
	ms¸ùt
[32];

95 
	mu£∫ame
[32];

96 
	m∑ssw‹d
[32];

97 
	mãrm
;

98 
	mbaud
[8];

99 
	m∑rôy
[2];

100 
	mdü…y≥
;

101 
	mÊags
;

102 
	mbôs
[2];

103 
	mœ°d©e
[9];

104 
	mœ°time
[9];

105 
	mcou¡
;

106 
	mc⁄vfûe
[16];

107 
	m°›b
[2];

108 
düÀ¡
 *
	m√xt
;

112 
	#DIALMAGIC
 0x55AA

	)

113 
	sdvî
 {

114 
	mmagic
;

115 
	mvîsi⁄
;

116 
	msize
;

117 
	mªs1
;

118 
	mªs2
;

119 
	mªs3
;

120 
	mªs4
;

124 
wrôedüldú
();

126 
	#düÀ¡no
(
di
, 
no
Ë((
düÀ¡
 *)((*)(diË+ (“oË* (düÀ¡))))

	)

128 
düÀ¡
 *
	gdüÀ¡s
;

129 
düÀ¡
 *
	gd_m™
;

130 
	gƒíts
 = 1;

131 
	g√wty≥
;

133 
	gdídd
 = 0;

134 *
	gègged
;

135 *
	gdül_u£r
;

136 *
	gdül_∑ss
;

147 
	$mputs
(
s
, 
how
)

148 *
s
;

149 
how
;

151 
c
;

153 *
s
) {

154 i‡(*
s
 == '^' && (*(s + 1))) {

155 
s
++;

156 i‡(*
s
 == '^')

157 
c
 = *
s
;

158 i‡(
how
 =1 && *
s
 == '~') {

159 
	`¶ìp
(1);

160 
s
++;

163 
c
 = (*
s
) & 31;

164 } i‡(*
s
 == '\\' && (*(s + 1))) {

165 
s
++;

166 
	`touµî
 (*
s
)) {

168 
c
 = *
s
;

171 i‡(
dül_u£r
 && *dial_user)

172 
	`mputs
 (
dül_u£r
, 
how
);

173 
s
++;

176 i‡(
dül_∑ss
 && *dial_pass)

177 
	`mputs
 (
dül_∑ss
, 
how
);

178 
s
++;

181 
s
++;

185 
c
 = *
s
;

186 i‡(
how
 =0 && 
c
 == '~')

187 
	`¶ìp
(1);

189 
	`wrôe
(
p‹tfd
, &
c
, 1);

190 
s
++;

192 
	}
}

197 
	$modemöô
()

199 
WIN
 *
w
;

201 i‡(
P_MINIT
[0] == '\0') ;

203 
w
 = 
	`mc_ãŒ
(
	`_
("Initializing Modem"));

204 
	`m_dåtoggÀ
(
p‹tfd
, 1);

205 
	`mputs
(
P_MINIT
, 0);

206 
	`w˛o£
(
w
, 1);

207 
	}
}

212 
	$modemª£t
()

214 
WIN
 *
w
;

216 i‡(
P_MRESET
[0] == '\0') ;

218 
w
 = 
	`mc_ãŒ
(
	`_
("Resetting Modem"));

219 
	`mputs
(
P_MRESET
, 0);

220 
	`¶ìp
(1);

221 
	`w˛o£
(
w
, 1);

222 
	}
}

227 
	$h™gup
()

229 
WIN
 *
w
;

230 
£c
=1;

231 
time_t
 
ﬁd_⁄löe
;

233 
w
 = 
	`mc_ãŒ
(
	`_
("Hanging up"));

235 
	`timî_upd©e
();

236 i‡(
P_LOGCONN
[0] == 'Y')

237 
	`do_log
(
	`_
("Hangup (%ld:%02ld:%02ld)"),

238 
⁄löe
 / 3600, (online / 60) % 60, online>0 ? online % 60 : 0);

239 
⁄löe
 = -1;

240 
ﬁd_⁄löe
 = -1;

242 i‡(
	`isdigô
(
P_MDROPDTR
[0]))

243 
	`ssˇnf
(
P_MDROPDTR
,"%2d",&
£c
);

245 i‡(
P_MDROPDTR
[0] ='Y' || (
	`isdigô
(P_MDROPDTR[0]Ë&& 
£c
>0)) {

246 
	`m_dåtoggÀ
(
p‹tfd
, 
£c
);

248 
	`mputs
(
P_MHANGUP
, 0);

249 
	`¶ìp
(1);

251 #i‡
_DCDFLOW


253 
	`m_£thwf
(
p‹tfd
, 0);

256 
bogus_dcd
 = 0;

257 
	`w˛o£
(
w
, 1);

258 i‡(
°
)

259 
	`time_°©us
();

260 
	}
}

266 
	$£ndbªak
()

268 
WIN
 *
w
;

270 
w
 = 
	`mc_ãŒ
(
	`_
("Sending BREAK"));

271 
	`wcurs‹
(
w
, 
CNONE
);

273 
	`m_bªak
(
p‹tfd
);

274 
	`w˛o£
(
w
, 1);

275 
	}
}

277 
WIN
 *
	gdülwö
;

278 
	gdü…ime
;

280 #i‡
VC_MUSIC


285 
	$music
()

287 
x
, 
i
, 
k
;

288 
c⁄sﬁefd
 = 0;

289 *
di•
;

292 i‡(
	`°∫cmp
(
	`gëív
("TERM"), "xterm", 5) == 0 &&

293 (
di•
 = 
	`gëív
("DISPLAY")Ë!
NULL
 &&

294 (
	`°rcmp
(
di•
, ":0.0") == 0 ||

295 (
	`°rcmp
(
di•
, ":0") == 0))) {

296 
c⁄sﬁefd
 = 
	`›í
("/dev/c⁄sﬁe", 
O_WRONLY
);

297 i‡(
c⁄sﬁefd
 < 0) consolefd = 0;

301 
	`keybﬂrd
(
KSIGIO
, 0);

304 
i
 = 0; i < 9; i++) {

305 
k
 = 2000 - 200 * (
i
 % 3);

306 (Ë
	`io˘l
(
c⁄sﬁefd
, 
KIOCSOUND
, 
k
);

309 
x
 = 
	`check_io
(-1, 0, 160, 
NULL
, NULL);

310 i‡(
x
 & 2) ;

312 (Ë
	`io˘l
(
c⁄sﬁefd
, 
KIOCSOUND
, 0);

313 i‡(
c⁄sﬁefd
Ë
	`˛o£
(consolefd);

316 (
x
 & 2) == 0) {

317 
x
 = 
	`check_io
(-1, 0, 10000, 
NULL
, NULL);

318 
	`timî_upd©e
();

320 (Ë
	`keybﬂrd
(
KGETKEY
, 0);

321 
	}
}

328 
	$dülÁûed
(
s
, 
πime
)

329 *
s
;

330 
πime
;

332 
f
, 
x
;

333 
ªt
 = 0;

335 
	`wloˇã
(
dülwö
, 1, 5);

336 
	`w¥ötf
(
dülwö
, 
	`_
(" Nÿc⁄√˘i⁄: %s. \n"), 
s
);

337 i‡(
πime
 < 0) {

338 
	`w¥ötf
(
dülwö
, 
	`_
(" Pressány keyÅo continue.. "));

339 i‡(
	`check_io
(-1, 0, 10000, 
NULL
, NULL) & 2)

340 (Ë
	`keybﬂrd
(
KGETKEY
, 0);

343 
	`w¥ötf
(
dülwö
, 
	`_
(" Rëry i¿%2d sec⁄d† "), 
πime
);

345 
f
 = 
πime
 - 1; f >= 0; f--) {

346 
x
 = 
	`check_io
(-1, 0, 1000, 
NULL
, NULL);

347 i‡(
x
 & 2) {

349 
x
 = 
	`keybﬂrd
(
KGETKEY
, 0);

350 i‡(
x
 !' 'Ë
ªt
 = -1;

353 
	`wloˇã
(
dülwö
, 0, 6);

354 
	`w¥ötf
(
dülwö
, 
	`_
(" Rëry i¿%2d sec⁄d† "), 
f
);

356 #ifde‡
HAVE_USLEEP


358 i‡(
f
 < 0Ë
	`u¶ìp
(350000);

360 i‡(
f
 < 0Ë
	`¶ìp
(1);

362 
	`wloˇã
(
dülwö
, 1, 5);

363 
	`w¥ötf
(
dülwö
, " \n");

364 
	`w¥ötf
(
dülwö
, " ");

365 (
ªt
);

366 
	}
}

371 
	$dül
(
d
, 
d2
)

372 
düÀ¡
 *
d
;

373 
düÀ¡
 **
d2
;

375 *
s
 = 0, *
t
 = 0;

376 
f
, 
x
 = 0;

377 
modidx
, 
ªåõs
 = 0;

378 
maxªåõs
 = 1, 
rdñay
 = 45;

379 
nb
, 
ªt°
 = -1;

380 *
ªas⁄
 = 
	`_
("MaxÑetries");

381 
time_t
 
now
, 
œ°
;

382 
tm
 *
±ime
;

383 
buf
[128];

384 
modbuf
[128];

387 
	`timî_upd©e
();

389 i‡(
P_HASDCD
[0]=='Y' && 
⁄löe
 >= 0) {

390 
	`wîr‹
(
	`_
("Youáreálready online! Hang up first."));

391 (
ªt°
);

394 
dülwö
 = 
	`w›í
(18, 9, 62, 16, 
BSINGLE
, 
°d©å
, 
mfcﬁ‹
, 
mbcﬁ‹
, 0, 0, 1);

395 
	`wtôÀ
(
dülwö
, 
TMID
, 
	`_
("Autodial"));

396 
	`wcurs‹
(
dülwö
, 
CNONE
);

398 
	`wputs
(
dülwö
, "\n");

399 
	`w¥ötf
(
dülwö
, " %†: %s\n", 
	`_
("Dülög"), 
d
->
«me
);

400 
	`w¥ötf
(
dülwö
, 
	`_
(" Aà: %s\n"), 
d
->
numbî
);

401 i‡(
d
->
œ°d©e
[0] && d->
œ°time
[0])

402 
	`w¥ötf
(
dülwö
, 
	`_
(" La° o¿: %†© %s\n"), 
d
->
œ°d©e
, d->
œ°time
);

404 
	`w¥ötf
(
dülwö
, "\n");

405 
	`wªdøw
(
dülwö
, 1);

408 
	`keybﬂrd
(
KSIGIO
, 0);

410 
maxªåõs
 = 
	`©oi
(
P_MRETRIES
);

411 i‡(
maxªåõs
 <= 0) maxretries = 1;

412 
rdñay
 = 
	`©oi
(
P_MRDELAY
);

413 i‡(
rdñay
 < 0)Ñdelay = 0;

416 
MaöLo›
:

417 ++
ªåõs
 <
maxªåõs
) {

420 i‡(
ªåõs
 > 1 && (
d
->
Êags
 & 
FL_TAG
)) {

422 
d
 = d->
√xt
;

423 i‡(
d
 =(
düÀ¡
 *)
NULL
Ëd = 
düÀ¡s
;

424 } !(
d
->
Êags
 & 
FL_TAG
));

425 
	`wloˇã
(
dülwö
, 0, 1);

426 
	`w¥ötf
(
dülwö
, 
	`_
(" Dülög : %s"), 
d
->
«me
);

427 
	`w˛ªﬁ
(
dülwö
);

428 
	`w¥ötf
(
dülwö
, 
	`_
("\¿ Aà: %s"), 
d
->
numbî
);

429 
	`w˛ªﬁ
(
dülwö
);

430 i‡(
d
->
œ°d©e
[0] && d->
œ°time
[0]) {

431 
	`w¥ötf
(
dülwö
, 
	`_
("\n Last on : %sát %s"),

432 
d
->
œ°d©e
, d->
œ°time
);

433 
	`w˛ªﬁ
(
dülwö
);

438 
dü…ime
 = 
	`©oi
(
P_MDIALTIME
);

439 i‡(
dü…ime
 == 0) dialtime = 45;

440 
	`time
(&
now
);

441 
œ°
 = 
now
;

444 
	`wloˇã
(
dülwö
, 0, 4);

445 
	`w¥ötf
(
dülwö
, 
	`_
(" Timê: %-3d"), 
dü…ime
);

446 i‡(
maxªåõs
 > 1Ë
	`w¥ötf
(
dülwö
, 
	`_
(" Aâem± #%d"), 
ªåõs
);

447 
	`wputs
(
dülwö
, 
	`_
("\n\n\n EscapeÅo cancel, spaceÅoÑetry."));

450 
	`m_Êush
(
p‹tfd
);

451 
d
->
dü…y≥
) {

453 
	`mputs
(
P_MDIALPRE
, 0);

454 
	`mputs
(
d
->
numbî
, 0);

455 
	`mputs
(
P_MDIALSUF
, 0);

458 
	`mputs
(
P_MDIALPRE2
, 0);

459 
	`mputs
(
d
->
numbî
, 0);

460 
	`mputs
(
P_MDIALSUF2
, 0);

463 
	`mputs
(
P_MDIALPRE3
, 0);

464 
	`mputs
(
d
->
numbî
, 0);

465 
	`mputs
(
P_MDIALSUF3
, 0);

470 
modbuf
[0] = 0;

471 
modidx
 = 0;

472 
s
 = 
buf
;

473 
buf
[0] = 0;

474 
dü…ime
 > 0) {

475 i‡(*
s
 == 0) {

476 
x
 = 
	`check_io
(
p‹tfd
, 0, 1000, 
buf
, 
NULL
);

477 
s
 = 
buf
;

479 i‡(
x
 & 2) {

480 
f
 = 
	`keybﬂrd
(
KGETKEY
, 0);

482 i‡(
f
 =
K_ESC
Ë
	`mputs
(
P_MDIALCAN
, 0);

485 i‡(
f
 == ' ') {

486 
	`mputs
(
P_MDIALCAN
, 0);

487 
	`dülÁûed
(
	`_
("Cancelled"), 4);

488 
	`m_Êush
(
p‹tfd
);

491 (Ë
	`keybﬂrd
(
KSTOP
, 0);

492 
	`w˛o£
(
dülwö
, 1);

493 (
ªt°
);

495 i‡(
x
 & 1) {

497 i‡(*
s
 == '\r' || *s == '\n') {

499 
modbuf
[
modidx
] = 0;

500 
modidx
 = 0;

501 } i‡(
modidx
 < 127) {

503 
modbuf
[
modidx
++] = *
s
;

504 
modbuf
[
modidx
] = 0;

507 i‡(*
s
) s++;

509 i‡(
modidx
 == 0 &&

510 !
	`°∫cmp
(
modbuf
, 
P_MCONNECT
, 
	`°æí
(P_MCONNECT))) {

511 
	`timî_upd©e
();

512 
ªt°
 = 0;

514 i‡(
	`ssˇnf
(
modbuf
 + 
	`°æí
(
P_MCONNECT
), "%ld", &
nb
) == 1)

515 
ªt°
 = 
nb
;

516 
löe•d
 = 
ªt°
;

519 
f
 = 
	`m_gëdcd
(
p‹tfd
);

520 
bogus_dcd
 = 1;

523 i‡(
P_LOGCONN
[0] == 'Y')

524 
	`do_log
("%†%s, %s",
modbuf
, 
d
->
«me
, d->
numbî
);

526 
±ime
=
	`loˇ…ime
(&
now
);

527 
	`•rötf
(
d
->
œ°d©e
,"%4.4d%2.2d%2.2d",

528 (
±ime
->
tm_yór
)+1900,’time->
tm_m⁄
)+1,

529 
±ime
->
tm_mday
);

530 
	`•rötf
(
d
->
œ°time
,"%02d:%02d",

531 
±ime
->
tm_hour
,±ime->
tm_mö
);

532 
d
->
cou¡
 ++;

534 #i‡
_HAVE_MACROS


535 i‡(
d
->
c⁄vfûe
[0]) {

536 
	`lﬂdc⁄v
(
d
->
c⁄vfûe
);

537 
	`°r˝y
(
P_CONVF
, 
d
->
c⁄vfûe
);

541 
	`wloˇã
(
dülwö
, 1, 7);

542 i‡(
d
->
s¸ùt
[0] == 0) {

543 
	`wputs
(
dülwö
,

544 
	`_
("Connected. Pressány keyÅo continue"));

545 #i‡
VC_MUSIC


546 i‡(
P_SOUND
[0] == 'Y')

547 
	`music
();

549 
x
 = 
	`check_io
(-1, 0, 0, 
NULL
, NULL);

550 i‡((
x
 & 2) == 2)

551 (Ë
	`keybﬂrd
(
KGETKEY
, 0);

556 i‡(
P_SOUND
[0] == 'Y')

557 
	`wputs
(
dülwö
,"\007\007\007");

559 
x
 = 
	`check_io
(-1, 0, 0, 
NULL
, NULL);

560 i‡((
x
 & 2) == 2)

561 (Ë
	`keybﬂrd
(
KGETKEY
, 0);

563 
	`keybﬂrd
(
KSTOP
, 0);

564 
	`w˛o£
(
dülwö
, 1);

566 
	`w¥ötf
(
us
, "\r\n%s\r\n", 
modbuf
);

567 
dülwö
 = 
NIL_WIN
;

570 
d
->
Êags
 &~
FL_TAG
;

573 i‡(
d2
 !(
düÀ¡
**)
NULL
)

574 *
d2
 = 
d
;

577 i‡(
P_MULTILINE
[0] == 'Y') {

579 
düÀ¡
 *
d3
;

581 
d3
 = 
düÀ¡s
;

582 
d3
 !(
düÀ¡
*)
NULL
) {

583 i‡(!
	`°rcmp
(
d3
->
«me
, 
d
->name))

584 
d3
->
Êags
 &~
FL_TAG
;

586 
d3
 = d3->
√xt
;

590 (
ªt°
);

592 
f
 = 0; f < 3; f++) {

593 i‡(
f
 =0Ë
t
 = 
P_MNOCON1
;

594 i‡(
f
 =1Ë
t
 = 
P_MNOCON2
;

595 i‡(
f
 =2Ë
t
 = 
P_MNOCON3
;

596 i‡(
f
 =3Ë
t
 = 
P_MNOCON4
;

597 i‡((*
t
Ë&& (!
	`°∫cmp
(
modbuf
,Å, 
	`°æí
(t)))) {

598 i‡(
ªåõs
 < 
maxªåõs
) {

599 
x
 = 
	`dülÁûed
(
t
, 
rdñay
);

600 i‡(
x
 < 0) {

601 
	`keybﬂrd
(
KSTOP
, 0);

602 
	`w˛o£
(
dülwö
, 1);

603 (
ªt°
);

606 i‡(
maxªåõs
 =1Ë
ªas⁄
 = 
t
;

607 
MaöLo›
;

613 
	`time
(&
now
);

614 i‡(
œ°
 !
now
) {

615 
dü…ime
 -(
now
 - 
œ°
);

616 i‡(
dü…ime
 < 0) dialtime = 0;

617 
	`wloˇã
(
dülwö
, 11, 4);

618 
	`w¥ötf
(
dülwö
, "%-3d ", 
dü…ime
);

619 i‡(
dü…ime
 <= 0) {

620 
	`mputs
(
P_MDIALCAN
, 0);

621 
ªas⁄
 = 
	`_
("Timeout");

622 
ªt°
 = -1;

623 i‡(
ªåõs
 < 
maxªåõs
) {

624 
x
 = 
	`dülÁûed
(
ªas⁄
, 
rdñay
);

625 i‡(
x
 < 0) {

626 
	`keybﬂrd
(
KSTOP
, 0);

627 
	`w˛o£
(
dülwö
, 1);

628 (
ªt°
);

633 
œ°
 = 
now
;

636 
	`dülÁûed
(
ªas⁄
, -1);

637 
	`keybﬂrd
(
KSTOP
, 0);

638 
	`w˛o£
(
dülwö
, 1);

639 (
ªt°
);

640 
	}
}

645 
düÀ¡
 *
	$mk°dít
()

647 
düÀ¡
 *
d
;

649 
d
 = (
düÀ¡
 *)
	`mÆloc
( (dialent));

651 i‡(
d
 =(
düÀ¡
 *)0) (d);

653 
d
->
«me
[0] = 0;

654 
d
->
numbî
[0] = 0;

655 
d
->
s¸ùt
[0] = 0;

656 
d
->
u£∫ame
[0] = 0;

657 
d
->
∑ssw‹d
[0] = 0;

658 
d
->
ãrm
 = 1;

659 
d
->
dü…y≥
 = 0;

660 
d
->
Êags
 = 
FL_DEL
;

661 
	`°r˝y
(
d
->
baud
, "Curr");

662 
	`°r˝y
(
d
->
bôs
, "8");

663 
	`°r˝y
(
d
->
∑rôy
, "N");

664 
d
->
œ°d©e
[0] = 0;

665 
d
->
œ°time
[0] = 0;

666 
d
->
cou¡
 = 0;

667 
d
->
c⁄vfûe
[0] = 0;

668 
	`°r˝y
(
d
->
°›b
, "1");

669 
d
->
√xt
 = (
düÀ¡
 *)0;

671 (
d
);

672 
	}
}

675 
	$v4_ªad
(
Â
, 
d
, 
dv
)

676 
düÀ¡
 *
d
;

677 
FILE
 *
Â
;

678 
dvî
 *
dv
;

680 (Ë
	`‰ód
((*)
d
, 
dv
->
size
, (
size_t
)1, 
Â
);

682 i‡(
dv
->
size
 < (
düÀ¡
)) {

683 i‡(
dv
->
size
 < 
	`off£tof
(
düÀ¡
, 
cou¡
) + (dialent *)){

684 
d
->
cou¡
 = 0;

685 
d
->
œ°time
[0] = 0;

686 
d
->
œ°d©e
[0] = 0;

688 i‡(
dv
->
size
 < 
	`off£tof
(
düÀ¡
, 
°›b
) + (dialent *))

689 
d
->
c⁄vfûe
[0]=0;

690 
	`°r˝y
(
d
->
°›b
, "1");

692 
	}
}

695 
	$v3_ªad
(
Â
, 
d
)

696 
düÀ¡
 *
d
;

697 
FILE
 *
Â
;

699 
v3_düÀ¡
 
v3
;

701 (Ë
	`‰ód
((*)&
v3
, (v3), (
size_t
)1, 
Â
);

702 
	`mem˝y
(
d
, &
v3
, 
	`off£tof
(
v3_düÀ¡
, 
√xt
));

704 
d
->
œ°d©e
[0]=0;

705 
d
->
œ°time
[0]=0;

706 
d
->
cou¡
=0;

707 
d
->
c⁄vfûe
[0]=0;

708 
	`°r˝y
(
d
->
°›b
, "1");

709 
	}
}

712 
	$v2_ªad
(
Â
, 
d
)

713 
düÀ¡
 *
d
;

714 
FILE
 *
Â
;

716 
v3_düÀ¡
 
v3
;

718 (Ë
	`‰ód
((*)&
v3
, (v3), (
size_t
)1, 
Â
);

719 
	`mem˝y
(
d
, &
v3
, 
	`off£tof
(
v3_düÀ¡
, 
√xt
));

720 i‡(
d
->
Êags
 & 
FL_ANSI
Ëd->Êag†|
FL_WRAP
;

721 
d
->
œ°d©e
[0]=0;

722 
d
->
œ°time
[0]=0;

723 
d
->
cou¡
=0;

724 
d
->
c⁄vfûe
[0]=0;

725 
	`°r˝y
(
d
->
°›b
, "1");

726 
	}
}

729 
	$v1_ªad
(
Â
, 
d
)

730 
FILE
 *
Â
;

731 
düÀ¡
 *
d
;

733 
v1_düÀ¡
 
v1
;

735 
	`‰ód
((*)&
v1
, (v1), (
size_t
)1, 
Â
);

736 
	`mem˝y
(
d
->
u£∫ame
, 
v1
.u£∫ame, (v1Ë- 
	`off£tof
(
v1_düÀ¡
, username));

737 
	`°∫˝y
(
d
->
«me
, 
v1
.name, (d->name));

738 
	`°∫˝y
(
d
->
numbî
, 
v1
.number, (d->number));

739 
	`°∫˝y
(
d
->
s¸ùt
, 
v1
.script, (d->script));

740 
d
->
œ°d©e
[0]=0;

741 
d
->
œ°time
[0]=0;

742 
d
->
cou¡
=0;

743 
d
->
c⁄vfûe
[0]=0;

744 
	`°r˝y
(
d
->
°›b
, "1");

745 
	}
}

748 
	$v0_ªad
(
Â
, 
d
)

749 
FILE
 *
Â
;

750 
düÀ¡
 *
d
;

752 
	`v1_ªad
(
Â
, 
d
);

753 
d
->
dü…y≥
 = 0;

754 
d
->
Êags
 = 0;

755 
	}
}

760 
	$ªaddüldú
()

762 
size
;

763 
FILE
 *
Â
;

764 
dfûe
[256];

765 
c›ycmd
[512];

766 
didªad
 = 0;

767 
f
;

768 
düÀ¡
 *
d
 = 
NULL
, *
¥ev
 = (dialent *)0;

769 
dvî
 
dül_vî
;

770 
WIN
 *
w
;

772 i‡(
didªad
) (0);

773 
didªad
 = 1;

774 
ƒíts
 = 1;

775 
ègged
 = (*)
	`mÆloc
(1);

776 
ègged
[0] = 0;

779 
d_m™
 = 
	`mk°dít
();

780 
	`°r˝y
(
d_m™
->
«me
, 
	`_
("ManuallyÉnteredÇumber"));

783 
	`¢¥ötf
(
dfûe
, (dfûe), "%s/.düldú", 
homedú
);

786 i‡((
Â
 = 
	`sf›í
(
dfûe
, "r")Ë=(
FILE
 *)
NULL
) {

787 i‡(
î∫o
 =
EPERM
) {

788 
	`wîr‹
(
	`_
("Cannot open ~/.dialdir:Öermission denied"));

789 
düÀ¡s
 = 
	`mk°dít
();

790 
dídd
 = 1;

793 
düÀ¡s
 = 
	`mk°dít
();

798 
	`f£ek
(
Â
, 0L, 
SEEK_END
);

799 
size
 = 
	`·ñl
(
Â
);

800 i‡(
size
 == 0) {

801 
düÀ¡s
 = 
	`mk°dít
();

802 
	`f˛o£
(
Â
);

807 
	`f£ek
(
Â
, 0L, 
SEEK_SET
);

808 
	`‰ód
(&
dül_vî
, (dül_vî), 1, 
Â
);

809 i‡(
dül_vî
.
magic
 !
DIALMAGIC
) {

811 
dül_vî
.
vîsi⁄
 = 0;

812 
	`f£ek
(
Â
, 0L, 
SEEK_SET
);

814 
size
 -(
dül_vî
);

817 
dül_vî
.
vîsi⁄
) {

820 
dül_vî
.
size
 = (
v1_düÀ¡
);

824 
dül_vî
.
size
 = (
v3_düÀ¡
);

836 i‡(
dül_vî
.
size
 < 200 ||

837 
dül_vî
.
size
 > (
düÀ¡
)) {

838 
	`wîr‹
(
	`_
("Phonelist garbled (unknown version?)"));

839 
dídd
 = 1;

840 
düÀ¡s
 = 
	`mk°dít
();

845 
	`wîr‹
(
	`_
("Unknown dialing directory version"));

846 
dídd
 = 1;

847 
düÀ¡s
 = 
	`mk°dít
();

851 i‡(
size
 % 
dül_vî
.size != 0) {

852 
	`wîr‹
(
	`_
("Phonelist garbled (?)"));

853 
	`f˛o£
(
Â
);

854 
dídd
 = 1;

855 
düÀ¡s
 = 
	`mk°dít
();

860 
ƒíts
 = 
size
 / 
dül_vî
.size;

861 i‡(
ƒíts
 == 0) {

862 
düÀ¡s
 = 
	`mk°dít
();

863 
ƒíts
 = 1;

864 
	`f˛o£
(
Â
);

867 
f
 = 1; f <
ƒíts
; f++) {

868 i‡((
d
 = (
düÀ¡
 *)
	`mÆloc
( (dialent))) ==

869 (
düÀ¡
 *)0) {

870 if(
f
 == 1)

871 
düÀ¡s
 = 
	`mk°dít
();

873 
¥ev
->
√xt
 = (
düÀ¡
 *)0;

875 
	`wîr‹
(
	`_
("Out of memory whileÑeading dialing directory"));

876 
	`f˛o£
(
Â
);

879 
dül_vî
.
vîsi⁄
) {

881 
	`v0_ªad
(
Â
, 
d
);

884 
	`v1_ªad
(
Â
, 
d
);

887 
	`v2_ªad
(
Â
, 
d
);

890 
	`v3_ªad
(
Â
, 
d
);

893 
	`v4_ªad
(
Â
, 
d
, &
dül_vî
);

897 i‡(
d
->
ãrm
 == 2) d->term = 1;

899 i‡(
¥ev
 !(
düÀ¡
 *)0)

900 
¥ev
->
√xt
 = 
d
;

902 
düÀ¡s
 = 
d
;

903 
¥ev
 = 
d
;

905 
d
->
√xt
 = (
düÀ¡
 *)0;

906 
	`f˛o£
(
Â
);

907 i‡(
dül_vî
.
size
 < (
düÀ¡
)) {

908 i‡(
	`¢¥ötf
(
c›ycmd
,(copycmd),

909 "˝ %†%s.%hd",
dfûe
,dfûe,
dül_vî
.
size
) > 0) {

910 i‡(
P_LOGFNAME
[0] != 0)

911 
	`do_log
("%s", 
c›ycmd
);

912 i‡(
	`sy°em
(
c›ycmd
) == 0) {

913 
	`¢¥ötf
(
c›ycmd
,(copycmd),

914 
	`_
("Old düldú c›õdá†%s.%hd"),
dfûe
,
dül_vî
.
size
);

915 
w
=
	`mc_ãŒ
("%s", 
c›ycmd
);

916 i‡(
w
) {

917 
	`¶ìp
(2);

918 
	`w˛o£
(
w
,1);

920 
	`wrôedüldú
();

925 
	}
}

930 
	$wrôedüldú
()

932 
düÀ¡
 *
d
;

933 
dfûe
[256];

934 
FILE
 *
Â
;

935 
dvî
 
dül_vî
;

936 
ﬁdÊ
;

937 
omask
;

940 i‡(
dídd
) ;

942 
	`¢¥ötf
(
dfûe
, (dfûe), "%s/.düldú", 
homedú
);

944 
omask
 = 
	`umask
(077);

945 i‡((
Â
 = 
	`sf›í
(
dfûe
, "w")Ë=(
FILE
 *)0) {

946 ()
	`umask
(
omask
);

947 
	`wîr‹
(
	`_
("Can't writeÅo ~/.dialdir"));

948 
dídd
 = 1;

951 ()
	`umask
(
omask
);

953 
d
 = 
düÀ¡s
;

955 
dül_vî
.
magic
 = 
DIALMAGIC
;

956 
dül_vî
.
vîsi⁄
 = 4;

957 
dül_vî
.
size
 = (
düÀ¡
);

958 
dül_vî
.
ªs1
 = 0;

959 
dül_vî
.
ªs2
 = 0;

960 
dül_vî
.
ªs3
 = 0;

961 
dül_vî
.
ªs4
 = 0;

962 
	`fwrôe
(&
dül_vî
, (dül_vî), (
size_t
)1, 
Â
);

965 
d
) {

966 
ﬁdÊ
 = 
d
->
Êags
;

967 
d
->
Êags
 &
FL_SAVE
;

968 i‡(
	`fwrôe
(
d
, (
düÀ¡
), (
size_t
)1, 
Â
) != 1) {

969 
	`wîr‹
(
	`_
("Error writing ~/.dialdir!"));

970 
	`f˛o£
(
Â
);

973 
d
->
Êags
 = 
ﬁdÊ
;

974 
d
 = d->
√xt
;

976 
	`f˛o£
(
Â
);

977 
	}
}

983 
düÀ¡
 *
	$gëno
(
no
)

984 
no
;

986 
düÀ¡
 *
d
;

988 
d
 = 
düÀ¡s
;

990 i‡(
no
 >
ƒíts
Ë((
düÀ¡
 *)
NULL
);

992 
no
--Ë
d
 = d->
√xt
;

993 (
d
);

994 
	}
}

997 *
	gã
[] = { "VT102", "MINIX", "ANSI " };

1002 
	$dedô
(
d
)

1003 
düÀ¡
 *
d
;

1005 
WIN
 *
w
;

1006 
c
;

1007 * 
«me
 = 
	`_
(" A - Name :"),

1008 * 
numbî
 = 
	`_
(" B - Number :"),

1009 * 
dül_°rög
 = 
	`_
(" C - Dial string # :"),

1010 * 
loˇl_echo
 = 
	`_
(" D - LocalÉcho :"),

1011 * 
s¸ùt
 = 
	`_
(" E - Script :"),

1012 * 
u£∫ame
 = 
	`_
(" F - Username :"),

1013 * 
∑ssw‹d
 = 
	`_
(" G - Password :"),

1014 * 
ãrmöÆ_emuœti⁄
 = 
	`_
(" H - Terminal Emulation :"),

1015 * 
back•a˚_key_£nds
 = 
	`_
(" I - Backspace key sends :"),

1016 * 
löewøp
 = 
	`_
(" J - Linewrap :"),

1017 * 
löe_£âögs
 = 
	`_
(" K - Line Settings :"),

1018 * 
c⁄vîsi⁄_èbÀ
 = 
	`_
(" L - ConversionÅable :"),

1019 * 
que°i⁄
 = 
	`_
("Change which setting?");

1021 
w
 = 
	`w›í
(5, 4, 75, 19, 
BDOUBLE
, 
°d©å
, 
mfcﬁ‹
, 
mbcﬁ‹
, 0, 0, 1);

1022 
	`w¥ötf
(
w
, "%†%s\n", 
«me
, 
d
->name);

1023 
	`w¥ötf
(
w
, "%†%s\n", 
numbî
, 
d
->number);

1024 
	`w¥ötf
(
w
, "%†%d\n", 
dül_°rög
, 
d
->
dü…y≥
 + 1);

1025 
	`w¥ötf
(
w
, "%†%s\n", 
loˇl_echo
, 
	`_
(
	`ye¢o
(
d
->
Êags
 & 
FL_ECHO
)));

1026 
	`w¥ötf
(
w
, "%†%s\n", 
s¸ùt
, 
d
->script);

1027 
	`w¥ötf
(
w
, "%†%s\n", 
u£∫ame
, 
d
->username);

1028 
	`w¥ötf
(
w
, "%†%s\n", 
∑ssw‹d
, 
d
->password);

1029 
	`w¥ötf
(
w
, "%†%s\n", 
ãrmöÆ_emuœti⁄
, 
ã
[
d
->
ãrm
 - 1]);

1030 
	`w¥ötf
(
w
, "%†%s\n", 
back•a˚_key_£nds
,

1031 
d
->
Êags
 & 
FL_DEL
 ? 
	`_
("Delete") : _("Backspace"));

1032 
	`w¥ötf
(
w
, "%†%s\n", 
löewøp
,

1033 
d
->
Êags
 & 
FL_WRAP
 ? 
	`_
("On") : _("Off"));

1034 
	`w¥ötf
(
w
, "%†%†%s%s%s\n", 
löe_£âögs
,

1035 
d
->
baud
, d->
bôs
, d->
∑rôy
, d->
°›b
);

1036 
	`w¥ötf
(
w
, "%†%s\n", 
c⁄vîsi⁄_èbÀ
, 
d
->
c⁄vfûe
);

1037 
	`w¥ötf
(
w
, 
	`_
(" La° düÀd : %†%s\n"),
d
->
œ°d©e
,d->
œ°time
);

1038 
	`w¥ötf
(
w
, 
	`_
(" Time†⁄ : %d"),
d
->
cou¡
);

1039 
	`wloˇã
(
w
, 4, 15);

1040 
	`wputs
(
w
, 
que°i⁄
);

1041 
	`wªdøw
(
w
, 1);

1044 
	`wloˇã
(
w
, 
	`°æí
 (
que°i⁄
) + 5, 15);

1045 
c
 = 
	`wxgëch
();

1046 i‡(
c
 >= 'a') c -= 32;

1047 
c
) {

1051 
	`w˛o£
(
w
, 1);

1054 
	`wloˇã
(
w
, 
	`°æí
 (
«me
) + 1, 0);

1055 (Ë
	`wgës
(
w
, 
d
->
«me
, 31, 32);

1058 
	`wloˇã
(
w
, 
	`°æí
 (
numbî
) + 1, 1);

1059 (Ë
	`wgës
(
w
, 
d
->
numbî
, 31, 32);

1062 
d
->
dü…y≥
 = (d->dialtype + 1) % 3;

1063 
	`wloˇã
(
w
, 
	`°æí
 (
dül_°rög
) + 1, 2);

1064 
	`w¥ötf
(
w
, "%d", 
d
->
dü…y≥
 + 1);

1065 
	`wÊush
();

1068 
d
->
Êags
 ^
FL_ECHO
;

1069 
	`wloˇã
(
w
, 
	`°æí
 (
loˇl_echo
) + 1, 3);

1070 
	`w¥ötf
(
w
, "%s", 
	`_
(
	`ye¢o
(
d
->
Êags
 & 
FL_ECHO
)));

1071 
	`wÊush
();

1074 
	`wloˇã
(
w
, 
	`°æí
 (
s¸ùt
) + 1, 4);

1075 (Ë
	`wgës
(
w
, 
d
->
s¸ùt
, 31, 32);

1078 
	`wloˇã
(
w
, 
	`°æí
 (
u£∫ame
) + 1, 5);

1079 (Ë
	`wgës
(
w
, 
d
->
u£∫ame
, 31, 32);

1082 
	`wloˇã
(
w
, 
	`°æí
 (
∑ssw‹d
) + 1, 6);

1083 (Ë
	`wgës
(
w
, 
d
->
∑ssw‹d
, 31, 32);

1086 
d
->
ãrm
 = (d->term % 3) + 1;

1088 i‡(
d
->
ãrm
 == 2) d->term = 3;

1089 
	`wloˇã
(
w
, 
	`°æí
 (
ãrmöÆ_emuœti⁄
) + 1, 7);

1090 
	`wputs
(
w
, 
ã
[
d
->
ãrm
 - 1]);

1093 i‡(
d
->
ãrm
 =
ANSI
) {

1094 
d
->
Êags
 &~
FL_DEL
;

1095 
d
->
Êags
 |
FL_WRAP
;

1097 
d
->
Êags
 &~
FL_WRAP
;

1098 
d
->
Êags
 |
FL_DEL
;

1100 
	`wloˇã
(
w
, 
	`°æí
 (
back•a˚_key_£nds
) + 1, 8);

1101 
	`wputs
(
w
, 
d
->
Êags
 & 
FL_DEL
 ? 
	`_
("Delete ") : _("Backspace"));

1102 
	`wloˇã
(
w
, 
	`°æí
 (
löewøp
) + 1, 9);

1103 
	`wputs
(
w
, 
d
->
Êags
 & 
FL_WRAP
 ? 
	`_
("On ") : _("Off"));

1106 
d
->
Êags
 ^
FL_DEL
;

1107 
	`wloˇã
(
w
, 
	`°æí
 (
back•a˚_key_£nds
) + 1, 8);

1108 
	`wputs
(
w
, 
d
->
Êags
 & 
FL_DEL
 ? 
	`_
("Delete ") : _("Backspace"));

1111 
d
->
Êags
 ^
FL_WRAP
;

1112 
	`wloˇã
(
w
, 
	`°æí
 (
löewøp
) + 1, 9);

1113 
	`wputs
(
w
, 
d
->
Êags
 & 
FL_WRAP
 ? 
	`_
("On ") : _("Off"));

1116 
	`gë_bbp
(
d
->
baud
, d->
bôs
, d->
∑rôy
, d->
°›b
, 1);

1117 
	`wloˇã
(
w
, 
	`°æí
 (
löe_£âögs
) + 1, 10);

1118 
	`w¥ötf
(
w
, "%s %s%s%s ",

1119 
d
->
baud
, d->
bôs
, d->
∑rôy
, d->
°›b
);

1122 
	`wloˇã
(
w
, 
	`°æí
 (
c⁄vîsi⁄_èbÀ
) + 1, 11);

1123 (Ë
	`wgës
(
w
, 
d
->
c⁄vfûe
, 15, 16);

1129 
	}
}

1131 
WIN
 *
	gdsub
;

1132 *
	gwh©
 =

1133 
N_
(" Dial Find Add Edit Remove moVe Manual ");

1136 
	gd¥ev
;

1137 
	#DIALOPTS
 7

	)

1142 
	$dhûi
(
posôi⁄_dülög_dúe˘‹y
, 
k
)

1143 
posôi⁄_dülög_dúe˘‹y
, 
k
;

1151 
›ti⁄_size
 = 
	`°æí
 (
	`_
(
wh©
)Ë/ 
DIALOPTS
;

1153 i‡(
k
 =
d¥ev
) ;

1155 i‡(
d¥ev
 >= 0) {

1156 
	`wloˇã
(
dsub
, 
posôi⁄_dülög_dúe˘‹y
 + 
›ti⁄_size
 * 
d¥ev
, 0);

1157 i‡(!
u£©å
) {

1158 
	`wputs
(
dsub
, " ");

1161 
	`w£èâr
(
dsub
, 
XA_REVERSE
 | 
°d©å
);

1162 
	`w¥ötf
(
dsub
, "%*.*s", 
›ti⁄_size
, o±i⁄_size, 
	`_
(
wh©
Ë+ o±i⁄_sizê* 
d¥ev
);

1165 
d¥ev
 = 
k
;

1166 
	`wloˇã
(
dsub
, 
posôi⁄_dülög_dúe˘‹y
 + 
›ti⁄_size
 * 
k
, 0);

1167 i‡(!
u£©å
) {

1168 
	`wputs
(
dsub
, ">");

1170 
	`w£èâr
(
dsub
, 
°d©å
);

1171 
	`w¥ötf
(
dsub
, "%*.*s", 
›ti⁄_size
, o±i⁄_size, 
	`_
(
wh©
Ë+ o±i⁄_sizê* 
k
);

1173 
	}
}

1176 *
	gfmt
 = "\r %2d %c%-16.16s%-16.16s%8.8s %5.5s %4d %-15.15s\n";

1181 
	$¥dú
(
dülw
, 
t›
, 
cur
)

1182 
WIN
 *
dülw
;

1183 
t›
, 
cur
;

1185 
f
, 
°¨t
;

1186 
düÀ¡
 *
d
;

1188 
°¨t
 = 
cur
 - 
t›
;

1189 
dúÊush
 = 0;

1190 
	`wloˇã
(
dülw
, 0, 
°¨t
 + 1);

1191 
f
 = 
°¨t
; f < 
dülw
->
ys
 - 2; f++) {

1192 
d
 = 
	`gëno
(
f
 + 
t›
);

1193 i‡(
d
 =(
düÀ¡
 *)0) ;

1194 
	`w¥ötf
(
dülw
, 
fmt
, 
f
+1+
t›
, (
d
->
Êags
 & 
FL_TAG
) ? '>' : ' ',

1195 
d
->
«me
, d->
numbî
, d->
œ°d©e
, d->
œ°time
,

1196 
d
->
cou¡
, d->
s¸ùt
);

1198 
dúÊush
 = 1;

1199 
	`wÊush
();

1200 
	}
}

1205 
	$move_íåy
(
WIN
 *
dülw
, 
düÀ¡
 *
d
, 
cur
, *
t›
)

1207 
ocur
 = 
cur
,

1208 
quô
 = 0,

1209 
c
 = 0;

1210 
düÀ¡
 *
dtmp
;

1212 !
quô
) {

1214 
c
 = 
	`wxgëch
()) {

1215 
K_DN
:

1217 i‡(!(
d
->
√xt
))

1219 i‡(
cur
 == 0) {

1220 
dtmp
 = 
d
->
√xt
;

1221 
d
->
√xt
 = 
dtmp
->next;

1222 
dtmp
->
√xt
 = 
d
;

1223 
düÀ¡s
 = 
dtmp
;

1225 
dtmp
 = 
	`gëno
(
cur
 - 1);

1226 
dtmp
->
√xt
 = 
d
->next;

1227 
d
->
√xt
 = d->next->next;

1228 
dtmp
->
√xt
->√xà
d
;

1230 
cur
++;

1232 
K_UP
:

1234 i‡(
cur
 == 0)

1236 i‡(
cur
 == 1) {

1237 
dtmp
 = 
düÀ¡s
;

1238 
dtmp
->
√xt
 = 
d
->Çext;

1239 
d
->
√xt
 = 
dtmp
;

1240 
düÀ¡s
 = 
d
;

1242 
dtmp
 = 
	`gëno
(
cur
 - 2);

1243 
dtmp
->
√xt
->√xà
d
->Çext;

1244 
d
->
√xt
 = 
dtmp
->next;

1245 
dtmp
->
√xt
 = 
d
;

1247 
cur
--;

1252 
quô
 = 1;

1259 i‡(
cur
 !
ocur
) {

1261 
	`wcurb¨
(
dülw
, 
ocur
 + 1 - *
t›
, 
XA_NORMAL
 | 
°d©å
);

1262 i‡(
cur
 < *
t›
)

1263 (*
t›
)--;

1264 i‡(
cur
 - *
t›
 > 
dülw
->
ys
 - 3)

1265 (*
t›
)++;

1266 
	`¥dú
(
dülw
, *
t›
, *top);

1267 
	`wcurb¨
(
dülw
, 
cur
 + 1 - *
t›
, 
XA_REVERSE
 | 
°d©å
);

1268 
ocur
 = 
cur
;

1273  
cur
;

1274 
	}
}

1277 *
	gd_ye¢o
[] = { 
N_
(" Ye† "), N_(" Nÿ "), 
CNULL
 };

1280 
	$dül_íåy
(
d
)

1281 
düÀ¡
 *
d
;

1283 
nb
;

1284 
düÀ¡
 *
d2
;

1287 i‡(
	`©oi
(
d
->
baud
) != 0) {

1288 
	`°r˝y
(
P_BAUDRATE
, 
d
->
baud
);

1289 
	`°r˝y
(
P_PARITY
, 
d
->
∑rôy
);

1290 
	`°r˝y
(
P_BITS
, 
d
->
bôs
);

1291 
	`°r˝y
(
P_STOPB
, 
d
->
°›b
);

1292 
	`p‹t_öô
();

1293 
	`mode_°©us
();

1295 
√wty≥
 = 
d
->
ãrm
;

1296 
	`vt_£t
(-1, 
d
->
Êags
 & 
FL_WRAP
, 
NULL
, -1, -1, d->Êag†& 
FL_ECHO
, -1, -1);

1297 #ifde‡
HAVE_SELECT


1298 
loˇl_echo
 = 
d
->
Êags
 & 
FL_ECHO
;

1300 i‡(
√wty≥
 !
ãrmöÆ
)

1301 
	`öô_emul
(
√wty≥
, 1);

1304 
	`keybﬂrd
(
KSETBS
, 
d
->
Êags
 & 
FL_DEL
 ? 127 : 8);

1305 
	`°r˝y
(
P_BACKSPACE
, 
d
->
Êags
 & 
FL_DEL
 ? "DEL" : "BS");

1308 i‡((
nb
 = 
	`dül
(
d
, &
d2
)) < 0) ;

1310 i‡(
d2
 !(
düÀ¡
 *)
NULL
)

1311 
d
 = 
d2
;

1314 i‡(
P_MAUTOBAUD
[0] ='Y' && 
nb
) {

1315 
	`•rötf
(
P_BAUDRATE
, "%ld", 
nb
);

1316 
	`p‹t_öô
();

1317 
	`mode_°©us
();

1319 i‡(
P_SHOWSPD
[0] == 'l')

1320 
	`mode_°©us
();

1323 
	`wrôedüldú
();

1326 i‡(
d
->
s¸ùt
[0]Ë
	`runs¸ùt
(0, d->s¸ùt, d->
u£∫ame
, d->
∑ssw‹d
);

1329 
dül_«me
 = 
d
->
«me
;

1330 
dül_numbî
 = 
d
->
numbî
;

1331 
dül_u£r
 = 
d
->
u£∫ame
;

1332 
dül_∑ss
 = 
d
->
∑ssw‹d
;

1334 
	}
}

1341 
	$dül⁄e
(
íåy
)

1342 *
íåy
;

1344 
num
;

1345 
düÀ¡
 *
d
;

1346 
düÀ¡
 *
d1
 = (düÀ¡ *)
NULL
;

1347 *
s
;

1348 
buf
[128];

1350 
s
 = 
	`°πok
(
íåy
,",;");

1351 
s
) {

1353 i‡((
num
 = 
	`©oi
(
s
)) != 0) {

1354 i‡(
d
 = 
	`gëno
(
num
 - 1)) {

1355 
d
->
Êags
 |
FL_TAG
;

1356 i‡(
d1
 =(
düÀ¡
 *)
NULL
)

1357 
d1
 = 
d
;

1360 
d
 = 
düÀ¡s
; d; d = d->
√xt
)

1361 i‡(
	`°r°r
(
d
->
«me
, 
s
)) {

1362 
d
->
Êags
 |
FL_TAG
;

1363 i‡(
d1
 =(
düÀ¡
 *)
NULL
)

1364 
d1
 = 
d
;

1367 
s
 = 
	`°πok
(
NULL
,",;");

1371 i‡(
d1
 =
NULL
) {

1372 
	`¢¥ötf
(
buf
, (buf), 
	`_
("E¡ry \"%s\"ÇŸ found. E¡î düldú?"), 
íåy
);

1373 i‡(
	`ask
(
buf
, 
d_ye¢o
) != 0) ;

1374 
	`düldú
();

1378 
	`¶ìp
(1);

1379 
	`dül_íåy
(
d1
);

1380 
	}
}

1385 
	$düldú
()

1387 
WIN
 *
w
;

1388 
düÀ¡
 *
d
 = 
NULL
, *
d1
, *
d2
;

1389 
cur
 = 0;

1390 
ocur
 = 0;

1391 
subm
 = 0;

1392 
quô
 = 0;

1393 
t›
 = 0;

1394 
c
 = 0;

1395 
pgud
 = 0;

1396 
fú°
 = 1;

1397 
x1
, 
x2
;

1398 *
s
, 
d«me
[128];

1399 
m™uÆ
[128];

1400 
ch™ged
 = 0;

1401 *
èg_exô
 = 
	`N_
("( EscapeÅoÉxit, SpaceÅoÅag )"),

1402 *
move_exô
 = 
	`N_
(" MoveÉntry up/down, EscapeÅoÉxit");

1403 
ègmvÀn
 = 0;

1404 
posôi⁄_dülög_dúe˘‹y
 = ((
COLS
 / 2Ë+ 32 - 
	`°æí
 (
	`_
(
wh©
))) / 2;

1406 
d¥ev
 = -1;

1407 
d«me
[0] = 0;

1408 
ègmvÀn
 = 
	`°æí
(
	`_
(
move_exô
));

1409 i‡(
	`°æí
(
	`_
(
èg_exô
)Ë> 
ègmvÀn
)

1410 
ègmvÀn
 = 
	`°æí
(
	`_
(
èg_exô
));

1414 
dúÊush
 = 0;

1415 
x1
 = (
COLS
 / 2) - 37;

1416 
x2
 = (
COLS
 / 2) + 37;

1417 
dsub
 = 
	`w›í
(
x1
 - 1, 
LINES
 - 3, 
x2
 + 1, LINES - 3, 
BNONE
,

1418 
XA_REVERSE
 | 
°d©å
, 
mfcﬁ‹
, 
mbcﬁ‹
, 0, 0, 1);

1419 
w
 = 
	`w›í
(
x1
, 2, 
x2
, 
LINES
 - 6, 
BSINGLE
, 
°d©å
, 
mfcﬁ‹
, 
mbcﬁ‹
, 0, 0, 1);

1420 
	`wcurs‹
(
w
, 
CNONE
);

1421 
	`wtôÀ
(
w
, 
TMID
, 
	`_
("Dialing Directory"));

1422 
	`wputs
(
w
,

1423 
	`_
(" Name Number Last on Times Script\n"));

1424 
	`wloˇã
(
dsub
, 
posôi⁄_dülög_dúe˘‹y
, 0);

1425 
	`wputs
(
dsub
, 
	`_
(
wh©
));

1427 
	`w£åegi⁄
(
w
, 1, w->
ys
 - 1);

1428 
w
->
dos¸ﬁl
 = 0;

1430 
	`¥dú
(
w
, 
t›
,Åop);

1431 
	`wloˇã
(
w
, 
posôi⁄_dülög_dúe˘‹y
, w->
ys
 - 1);

1432 
	`w¥ötf
(
w
, "%*.*s", 
ègmvÀn
,ègmvÀn, 
èg_exô
);

1433 
	`dhûi
(
posôi⁄_dülög_dúe˘‹y
, 
subm
);

1434 
dúÊush
 = 1;

1435 
	`wªdøw
(
dsub
, 1);

1437 
agaö
:

1438 
	`wcurb¨
(
w
, 
cur
 + 1 - 
t›
, 
XA_REVERSE
 | 
°d©å
);

1439 i‡(
fú°
) {

1440 
	`wªdøw
(
w
, 1);

1441 
fú°
 = 0;

1443 !
quô
) {

1444 
d
 = 
	`gëno
(
cur
);

1445 
c
 = 
	`wxgëch
()) {

1446 
K_UP
:

1448 
cur
 -= (cur > 0);

1450 
K_DN
:

1452 
cur
 +(cu∏< 
ƒíts
 - 1);

1454 
K_LT
:

1456 
subm
--;

1457 i‡(
subm
 < 0Ësubm = 
DIALOPTS
 - 1;

1459 
K_RT
:

1461 
subm
 = (subm + 1Ë% 
DIALOPTS
;

1463 
K_PGUP
:

1465 
pgud
 = 1;

1466 
quô
 = 1;

1468 
K_PGDN
:

1470 
pgud
 = 2;

1471 
quô
 = 1;

1474 
subm
 = 0;

1475 
quô
 = 1;

1478 
subm
 = 1;

1479 
quô
 = 1;

1482 
subm
 = 2;

1483 
quô
 = 1;

1486 
subm
 = 3;

1487 
quô
 = 1;

1490 
subm
 = 4;

1491 
quô
 = 1;

1494 
subm
 = 5;

1495 
quô
 = 2;

1498 
subm
 = 6;

1499 
quô
 = 1;

1502 
	`wloˇã
(
w
, 4, 
cur
 + 1 - 
t›
);

1503 
d
->
Êags
 ^
FL_TAG
;

1504 
	`w£èâr
(
w
, 
XA_REVERSE
 | 
°d©å
);

1505 
	`w¥ötf
(
w
, "%c", 
d
->
Êags
 & 
FL_TAG
 ? '>' : ' ');

1506 
	`w£èâr
(
w
, 
XA_NORMAL
 | 
°d©å
);

1507 
cur
 +(cu∏< 
ƒíts
 - 1);

1512 
quô
 = (
subm
==5 ? 2 : 1);

1518 i‡(
cur
 !
ocur
 || 
quô
 == 1)

1519 
	`wcurb¨
(
w
, 
ocur
 + 1 - 
t›
, 
XA_NORMAL
 | 
°d©å
);

1521 i‡(
cur
 < 
t›
) {

1522 
t›
--;

1523 
	`¥dú
(
w
, 
t›
,Åop);

1525 i‡(
cur
 - 
t›
 > 
w
->
ys
 - 3) {

1526 
t›
++;

1527 
	`¥dú
(
w
, 
t›
,Åop);

1529 i‡(
cur
 !
ocur
Ë
	`wcurb¨
(
w
, cu∏+ 1 - 
t›
, 
XA_REVERSE
 | 
°d©å
);

1530 
ocur
 = 
cur
;

1531 
	`dhûi
(
posôi⁄_dülög_dúe˘‹y
, 
subm
);

1533 
quô
 = 0;

1535 i‡(
c
 == '\033') {

1536 i‡(
ch™ged
Ë
	`wrôedüldú
();

1537 
	`w˛o£
(
w
, 1);

1538 
	`w˛o£
(
dsub
, 1);

1542 i‡(
pgud
 == 1) {

1543 
ocur
 = 
t›
;

1544 
t›
 -
w
->
ys
 - 2;

1545 i‡(
t›
 < 0)Åop = 0;

1546 
cur
 = 
t›
;

1547 
pgud
 = 0;

1548 i‡(
ocur
 !
t›
Ë
	`¥dú
(
w
,Å›, 
cur
);

1549 
ocur
 = 
cur
;

1550 
agaö
;

1552 i‡(
pgud
 == 2) {

1553 
ocur
 = 
t›
;

1554 i‡(
t›
 < 
ƒíts
 - 
w
->
ys
 + 2) {

1555 
t›
 +
w
->
ys
 - 2;

1556 i‡(
t›
 > 
ƒíts
 - 
w
->
ys
 + 2) {

1557 
t›
 = 
ƒíts
 - 
w
->
ys
 + 2;

1559 
cur
 = 
t›
;

1561 
cur
 = 
ƒíts
 - 1;

1562 
pgud
 = 0;

1563 i‡(
ocur
 !
t›
Ë
	`¥dú
(
w
,Å›, 
cur
);

1564 
ocur
 = 
cur
;

1565 
agaö
;

1569 i‡(
subm
 == 0) {

1570 
	`w˛o£
(
w
, 1);

1571 
	`w˛o£
(
dsub
, 1);

1572 i‡(
ch™ged
Ë
	`wrôedüldú
();

1575 i‡(!(
d
->
Êags
 & 
FL_TAG
)) {

1577 
d1
 = 
d
; d1; d1 = d1->
√xt
)

1578 i‡(
d1
->
Êags
 & 
FL_TAG
) {

1579 
d
 = 
d1
;

1583 i‡(!
d1
)

1584 
d1
 = 
düÀ¡s
; d1 && d1!=
d
; d1 = d1->
√xt
)

1585 i‡(
d1
->
Êags
 & 
FL_TAG
) {

1586 
d
 = 
d1
;

1591 
	`dül_íåy
(
d
);

1595 i‡(
subm
 == 1) {

1596 
s
 = 
	`öput
(
	`_
("Födá¿íåy"), 
d«me
);

1597 i‡(
s
 =
NULL
 || s[0] =0Ë
agaö
;

1598 
x1
 = 0;

1599 
d
 = 
düÀ¡s
; d; d = d->
√xt
, 
x1
++)

1600 i‡(
	`°r°r
(
d
->
«me
, 
s
)) ;

1601 i‡(
d
 =
NULL
) {

1602 
	`wbñl
();

1603 
agaö
;

1606 
ocur
 = 
t›
;

1607 
cur
 = 
x1
;

1609 i‡(
cur
 < 
t›
 || cu∏>t› + 
w
->
ys
 - 2) {

1611 
t›
 = 
cur
 - (
w
->
ys
 / 2) + 1;

1612 i‡(
t›
 < 0)Åop = 0;

1613 i‡(
t›
 > 
ƒíts
 - 
w
->
ys
 + 2) {

1614 
t›
 = 
ƒíts
 - 
w
->
ys
 + 2;

1617 i‡(
ocur
 !
t›
Ë
	`¥dú
(
w
,Åop,Åop);

1618 
ocur
 = 
cur
;

1622 i‡(
subm
 == 2) {

1623 
d1
 = 
	`mk°dít
();

1624 i‡(
d1
 =(
düÀ¡
 *)0) {

1625 
	`wbñl
();

1626 
agaö
;

1628 
ch™ged
++;

1629 
cur
++;

1630 
ocur
 = 
cur
;

1631 
d2
 = 
d
->
√xt
;

1632 
d
->
√xt
 = 
d1
;

1633 
d1
->
√xt
 = 
d2
;

1635 
ƒíts
++;

1636 i‡(
cur
 - 
t›
 > 
w
->
ys
 - 3) {

1637 
t›
++;

1638 
	`¥dú
(
w
, 
t›
,Åop);

1640 
	`¥dú
(
w
, 
t›
, 
cur
);

1645 i‡(
subm
 == 3) {

1646 
	`dedô
(
d
);

1647 
ch™ged
++;

1648 
	`wloˇã
(
w
, 0, 
cur
 + 1 - 
t›
);

1649 
	`w¥ötf
(
w
, 
fmt
, 
cur
+1, (
d
->
Êags
 & 
FL_TAG
Ë? 16 : ' ', d->
«me
,

1650 
d
->
numbî
, d->
œ°d©e
, d->
œ°time
, d->
cou¡
, d->
s¸ùt
);

1654 i‡(
subm
 =4 && 
	`ask
(
	`_
("Removêíåy?"), 
d_ye¢o
) == 0) {

1655 
ch™ged
++;

1656 i‡(
ƒíts
 == 1) {

1657 
	`‰ì
((*)
d
);

1658 
d
 = 
düÀ¡s
 = 
	`mk°dít
();

1659 
	`¥dú
(
w
, 
t›
,Åop);

1660 
agaö
;

1662 i‡(
cur
 == 0)

1663 
düÀ¡s
 = 
d
->
√xt
;

1665 
	`gëno
(
cur
 - 1)->
√xt
 = 
d
->next;

1666 
	`‰ì
((*)
d
);

1667 
ƒíts
--;

1668 i‡(
cur
 - 
t›
 =0 &&Å› =
ƒíts
) {

1669 
t›
--;

1670 
cur
--;

1671 
	`¥dú
(
w
, 
t›
,Åop);

1673 i‡(
cur
 =
ƒíts
) cur--;

1674 
	`¥dú
(
w
, 
t›
, 
cur
);

1676 i‡(
ƒíts
 - 
t›
 <
w
->
ys
 - 3) {

1677 
	`wloˇã
(
w
, 0, 
ƒíts
 - 
t›
 + 1);

1678 
	`w˛ªﬁ
(
w
);

1680 
ocur
 = 
cur
;

1684 i‡(
subm
 == 5) {

1685 
	`wloˇã
(
w
, 
posôi⁄_dülög_dúe˘‹y
, w->
ys
 - 1);

1686 
	`w¥ötf
(
w
, "%*.*s", 
ègmvÀn
,ègmvÀn, 
move_exô
);

1687 
cur
 = 
	`move_íåy
 (
w
, 
d
, cur, &
t›
);

1688 i‡(
cur
 !
ocur
)

1689 
ch™ged
++;

1690 
ocur
 = 
cur
;

1691 
	`wloˇã
(
w
, 
posôi⁄_dülög_dúe˘‹y
, w->
ys
 - 1);

1692 
	`w¥ötf
(
w
, "%*.*s", 
ègmvÀn
,ègmvÀn, 
èg_exô
);

1696 i‡(
subm
 == 6) {

1697 
s
 = 
	`öput
(
	`_
("E¡îÇumbî"), 
m™uÆ
);

1698 i‡(
s
 && *s) {

1699 i‡(
ch™ged
Ë
	`wrôedüldú
();

1700 
	`w˛o£
(
w
, 1);

1701 
	`w˛o£
(
dsub
, 1);

1703 
	`°∫˝y
(
d_m™
->
numbî
, 
m™uÆ
, (d_man->number));

1704 (Ë
	`dül
(
d_m™
, (
düÀ¡
**)
NULL
);

1705 i‡(
P_SHOWSPD
[0] == 'l')

1706 
	`mode_°©us
();

1710 
agaö
;

1711 
	}
}

	@file.c

18 #ifde‡
HAVE_CONFIG_H


19 
	~<c⁄fig.h
>

22 
	~"rcsid.h
"

23 
RCSID
("$Id: file.c,v 1.7 2001/07/07 18:57:23 walker Exp $")

25 
	~"p‹t.h
"

26 
	~"möicom.h
"

27 
	~"öé.h
"

28 
	~"gësdú.h
"

30 #ifde‡
HAVE_UNISTD_H


31 
	~<uni°d.h
>

34 
_PROTO
(
wûdm©
, (*
s
, *
p
));

37 #i‚de‡
off£tof


38 
	#off£tof
(
ty≥
, 
membî
Ë((Ë&(—y≥ *)0)->membî)

	)

42 
	#FL_ECHO
 0x01

	)

43 
	#FL_DEL
 0x02

	)

44 
	#FL_WRAP
 0x04

	)

45 
	#FL_ANSI
 0x08

	)

46 
	#FL_TAG
 0x80

	)

47 
	#FL_SAVE
 0x0‡

	)

49 
	#FILE_MWTR
 1

	)

50 
	#SUBM_OKAY
 5

	)

52 
	gƒíts
 = 1;

54 
_PROTO
(
fûe_ãŒ
, (*
s
));

59 
_PROTO
(
dhûi
, (
k
));

60 
_PROTO
(
¥dú
, (
WIN
 *
dúw
, 
t›
, 
cur
, \

61 
GETSDIR_ENTRY
 *
dúd©
, 
l⁄ge°
));

62 
_PROTO
(
¥⁄e
, (
WIN
 *
dúw
, 
t›
, 
cur
, \

63 
GETSDIR_ENTRY
 *
dúd©
, 
l⁄ge°
, 
övî£
));

64 
_PROTO
(*
£t_w‹k_dú
, (*
exi°ög
, 
size_t
 
mö_Àn
));

65 
_PROTO
(
√w_fûedú
, (
GETSDIR_ENTRY
 *
o_dúd©
, 
Êushô
));

66 
_PROTO
(
gŸo_fûedú
, (*
√w_dú
, 
absﬁut
));

67 
_PROTO
(
èg_u¡ag
, (*
∑t
, 
èg
));

68 
_PROTO
(*
c⁄ˇt_li°
, (
GETSDIR_ENTRY
 *
d
));

69 
_PROTO
(
öô_fûedú
, ());

71 
WIN
 *
	gdsub
;

72 
	#WHAT_NR_OPTIONS
 6

	)

73 *
	gwh©
 = 
N_
(" [Goto] [Prev] [Show] [Tag] [Untag] [Okay] ");

76 
	gd¥ev
;

79 *
	gd_ye¢o
[] = { 
N_
(" Ye† "), N_(" Nÿ "), 
CNULL
 };

86 
	$fûe_ãŒ
(
s
)

87 *
s
;

89 
WIN
 *
w
;

91 
w
 = 
	`mc_ãŒ
("%s", 
s
);

92 
	`¶ìp
(1);

93 
	`w˛o£
(
w
, 1);

94 
	}
}

100 
	$dhûi
(
k
)

101 
k
;

103 
wh©_Àn
 = 
	`°æí
 (
	`_
(
wh©
)),

104 
wh©_›ti⁄_Àn
 = 
wh©_Àn
 / 
WHAT_NR_OPTIONS
,

105 
öôül_y
 = (76 - (
wh©_Àn
 >= 76 ? 74 : what_len)) / 2;

107 if(
k
 =
d¥ev
)

110 if(
d¥ev
 >= 0) {

111 
	`wloˇã
(
dsub
, 
öôül_y
 + 
wh©_›ti⁄_Àn
*
d¥ev
, 0);

112 if(!
u£©å
) {

113 
	`wputs
(
dsub
, " ");

115 
	`w£èâr
(
dsub
, 
°d©å
);

116 
	`w¥ötf
(
dsub
, "%*.*s", 
wh©_›ti⁄_Àn
 - 1, what_option_len - 1,

117 
	`_
(
wh©
Ë+ 
wh©_›ti⁄_Àn
*
d¥ev
);

120 
d¥ev
 = 
k
;

121 
	`wloˇã
(
dsub
, 
öôül_y
 + 
wh©_›ti⁄_Àn
*
k
, 0);

122 if(!
u£©å
) {

123 
	`wputs
(
dsub
, ">");

125 
	`w£èâr
(
dsub
, 
XA_REVERSE
 | 
°d©å
);

126 
	`w¥ötf
(
dsub
, "%*.*s", 
wh©_›ti⁄_Àn
 - 1, what_option_len - 1,

127 
	`_
(
wh©
Ë+ 
wh©_›ti⁄_Àn
*
k
);

128 
	`w£èâr
(
dsub
, 
°d©å
);

130 
	}
}

134 
	#gëno
(
n
,
d
Ë(“Ë>
ƒíts
? (
GETSDIR_ENTRY
 *Ë
NULL
 : &((d)[n]))

	)

154 
	$¥dú
(
dúw
, 
t›
, 
cur
, 
dúd©
, 
l⁄ge°
)

155 
WIN
 *
dúw
;

156 
t›
, 
cur
;

157 
GETSDIR_ENTRY
 *
dúd©
;

158 
l⁄ge°
;

160 
f
, 
°¨t
;

161 
GETSDIR_ENTRY
 *
d
;

162 
f_°r
[
BUFSIZ
];

163 
t_°r
[
BUFSIZ
];

165 
°¨t
 = 
cur
 - 
t›
;

166 
dúÊush
 = 0;

167 
	`•rötf
(
f_°r
, " %%-%ds", 
l⁄ge°
 + 2);

168 
	`wloˇã
(
dúw
, 0, 
°¨t
 + 
FILE_MWTR
);

169 
f
 = 
°¨t
; f < 
dúw
->
ys
 - (1 + 
FILE_MWTR
); f++) {

170 if((
d
 = 
	`gëno
(
f
 + 
t›
, 
dúd©
)Ë=(
GETSDIR_ENTRY
 *Ë
NULL
)

172 if(
d
->
cÊags
 & 
FL_TAG
)

173 
	`w£èâr
(
dúw
, 
XA_REVERSE
 | 
°d©å
);

174 if(
	`S_ISDIR
(
d
->
mode
)) {

175 
	`¢¥ötf
(
t_°r
, —_°r), "[%s]", 
d
->
‚ame
);

176 
	`w¥ötf
(
dúw
, 
f_°r
, 
t_°r
);

179 
	`w¥ötf
(
dúw
, 
f_°r
, 
d
->
‚ame
);

180 
	`w£èâr
(
dúw
, 
XA_NORMAL
 | 
°d©å
);

181 
	`wputc
(
dúw
, '\n');

183 
dúÊush
 = 1;

184 
	`wÊush
();

185 
	}
}

191 
	$¥⁄e
(
dúw
, 
t›
, 
cur
, 
dúd©
, 
l⁄ge°
, 
övî£
)

192 
WIN
 *
dúw
;

193 
t›
, 
cur
;

194 
GETSDIR_ENTRY
 *
dúd©
;

195 
l⁄ge°
;

196 
övî£
;

198 
f_°r
[
BUFSIZ
];

199 
t_°r
[
BUFSIZ
];

201 
dúÊush
 = 0;

202 
	`•rötf
(
f_°r
, " %%-%ds", 
l⁄ge°
 + 2);

207 if(
övî£
)

208 
	`w£èâr
(
dúw
, 
XA_REVERSE
 | 
°d©å
);

209 if(
	`S_ISDIR
(
dúd©
->
mode
)) {

210 
	`¢¥ötf
(
t_°r
, —_°r), "[%s]", 
dúd©
->
‚ame
);

211 
	`w¥ötf
(
dúw
, 
f_°r
, 
t_°r
);

214 
	`w¥ötf
(
dúw
, 
f_°r
, 
dúd©
->
‚ame
);

215 
	`w£èâr
(
dúw
, 
XA_NORMAL
 | 
°d©å
);

216 
dúÊush
 = 1;

217 
	`wÊush
();

218 
	}
}

220 
WIN
 *
	gmaö_w
;

221 
GETSDIR_ENTRY
 *
	gdúd©
, *
	gd
;

222 
	gcur
 = 0;

223 
	gocur
 = 0;

224 
	gsubm
 = 
SUBM_OKAY
;

225 
	gquô
 = 0;

226 
	gt›
 = 0;

227 
	gc
 = 0;

228 
	gpgud
 = 0;

229 
	gfú°
 = 1;

230 *
	gs
;

231 
	gl⁄ge°
;

232 
	gfûe_tôÀ
[
BUFSIZ
];

233 
	gcwd_°r
[
BUFSIZ
];

234 *
	g¥ev_dú
 = 
NULL
;

235 *
	gw‹k_dú
 = 
NULL
;

236 *
	gd_w‹k_dú
 = 
NULL
;

237 *
	gu_w‹k_dú
 = 
NULL
;

238 
	gmö_Àn
 = 1;

239 
	gwc_°r
[128] = "";

240 
	gwc_mem
[128] = "";

241 
	gèg_˙t
 = 0;

242 
	ghow_m™y
 = 0;

243 
	gdown_lﬂdög
 = 0;

244 *
	gªt_buf
 = 
NULL
;

250 
	$öô_dú
(
dú
)

252 *
p
;

254 
dú
) {

256 
p
=
u_w‹k_dú
;

257 
u_w‹k_dú
 = (*Ë
NULL
;

260 
p
=
d_w‹k_dú
;

261 
d_w‹k_dú
 = (*Ë
NULL
;

264 
	`‰ì
 ((*Ë
p
);

266 
	}
}

269 
	$£t_w‹k_dú
(
exi°ög
, 
mö_Àn
)

270 *
exi°ög
;

271 
size_t
 
mö_Àn
;

273 *
vp
;

275 
vp
 = 
exi°ög
 =
NULL
 ? (*)
	`mÆloc
(
mö_Àn
Ë: (*)
	`ªÆloc
(existing, min_len);

277 if(
down_lﬂdög
)

278 
d_w‹k_dú
 = 
vp
;

280 
u_w‹k_dú
 = 
vp
;

282 (
vp
);

283 
	}
}

292 
	$√w_fûedú
(
o_dúd©
, 
Êushô
)

293 
GETSDIR_ENTRY
 *
o_dúd©
;

294 
Êushô
;

296 
dp_Àn
 = 0;

297 
cwd_°r_fmt
[
BUFSIZ
] = "";

298 
√w_dp_Àn
,

299 
fmt_Àn
;

300 
di•_dú
[80];

301 
wh©_Àn
 = 
	`°æí
 (
	`_
(
wh©
)),

302 
öôül_y
 = (76 - (
wh©_Àn
 >= 76 ? 74 : what_len)) / 2;

304 
cur
 = 0;

305 
ocur
 = 0;

306 
subm
 = 
SUBM_OKAY
;

307 
quô
 = 0;

308 
t›
 = 0;

309 
c
 = 0;

310 
pgud
 = 0;

311 
fú°
 = 1;

312 
mö_Àn
 = 1;

313 
d¥ev
 = -1;

314 
èg_˙t
 = 0;

317 if(
¥ev_dú
 !
NULL
)

318 
	`‰ì
(
¥ev_dú
);

319 
¥ev_dú
 = 
	`gëcwd
(
NULL
, 
BUFSIZ
);

324 
w‹k_dú
 = 
down_lﬂdög
? 
d_w‹k_dú
 : 
u_w‹k_dú
;

329 if(
w‹k_dú
 =
NULL
) {

330 *
s
 = 
down_lﬂdög
? (
P_DOWNDIR
Ë: (
P_UPDIR
);

331 
mö_Àn
 = 1;

333 if(*
s
 != '/')

334 
mö_Àn
 +
	`°æí
(
homedú
) + 1;

335 
mö_Àn
 +
	`°æí
(
s
);

336 if(
mö_Àn
 < 
BUFSIZ
)

337 
mö_Àn
 = 
BUFSIZ
;

339 
w‹k_dú
 = 
	`£t_w‹k_dú
(
NULL
, 
mö_Àn
);

341 if(*
s
 == '/')

342 
	`°∫˝y
(
w‹k_dú
, 
s
, 
mö_Àn
);

344 
	`¢¥ötf
(
w‹k_dú
, 
mö_Àn
, "%s/%s", 
homedú
, 
s
);

347 if(
	`°æí
(
w‹k_dú
) > 1 && work_dir[strlen(work_dir) - 1] == '/')

348 
w‹k_dú
[
	`°æí
(work_dir) - 1] = () 0;

350 
	`chdú
(
w‹k_dú
);

354 if(
Êushô
) {

355 
dúÊush
 = 0;

356 
	`wö˛r
(
maö_w
);

357 
	`wªdøw
(
maö_w
, 1);

360 
	`wcurs‹
(
maö_w
, 
CNORMAL
);

363 
	`¢¥ötf
(
fûe_tôÀ
, (fûe_tôÀ), 
	`_
("Select %s for %s"),

364 
how_m™y
? (how_m™y < 0? 
	`_
("one or more files") : _("a file"))

365 : 
	`_
("a directory"),

366 
down_lﬂdög
? 
	`_
("download") : _("upload"));

367 
	`wtôÀ
(
maö_w
, 
TMID
, 
fûe_tôÀ
);

368 if((
√w_dp_Àn
 = 
	`°æí
(
w‹k_dú
)Ë> 
dp_Àn
) {

369 
dp_Àn
 = 
√w_dp_Àn
;

370 
	`¢¥ötf
(
cwd_°r_fmt
, (cwd_str_fmt),

371 
	`_
("Dúe˘‹y: %%-%ds"), 
dp_Àn
);

373 i‡(
√w_dp_Àn
 + (
fmt_Àn
 = 
	`°æí
(
cwd_°r_fmt
)) > 75) {

374 
	`¢¥ötf
(
di•_dú
, (disp_dir),

375 "...%s", 
w‹k_dú
 + 
√w_dp_Àn
 - 73 + 
fmt_Àn
);

376 
	`¢¥ötf
(
cwd_°r
, (cwd_°r), 
cwd_°r_fmt
, 
di•_dú
);

379 
	`¢¥ötf
(
cwd_°r
, (cwd_°r), 
cwd_°r_fmt
, 
w‹k_dú
);

380 
	`wloˇã
(
maö_w
, 0, 0);

381 
	`wputs
(
maö_w
, 
cwd_°r
);

383 
	`wloˇã
(
dsub
, 
öôül_y
, 0);

384 
	`wputs
(
dsub
, 
	`_
(
wh©
));

386 
	`w£åegi⁄
(
maö_w
, 1, maö_w->
ys
 - 
FILE_MWTR
);

387 
maö_w
->
dos¸ﬁl
 = 0;

390 if(
o_dúd©
 !(
GETSDIR_ENTRY
 *Ë
NULL
)

391 
	`‰ì
(
o_dúd©
);

394 if((
ƒíts
 = 
	`gësdú
(".", 
wc_°r
,

395 
GETSDIR_PARNT
|
GETSDIR_NSORT
|
GETSDIR_DIRSF
, 0, &
dúd©
, &
l⁄ge°
)) < 0) {

397 
	`w˛o£
(
maö_w
, 1);

398 
	`w˛o£
(
dsub
, 1);

399 
	`‰ì
(
dúd©
);

403 
	`¥dú
(
maö_w
, 
t›
,Å›, 
dúd©
, 
l⁄ge°
);

404 
	`wloˇã
(
maö_w
, 
öôül_y
, maö_w->
ys
 - 
FILE_MWTR
);

405 
	`wputs
(
maö_w
, 
	`_
("( EscapeÅoÉxit, SpaceÅoÅag )"));

406 
	`dhûi
(
subm
);

408 
	`wloˇã
(
maö_w
, 0, 
cur
 + 
FILE_MWTR
 - 
t›
);

409 if(
Êushô
) {

410 
dúÊush
 = 1;

411 
	`wªdøw
(
dsub
, 1);

415 
	}
}

422 
	$gŸo_fûedú
(
√w_dú
, 
absﬁut
)

423 *
√w_dú
;

424 
absﬁut
;

426 if(
	`°rcmp
(
√w_dú
, "..") == 0) {

427 if(
	`°rcmp
(
w‹k_dú
, "/")) {

428 *
•
 = 
	`°ºchr
(
w‹k_dú
, '/');

429 *
•
 = () 0;

430 if(
	`°æí
(
w‹k_dú
) == 0)

431 
	`°r˝y
(
w‹k_dú
, "/");

434 
	`fûe_ãŒ
(
	`_
("Can't back up!"));

438 if(!
absﬁut
) {

439 
√w_Àn
 = 
	`°æí
(
w‹k_dú
) + 1;

440 if((
√w_Àn
 +
	`°æí
(
√w_dú
Ë+ 1Ë> 
mö_Àn
) {

441 
mö_Àn
 = 
√w_Àn
;

442 
w‹k_dú
 = 
	`£t_w‹k_dú
(w‹k_dú, 
mö_Àn
);

444 if(
	`°rcmp
(
w‹k_dú
, "/") != 0)

445 
	`°rˇt
(
w‹k_dú
, "/");

446 
	`°rˇt
(
w‹k_dú
, 
√w_dú
);

449 
√w_Àn
 = 1;

450 if(*
√w_dú
 != '/')

451 
√w_Àn
 +
	`°æí
(
homedú
) + 1;

452 
√w_Àn
 +
	`°æí
(
√w_dú
);

453 if(
mö_Àn
 < 
√w_Àn
)

454 
mö_Àn
 = 
√w_Àn
;

456 
w‹k_dú
 = 
	`£t_w‹k_dú
(w‹k_dú, 
mö_Àn
);

458 if(*
√w_dú
 == '/')

459 
	`°∫˝y
(
w‹k_dú
, 
√w_dú
, 
mö_Àn
);

461 
	`¢¥ötf
(
w‹k_dú
, 
mö_Àn
, "%s/%s", 
homedú
, 
√w_dú
);

463 
	`√w_fûedú
(
dúd©
, 1);

464 
	}
}

471 
	$öô_fûedú
()

473 
x1
, 
x2
;

474 
ªt°©
 = -1;

476 
dúÊush
 = 0;

477 
x1
 = (
COLS
 / 2) - 37;

478 
x2
 = (
COLS
 / 2) + 37;

479 
dsub
 = 
	`w›í
(
x1
 - 1, 
LINES
 - 3, 
x2
 + 1, LINES - 3, 
BNONE
,

480 
°d©å
, 
mfcﬁ‹
, 
mbcﬁ‹
, 0, 0, 1);

481 
maö_w
 = 
	`w›í
(
x1
, 2, 
x2
, 
LINES
 - 6, 
BSINGLE
, 
°d©å
, 
mfcﬁ‹
,

482 
mbcﬁ‹
, 0, 0, 1);

484 if(
ªt_buf
 !
NULL
 ||

485 (
ªt°©
 = ((
ªt_buf
 = (*)
	`mÆloc
(
BUFSIZ
)Ë=
NULL
)? -1 : 0) == 0) {

486 
ªt°©
 = 
	`√w_fûedú
((
GETSDIR_ENTRY
 *Ë
NULL
, 0);

487 
dúÊush
 = 1;

488 
	`wªdøw
(
dsub
, 1);

490 (
ªt°©
);

491 
	}
}

495 
	$èg_u¡ag
(
∑t
, 
èg
)

496 *
∑t
;

497 
èg
;

499 
GETSDIR_ENTRY
 *
my_d
 = 
dúd©
;

500 
ödxr
, 
˙å
;

502 
ödxr
 = 
ƒíts
, 
˙å
 = 0; indxr; --ödxr, ++
my_d
)

503 if(
	`S_ISREG
(
my_d
->
mode
Ë&& 
	`wûdm©
(my_d->
‚ame
, 
∑t
)) {

504 if(
èg
) {

505 
my_d
->
cÊags
 |
FL_TAG
;

506 ++
˙å
;

508 if(
my_d
->
cÊags
 & 
FL_TAG
) {

509 
my_d
->
cÊags
 &~
FL_TAG
;

510 ++
˙å
;

514 (
˙å
);

515 
	}
}

522 
	$c⁄ˇt_li°
(
d
)

523 
GETSDIR_ENTRY
 *
d
;

525 
GETSDIR_ENTRY
 *
my_d
;

526 
ödxr
, 
Àn
;

528 
my_d
 = 
d
;

529 
ödxr
 = 
ƒíts
, 
Àn
 = 0; indxr; --ödxr, ++
my_d
)

530 if(
my_d
->
cÊags
 & 
FL_TAG
)

531 
Àn
 +
	`°æí
(
my_d
->
‚ame
) + 1;

533 if(
Àn
) {

534 if(
Àn
 > 
BUFSIZ
) {

535 if((
ªt_buf
 = (*)
	`ªÆloc
‘ë_buf, 
Àn
)Ë=
NULL
) {

536 
	`fûe_ãŒ
(
	`_
("Too many filesÅagged - buffer would overflow"));

537 (
NULL
);

541 *
ªt_buf
 = () 0;

542 
my_d
 = 
d
;

543 
ödxr
 = 
ƒíts
; indxr; --ödxr, ++
my_d
)

544 if(
my_d
->
cÊags
 & 
FL_TAG
) {

546 
	`°rˇt
(
ªt_buf
, 
my_d
->
‚ame
);

547 
	`°rˇt
(
ªt_buf
, " ");

550 
ªt_buf
[
	`°æí
(ret_buf) - 1] = () 0;

551 (
ªt_buf
);

554 (
NULL
);

555 
	}
}

571 
	$fûedú
(
howm™y
, 
dow∆ﬂdög
)

572 
howm™y
;

573 
dow∆ﬂdög
;

575 
time_t
 
˛ick_time
 = (time_t) 0;

577 
how_m™y
 = 
howm™y
;

578 
down_lﬂdög
 = 
dow∆ﬂdög
;

579 
	`öô_fûedú
();

581 
agaö
:

582 
	`wloˇã
(
maö_w
, 0, 
cur
 + 
FILE_MWTR
 - 
t›
);

583 if(
fú°
) {

584 
	`wªdøw
(
maö_w
, 1);

585 
fú°
 = 0;

587 !
quô
) {

588 
d
 = 
	`gëno
(
cur
, 
dúd©
);

593 
c
 = 
	`wxgëch
()) {

594 
K_UP
:

600 
cur
 -= (cur > 0);

602 
K_DN
:

608 
cur
 +(cu∏< 
ƒíts
 - 1);

610 
K_LT
:

612 
subm
--;

613 if(
subm
 < 0)

614 
subm
 = 
SUBM_OKAY
;

616 
K_RT
:

618 
subm
 = (subm + 1) % 6;

620 
K_PGUP
:

622 
pgud
 = 1;

623 
quô
 = 1;

625 
K_PGDN
:

627 
pgud
 = 2;

628 
quô
 = 1;

631 
subm
 = 1;

632 
quô
 = 1;

635 if(
	`S_ISDIR
(
d
->
mode
)) {

636 
time_t
 
this_time
 = 
	`time
(—ime_à*Ë
NULL
);

637 if(
this_time
 - 
˛ick_time
 < 2) {

638 
GETSDIR_ENTRY
 *
d2
 = 
	`gëno
(
cur
, 
dúd©
);

639 
	`gŸo_fûedú
(
d2
->
‚ame
, 0);

640 
˛ick_time
 = (
time_t
) 0;

643 
˛ick_time
 = 
this_time
;

646 if(
how_m™y
) {

647 if((
d
->
cÊags
 ^
FL_TAG
) & FL_TAG) {

648 if(
èg_˙t
 && 
how_m™y
 == 1) {

649 
d
->
cÊags
 &~
FL_TAG
;

650 
	`fûe_ãŒ
(
	`_
("Can select only one!"));

653 ++
èg_˙t
;

656 --
èg_˙t
;

657 
	`wloˇã
(
maö_w
, 0, 
cur
 + 
FILE_MWTR
 - 
t›
);

658 
	`¥⁄e
(
maö_w
, 
t›
,Å›, 
d
, 
l⁄ge°
, d->
cÊags
 & 
FL_TAG
);

659 
	`wputc
(
maö_w
, '\n');

660 
cur
 +(cu∏< 
ƒíts
 - 1);

667 
subm
 = 0;

668 
ªÆ_¥ogømmîs_u£_gŸos
;

672 
subm
 = 1;

673 
ªÆ_¥ogømmîs_u£_gŸos
;

677 
subm
 = 2;

678 
ªÆ_¥ogømmîs_u£_gŸos
;

682 
subm
 = 3;

683 
ªÆ_¥ogømmîs_u£_gŸos
;

687 
subm
 = 4;

688 
ªÆ_¥ogømmîs_u£_gŸos
;

692 
subm
 = 
SUBM_OKAY
;

693 
ªÆ_¥ogømmîs_u£_gŸos
:

694 
c
 = '\n';

695 
quô
 = 1;

701 
quô
 = 1;

708 if(
c
 != ' ')

709 
˛ick_time
 = (
time_t
) 0;

711 if(
cur
 < 
t›
) {

712 
t›
--;

713 
	`¥dú
(
maö_w
, 
t›
,Å›, 
dúd©
, 
l⁄ge°
);

715 if(
cur
 - 
t›
 > 
maö_w
->
ys
 - (2 + 
FILE_MWTR
)) {

716 
t›
++;

717 
	`¥dú
(
maö_w
, 
t›
,Å›, 
dúd©
, 
l⁄ge°
);

724 
ocur
 = 
cur
;

725 
	`dhûi
(
subm
);

727 
	`wloˇã
(
maö_w
, 0, 
cur
 + 
FILE_MWTR
 - 
t›
);

730 
quô
 = 0;

732 if(
c
 == '\033') {

733 
	`w˛o£
(
maö_w
, 1);

734 
	`w˛o£
(
dsub
, 1);

735 
	`‰ì
(
dúd©
);

736 (
NULL
);

739 if(
pgud
 == 1) {

740 
ocur
 = 
t›
;

741 
t›
 -
maö_w
->
ys
 - (1 + 
FILE_MWTR
);

742 if(
t›
 < 0)

743 
t›
 = 0;

744 
cur
 = 
t›
;

745 
pgud
 = 0;

746 if(
ocur
 !
t›
)

747 
	`¥dú
(
maö_w
, 
t›
, 
cur
, 
dúd©
, 
l⁄ge°
);

748 
ocur
 = 
cur
;

749 
agaö
;

751 if(
pgud
 == 2) {

752 
ocur
 = 
t›
;

753 if(
t›
 < 
ƒíts
 - 
maö_w
->
ys
 + (1 + 
FILE_MWTR
)) {

754 
t›
 +
maö_w
->
ys
 - (1 + 
FILE_MWTR
);

755 if(
t›
 > 
ƒíts
 - 
maö_w
->
ys
 + (1 + 
FILE_MWTR
)) {

756 
t›
 = 
ƒíts
 - 
maö_w
->
ys
 + (1 + 
FILE_MWTR
);

758 
cur
 = 
t›
;

760 
cur
 = 
ƒíts
 - 1;

761 
pgud
 = 0;

762 if(
ocur
 !
t›
)

763 
	`¥dú
(
maö_w
, 
t›
, 
cur
, 
dúd©
, 
l⁄ge°
);

764 
ocur
 = 
cur
;

765 
agaö
;

768 if(
c
 =='\r' || c == '\n') {

769 
subm
) {

773 
buf
[128];

774 *
s
;

775 
	`°∫˝y
(
buf
, 
down_lﬂdög
? 
P_DOWNDIR
 : 
P_UPDIR
,

776 (
buf
) -1);

777 
s
 = 
	`öput
(
	`_
("GŸÿdúe˘‹y:"), 
buf
);

779 if(
s
 =
CNULL
)

781 
	`gŸo_fûedú
(
buf
, 1);

786 
	`gŸo_fûedú
(
¥ev_dú
, 1);

791 *
s
 = 
	`öput
(
	`_
("Fûíamê∑âîn:"), 
wc_mem
);

792 if(
s
 =
CNULL
 || *s == () 0)

794 
	`°r˝y
(
wc_°r
, 
wc_mem
);

795 
	`√w_fûedú
(
dúd©
, 1);

796 
wc_°r
[0] = () 0;

801 if(
how_m™y
 == 1)

802 
	`fûe_ãŒ
(
	`_
("Can select only one!"));

803 if(
how_m™y
 == -1) {

804 
èg_buf
[128];

805 *
s
;

806 
	`°∫˝y
(
èg_buf
, 
wc_mem
, 128);

808 
s
 = 
	`öput
(
	`_
("TagÖ©ã∫:"), 
èg_buf
);

809 if(
s
 !
CNULL
 && *s != () 0) {

810 
√wly_ègged
;

811 if((
√wly_ègged
 = 
	`èg_u¡ag
(
èg_buf
, 1)) == 0) {

812 
	`fûe_ãŒ
(
	`_
("No file(s)Åagged"));

813 
èg_íd
;

815 
èg_˙t
 +
√wly_ègged
;

816 
	`¥dú
(
maö_w
, 
t›
,Å›, 
dúd©
, 
l⁄ge°
);

819 
èg_íd
:

824 
èg_buf
[128];

825 *
s
;

826 
u¡agged
;

827 
	`°∫˝y
(
èg_buf
, 
wc_mem
, 128);

829 
s
 = 
	`öput
(
	`_
("U¡agÖ©ã∫:"), 
èg_buf
);

830 if(
s
 =
CNULL
 || *s == () 0)

831 
u¡ag_íd
;

832 if((
u¡agged
 = 
	`èg_u¡ag
(
èg_buf
, 0)) == 0) {

833 
	`fûe_ãŒ
(
	`_
("No file(s) untagged"));

834 
u¡ag_íd
;

836 
èg_˙t
 -
u¡agged
;

837 
	`¥dú
(
maö_w
, 
t›
,Å›, 
dúd©
, 
l⁄ge°
);

839 
u¡ag_íd
:

844 *
ªt_±r
 = 
NULL
;

846 if(
how_m™y
 !0 && !
èg_˙t
) {

849 
s
 = 
	`öput
(
	`_
("No file selected -Énter filename:"),

850 
ªt_buf
);

851 if(
s
 !
CNULL
 && *s != () 0) {

852 
f_exi°
 = 
	`ac˚ss
(
ªt_buf
, 
F_OK
);

853 if(
down_lﬂdög
) {

854 if(
f_exi°
 != -1) {

856 
buf
[
BUFSIZ
];

858 
	`¢¥ötf
(
buf
, (buf),

859 
	`_
("File: \"%s\"Éxists!. Over-write?"),

860 
ªt_buf
);

861 if(
	`ask
(
buf
, 
d_ye¢o
) == 0) {

862 
ªt_±r
 = 
ªt_buf
;

867 
ªt_±r
 = 
ªt_buf
;

872 if(
f_exi°
 == -1)

873 
	`fûe_ãŒ
(
	`_
("no such file!"));

875 
ªt_±r
 = 
ªt_buf
;

882 
agaö
;

888 if(
how_m™y
 == 0) {

890 
ªt_±r
 = 
w‹k_dú
;

893 
ªt_±r
 = 
	`c⁄ˇt_li°
(
dúd©
);

897 
	`w˛o£
(
maö_w
, 1);

898 
	`w˛o£
(
dsub
, 1);

899 
	`‰ì
(
dúd©
);

900 (
ªt_±r
);

905 
	`fûe_ãŒ
("BEEP!");

910 
agaö
;

911 
	}
}

	@functions.c

17 #ifde‡
HAVE_CONFIG_H


18 
	~<c⁄fig.h
>

21 
	~"rcsid.h
"

22 
RCSID
("$Id: functions.c,v 1.2 2000/01/27 11:25:31 misiek Exp $")

24 
	~"p‹t.h
"

25 
	~"möicom.h
"

30 
	$m_puts
(
s
)

31 *
s
;

33 
c
;

35 *
s
) {

36 i‡(*
s
 == '^' && (*(s + 1))) {

37 
s
++;

38 i‡(*
s
 == '^')

39 
c
 = *
s
;

41 
c
 = (*
s
) & 31;

43 
c
 = *
s
;

44 i‡(
c
 == '~')

45 
	`¶ìp
(1);

47 
	`wrôe
(
p‹tfd
, &
c
, 1);

48 
s
++;

50 
	}
}

53 
	$m_h™gup
()

55 
£c
=1;

57 i‡(
	`isdigô
(
P_MDROPDTR
[0]))

58 
	`ssˇnf
(
P_MDROPDTR
,"%2d",&
£c
);

60 i‡(
P_MDROPDTR
[0] ='Y' || (
	`isdigô
(P_MDROPDTR[0]Ë&& 
£c
 > 0)) {

61 
	`m_dåtoggÀ
(
p‹tfd
, 
£c
);

63 
	`m_puts
(
P_MHANGUP
);

64 
	`¶ìp
(1);

67 
bogus_dcd
 = 0;

68 
	}
}

	@getsdir.c

16 #ifde‡
HAVE_CONFIG_H


17 
	~<c⁄fig.h
>

20 
	~"rcsid.h
"

21 
RCSID
("$Id: getsdir.c,v 1.4 2000/03/16 17:59:38 walker Exp $")

23 
	~<°dio.h
>

24 
	~<°dlib.h
>

25 
	~<°rög.h
>

26 
	~<sys/ty≥s.h
>

27 
	~<sys/°©.h
>

28 
	~<î∫o.h
>

30 
	~"p‹t.h
"

31 
	~"gësdú.h
"

32 
	~"öé.h
"

34 
_PROTO
(
wûdm©
, (*, *));

39 
	#MAX_CNT
 100

	)

41 
	sd©_buf
 {

42 
d©_buf
 *
	mnxt
;

43 
	m˙t
;

44 
GETSDIR_ENTRY
 
	md©a
[
MAX_CNT
];

45 } 
	tDAT_BUF
;

47 
DAT_BUF
 *
	gd©b_‰°
;

48 
DAT_BUF
 *
	gd©b_cur
;

49 
	gg_s‹tÊags
;

52 
_PROTO
(
«mecm¥
, (
GETSDIR_ENTRY
 *
d1
, GETSDIR_ENTRY *
d2
));

53 
_PROTO
(
timecm¥
, (
GETSDIR_ENTRY
 *
d1
, GETSDIR_ENTRY *
d2
));

55 
_PROTO
(
‰ì_up
, ());

135 
	$gësdú
(
dú∑th
, 
∑âîn
, 
s‹tÊags
, 
modemask
, 
d©±r
, 
Àn
)

136 *
dú∑th
;

137 *
∑âîn
;

138 
s‹tÊags
;

139 
mode_t
 
modemask
;

140 
GETSDIR_ENTRY
 **
d©±r
;

141 *
Àn
;

143 
˙t
;

145 
DIR
 *
dúp
;

146 
dúít
 *
dp
;

147 
°©
 
°©buf
;

148 
Â©h
[
BUFSIZ
];

149 
ödx
;

150 
cm¥°©
;

151 
DAT_BUF
 *
d©b_ßv
;

153 
g_s‹tÊags
 = 
s‹tÊags
;

154 *
Àn
 = 0;

155 
d©b_‰°
 = (
DAT_BUF
 *Ë
NULL
;

156 
d©b_cur
 = (
DAT_BUF
 *Ë
NULL
;

159 i‡((
dúp
 = 
	`›ídú
(
dú∑th
)Ë=
NULL
)

163 if(
	`ªaddú
(
dúp
Ë=
NULL
 ||

164 (!(
s‹tÊags
 & 
GETSDIR_PARNT
Ë&& 
	`ªaddú
(
dúp
Ë=
NULL
))

166 
	`Ârötf
(
°dîr
, 
	`_
("DBUG: initialÑeaddir() failed (errno == %d)\n"),

167 
î∫o
);

168 
	`≥º‹
("readdir");

169 
	`fÊush
(
°dîr
);

172 
˙t
 = 1;; ++cnt)

174 
d©b_ßv
 = 
d©b_cur
;

177 if((
d©b_cur
 = (
DAT_BUF
*)
	`ˇŒoc
(1,(DAT_BUF))Ë=(DAT_BUF*)
NULL
)

179 
	`˛o£dú
(
dúp
);

184 
d©b_cur
->
nxt
 = (
DAT_BUF
 *Ë
NULL
;

186 if(
d©b_‰°
 =(
DAT_BUF
 *Ë
NULL
)

187 
d©b_‰°
 = 
d©b_cur
;

189 
d©b_ßv
->
nxt
 = 
d©b_cur
;

192 
d©b_cur
->
˙t
 = 0; d©b_cur->˙à< 
MAX_CNT
; )

193 if((
dp
 = 
	`ªaddú
(
dúp
)Ë!
NULL
)

195 if((
s‹tÊags
 & 
GETSDIR_PARNT
) &&

196 
	`°rcmp
(
dp
->
d_«me
, "..") == 0)

198 
cm¥°©
 = 1;

200 if(
∑âîn
 && 
	`°æí
(pattern))

201 
cm¥°©
 = 
	`wûdm©
(
dp
->
d_«me
, 
∑âîn
);

203 
cm¥°©
 = 1;

205 if(
cm¥°©
)

207 
l
;

210 
	`°∫˝y
(
d©b_cur
->
d©a
[d©b_cur->
˙t
].
‚ame
,

211 
dp
->
d_«me
,

212 
MAXNAMLEN
);

215 
	`¢¥ötf
(
Â©h
, (Â©h), "%s/%s", 
dú∑th
, 
dp
->
d_«me
);

216 if(
	`°©
(
Â©h
, &
°©buf
))

219 
	`‰ì_up
();

220 
	`˛o£dú
(
dúp
);

226 if(
modemask
 && !(
S_IFMT
 & modemask & 
°©buf
.
°_mode
))

229 if((
l
 = 
	`°æí
(
dp
->
d_«me
)Ë> *
Àn
)

230 *
Àn
 = 
l
;

232 
d©b_cur
->
d©a
[d©b_cur->
˙t
].
time
 = 
°©buf
.
°_mtime
;

233 
d©b_cur
->
d©a
[d©b_cur->
˙t
].
mode
 = 
°©buf
.
°_mode
;

235 ++
d©b_cur
->
˙t
;

241 if(
d©b_cur
->
˙t
 < 
MAX_CNT
)

245 
	`˛o£dú
(
dúp
);

248 if((*
d©±r
 = (
GETSDIR_ENTRY
 *Ë
	`ˇŒoc
(
˙t
, (
d©b_cur
->
d©a
)))

249 =
NULL
)

252 
	`‰ì_up
();

257 
˙t
 = 
ödx
 = 0;

260 
d©b_cur
 = 
d©b_‰°
;

262 
	`mem˝y
(*
d©±r
+
ödx
*
MAX_CNT
, 
d©b_cur
->
d©a
, (datb_cur->data));

263 
˙t
 +
d©b_cur
->cnt;

264 ++
ödx
;

265 
d©b_‰°
 = 
d©b_cur
->
nxt
;

266 
	`‰ì
(
d©b_cur
);

267 } 
d©b_‰°
);

269 
	`‰ì_up
();

272 if(
˙t
 && 
s‹tÊags
) {

273 if(
s‹tÊags
 & 
GETSDIR_NSORT
)

274 
	`qs‹t
(*
d©±r
, 
˙t
, (
GETSDIR_ENTRY
),

275 ((*)(c⁄° *, c⁄° *))
«mecm¥
);

276 if(
s‹tÊags
 & 
GETSDIR_TSORT
)

277 
	`qs‹t
(*
d©±r
, 
˙t
, (
GETSDIR_ENTRY
),

278 ((*)(c⁄° *, c⁄° *))
timecm¥
);

281 (
˙t
);

283 
	}
}

303 
	$‰ì_up
()

305 if((
d©b_cur
 = 
d©b_‰°
Ë!(
DAT_BUF
 *Ë
NULL
)

308 
d©b_‰°
 = 
d©b_cur
->
nxt
;

309 
	`‰ì
(
d©b_cur
);

310 } (
d©b_cur
 = 
d©b_‰°
));

312 
	}
}

335 
	$«mecm¥
(
d1
, 
d2
)

336 
GETSDIR_ENTRY
 *
d1
, *
d2
;

338 if(
g_s‹tÊags
 & (
GETSDIR_DIRSF
 | 
GETSDIR_DIRSL
)) {

339 if(
	`S_ISDIR
((
d1
->
mode
)Ë&& ! S_ISDIR((
d2
->mode)))

340 ((
g_s‹tÊags
 & 
GETSDIR_DIRSF
)? -1 : 1);

341 if(
	`S_ISDIR
((
d2
->
mode
)Ë&& ! S_ISDIR((
d1
->mode)))

342 ((
g_s‹tÊags
 & 
GETSDIR_DIRSF
)? 1 : -1);

345 ((
g_s‹tÊags
 & 
GETSDIR_RSORT
)?

346 
	`°rcmp
(
d2
->
‚ame
, 
d1
->fname) : strcmp(d1->fname, d2->fname));

348 
	}
}

371 
	$timecm¥
(
d1
, 
d2
)

372 
GETSDIR_ENTRY
 *
d1
, *
d2
;

374 if(
g_s‹tÊags
 & (
GETSDIR_DIRSF
 | 
GETSDIR_DIRSL
)) {

375 if(
	`S_ISDIR
((
d1
->
mode
)Ë&& ! S_ISDIR((
d2
->mode)))

376 ((
g_s‹tÊags
 & 
GETSDIR_DIRSF
)? -1 : 1);

377 if(
	`S_ISDIR
((
d2
->
mode
)Ë&& ! S_ISDIR((
d1
->mode)))

378 ((
g_s‹tÊags
 & 
GETSDIR_DIRSF
)? 1 : -1);

381 ((
g_s‹tÊags
 & 
GETSDIR_RSORT
)?

382 (
d2
->
time
 - 
d1
->time) : (d1->time - d2->time));

384 
	}
}

387 #ifde‡
GETSDIR_STANDALONE_TEST


396 *
˘ime
();

399 
	$maö
(
¨gc
, 
¨gv
)

400 
¨gc
;

401 *
¨gv
[];

403 
GETSDIR_ENTRY
 *
dúd©
;

404 
˙t
, 
ödex
;

405 
s‹tÊags
 = 0;

406 
mode_t
 
modemask
 = (mode_t) 0;

407 
Àn
;

409 if(
¨gc
 != 4)

411 
	`Ârötf
(
°dîr
,"ußge: %†<dú∑th> <∑âîn> <s‹tÊags>\n", 
¨gv
[0]);

412 
	`exô
(1);

415 
¨gv
[3][0]) {

416 'n': 
s‹tÊags
 = 
GETSDIR_NSORT
;

418 't': 
s‹tÊags
 = 
GETSDIR_TSORT
;

423 
s‹tÊags
 |
GETSDIR_DIRSF
;

427 
	`¥ötf
("modemask==%x\n", 
modemask
);

429 if((
˙t
 = 
	`gësdú
(
¨gv
[1],árgv[2], 
s‹tÊags
, 
modemask
, &
dúd©
, &
Àn
)) == -1)

431 
	`Ârötf
(
°dîr
, "%s:Éº‹ gëtög dúe˘‹y\n", 
¨gv
[0]);

432 
	`exô
(1);

435 
	`¥ötf
(
	`_
("%d fûes:\n"), 
˙t
);

436 
ödex
 = 1; index <
˙t
; ++ödex, ++
dúd©
)

437 
	`¥ötf
("%2d: %-20s%s",

438 
ödex
, 
dúd©
->
‚ame
, 
	`˘ime
(&dúd©->
time
));

440 
	`‰ì
(
dúd©
);

441 
	`exô
(0);

443 
	}
}

	@getsdir.h

21 
	~<dúít.h
>

23 
	sdúE¡ry
 {

24 
	m‚ame
[
MAXNAMLEN
 + 1];

25 
time_t
 
	mtime
;

26 
mode_t
 
	mmode
;

27 
ush‹t
 
	mcÊags
;

28 } 
	tGETSDIR_ENTRY
;

30 
	#GETSDIR_PARNT
 0x01

	)

31 
	#GETSDIR_NSORT
 0x02

	)

32 
	#GETSDIR_TSORT
 0x04

	)

36 
	#GETSDIR_DIRSF
 0x08

	)

37 
	#GETSDIR_DIRSL
 0x10

	)

38 
	#GETSDIR_RSORT
 0x20

	)

41 
_PROTO
(
gësdú
, (*
dú∑th
, *
∑âîn
, 
s‹tÊags
, \

42 
mode_t
 
modemask
, 
GETSDIR_ENTRY
 **
d©±r
, *
Àn
));

	@help.c

14 #ifde‡
HAVE_CONFIG_H


15 
	~<c⁄fig.h
>

18 
	~"rcsid.h
"

19 
RCSID
("$Id: help.c,v 1.4 2000/02/13 10:00:53 walker Exp $")

21 
	~"p‹t.h
"

22 
	~"möicom.h
"

23 
	~"öé.h
"

26 
	$hñp
()

28 
WIN
 *
w
;

29 
c
;

30 
i
;

31 
x1
, 
x2
;

33 #i‡
HISTORY


34 
i
 = 1;

36 
i
 = 0;

38 
x1
 = (
COLS
 / 2) - 34;

39 
x2
 = (
COLS
 / 2) + 32;

40 
w
 = 
	`w›í
(
x1
, 2, 
x2
, 20 + 
i
, 
BDOUBLE
, 
°d©å
, 
mfcﬁ‹
, 
mbcﬁ‹
, 0, 0, 1);

42 
	`wloˇã
(
w
, 21, 0);

43 
	`wputs
(
w
, 
	`_
("Minicom Command Summary"));

44 
	`wloˇã
(
w
, 10, 2);

46 
	`w¥ötf
(
w
, 
	`_
("Comm™d†ˇ¿bêˇŒed by %s<key>"), 
	`esc_key
());

48 
	`wloˇã
(
w
, 15, 4);

49 
	`wputs
(
w
, 
	`_
("Main Functions"));

50 
	`wloˇã
(
w
, 47, 4);

51 
	`wputs
(
w
, 
	`_
("Other Functions"));

52 
	`wloˇã
(
w
, 0, 6);

53 
	`wputs
(
w
, 
	`_
(" Dialing directory..DÑun script (Go)....G | Clear Screen.......C\n"));

54 
	`wputs
(
w
, 
	`_
(" Send files.........S Receive files......R | cOnfigure Minicom..O\n"));

55 
	`wputs
(
w
, 
	`_
(" comm Parameters....P AddÜinefeed.......A | "));

56 #ifde‡
SIGTSTP


57 
	`wputs
(
w
, 
	`_
("Suspend minicom....J\n"));

59 
	`wputs
(
w
, 
	`_
("JumpÅoá shell....J\n"));

61 
	`wputs
(
w
, 
	`_
(" Capture on/off.....L Hangup.............H |ÉXitándÑeset.....X\n"));

62 
	`wputs
(
w
, 
	`_
(" send break.........F initialize Modem...M | Quit withÇoÑeset.Q\n"));

63 
	`wputs
(
w
, 
	`_
(" Terminal settings..TÑun Kermit.........K | Cursor key mode....I\n"));

64 
	`wputs
(
w
, 
	`_
("ÜineWrap on/off....W"));

65 #ifde‡
HAVE_SELECT


66 
	`wputs
(
w
, 
	`_
("Üocal Echo on/off..E | Help screen........Z"));

68 
	`wputs
(
w
, 
	`_
(" | Help screen........Z"));

70 #i‡
HISTORY


71 
	`wloˇã
(
w
, 44, 13);

72 
	`wputs
(
w
, 
	`_
("| scroll Back........B"));

75 
	`wloˇã
(
w
, 13, 16 + 
i
);

76 
	`wputs
(
w
, 
	`_
("Written by Miquel van Smoorenburg 1991-1995"));

77 
	`wloˇã
(
w
, 13, 17 + 
i
);

78 
	`wputs
(
w
, 
	`_
("Someádditions by Jukka Lahtinen 1997-2000"));

79 
	`wloˇã
(
w
, 13, 18 + 
i
);

80 
	`wputs
(
w
, 
	`_
("i18n by Arnaldo Carvalho de Melo 1998"));

81 
	`wloˇã
(
w
, 6, 14 + 
i
);

82 
	`wputs
(
w
, 
	`_
("Select function orÖress Enter forÇone."));

83 
	`wªdøw
(
w
, 1);

85 
c
 = 
	`wxgëch
();

86 
	`w˛o£
(
w
, 1);

87 (
c
);

88 
	}
}

	@intl.h

3 #ifde‡
HAVE_LOCALE_H


4 
	~<loˇÀ.h
>

6 #i‡!
HAVE_SETLOCALE


7 
	#£éoˇÀ
(
C©eg‹y
, 
LoˇÀ
Ë

	)

10 
	#N_
(
Så
Ë(Så)

	)

12 #ifde‡
ENABLE_NLS


13 
	~<liböé.h
>

14 
	#_
(
Text
Ë
	`gëãxt
 (Text)

	)

16 #unde‡
bödãxtdomaö


17 
	#bödãxtdomaö
(
Domaö
, 
Dúe˘‹y
Ë

	)

18 #unde‡
ãxtdomaö


19 
	#ãxtdomaö
(
Domaö
Ë

	)

20 
	#_
(
Text
Ë
	)
Text

	@ipc.c

18 #ifde‡
HAVE_CONFIG_H


19 
	~<c⁄fig.h
>

22 
	~"rcsid.h
"

23 
RCSID
("$Id: ipc.c,v 1.3 2000/02/09 08:34:57 misiek Exp $")

25 
	~"p‹t.h
"

26 
	~"möicom.h
"

27 
	~"öé.h
"

29 #i‚de‡
HAVE_SELECT


31 
	gtokey£rv
, 
	g‰omkey£rv
;

32 
	gkeypid
;

33 
jmp_buf
 
	gackjmp
;

34 
	gwaôög
 = 0;

35 
	gkey¥ess
 = -1;

42 
	$ksigio
(
dummy
)

43 
dummy
;

45 
c
[8];

46 
n
;

48 
	`sig«l
(
HELLO
, 
ksigio
);

49 (
n
 = 
	`ªad
(
‰omkey£rv
, 
c
, 8)Ë< 0 && 
î∫o
 =
EINTR
)

50 
î∫o
 = 0;

51 
key¥ess
 = 
n
 ? 
c
[n - 1] : -1;

52 
	}
}

59 
	$sigack
(
dummy
)

60 
dummy
;

62 
	`sig«l
(
ACK
, 
sigack
);

63 i‡(
waôög
Ë
	`l⁄gjmp
(
ackjmp
, 1);

64 
	`¥ötf
(
	`_
("sigack: unexpected ACK signal &^%%$!! (pardon my French)%c\n"),

66 
	}
}

72 
	$kö°Æl
()

74 
mpid
[8];

75 
pùe1
[2], 
pùe2
[2];

76 
buf
[2];

77 
¥og
[128];

79 i‡(
	`pùe
(
pùe1
Ë< 0 ||Öùe(
pùe2
) < 0)

80 
	`Àave
(
	`_
("minicom: out of file descriptors\n"));

81 
tokey£rv
 = 
pùe1
[1];

82 
‰omkey£rv
 = 
pùe2
[0];

85 
	`sig«l
(
HELLO
, 
ksigio
);

86 
	`sig«l
(
ACK
, 
sigack
);

88 
	`•rötf
(
mpid
, "%d", ()
	`gëpid
());

90 
keypid
 = 
	`f‹k
()) {

92 
	`Àave
(
	`_
("minicom: couldÇot fork.\n"));

97 
	`dup2
(
p‹tfd
, 1);

98 
	`˛o£
(
p‹tfd
);

101 
	`dup2
(
pùe1
[0], 3);

104 
	`dup2
(
pùe2
[1], 4);

107 
	`˛o£
(
pùe1
[1]);

108 
	`˛o£
(
pùe2
[0]);

109 
	`¢¥ötf
(
¥og
, ’rog), "%s/key£rv", 
LIBDIR
);

110 
	`exe˛
(
¥og
, "key£rv", 
mpid
, (*)
NULL
);

111 
	`exô
(0);

113 i‡(
	`£tjmp
(
ackjmp
) == 0) {

114 #ifde‡
DEBUG


115 
	`¥ötf
("key£rv ha†PID %d\r\n", 
keypid
);

117 
	`¶ìp
(2);

118 
waôög
 = 1;

119 
buf
[0] = 
KSTOP
;

120 
	`wrôe
(
tokey£rv
, 
buf
, 2);

121 i‡(
	`kûl
(
keypid
, 
HELLO
) < 0) {

122 
	`Àave
(
	`_
("minicom: couldÇotÉxec keyserv\n"));

125 1Ë
	`∑u£
();

127 
waôög
 = 0;

129 
	`˛o£
(
pùe1
[0]);

130 
	`˛o£
(
pùe2
[1]);

133 
	}
}

139 
	$keybﬂrd
(
cmd
, 
¨g
)

140 
cmd
, 
¨g
;

142 
ch
[2];

143 
pid
, 
°t
;

144 
œ°cmd
 = -1;

145 
c
;

147 
œ°cmd
 = 
cmd
;

149 i‡(
cmd
 =
KINSTALL
) {

150 
	`kö°Æl
();

154 i‡(
cmd
 =
KUNINSTALL
) {

155 
	`˛o£
(
‰omkey£rv
);

156 
	`˛o£
(
tokey£rv
);

157 (Ë
	`kûl
(
keypid
, 
SIGKILL
);

158 
pid
 = 
	`m_waô
(&
°t
);

159 
keypid
 = 0;

163 i‡(
cmd
 =
KGETKEY
) {

164 i‡(
key¥ess
 >= 0)

166 
c
 = 
key¥ess
;

169 
	`ªad
(0, 
ch
, 1);

170 
c
 = 
ch
[0];

172 
key¥ess
 = -1;

173 (
c
);

176 i‡(
cmd
 =
KSETESC
) {

178 
esˇ≥
 = 
¨g
;

182 i‡(
keypid
 == 0) (0);

184 i‡(
	`£tjmp
(
ackjmp
) == 0) {

185 
waôög
 = 1;

186 
ch
[0] = 
cmd
;

187 
ch
[1] = 
¨g
;

188 
	`wrôe
(
tokey£rv
, 
ch
, 2);

189 (Ë
	`kûl
(
keypid
, 
HELLO
);

191 1Ë
	`∑u£
();

193 
waôög
 = 0;

195 
	}
}

198 
	$dummy
()

200 
	}
}

203 
	$check_io
(
fd1
, 
fd2
, 
tmout
, 
buf
, 
buÊí
)

204 
fd1
;

205 
fd2
;

206 
tmout
;

207 *
buf
;

208 *
buÊí
;

210 
n
;

211 
x
 = 0;

214 
	`sig«l
(
SIGALRM
, 
dummy
);

215 i‡(
tmout
Ë
	`Æ¨m
((tmout + 500) / 1000);

218 i‡(
key¥ess
 < 0) {

219 i‡(
fd1
 >= 0) {

221 
n
 = 
	`ªad
(
fd1
, 
buf
, 127);

222 
buf
[
n
 > 0 ?Ç : 0] = 0;

223 i‡(
buÊí
Ë*buÊí = 
n
;

224 i‡(
n
 > 0Ë
x
 |= 1;

227 
	`∑u£
();

229 
	`Æ¨m
(0);

231 i‡(
key¥ess
 >0Ë
x
 |= 2;

233 (
x
);

234 
	}
}

239 
	$check_io
(
fd1
, 
fd2
, 
tmout
, 
buf
, 
buÊí
)

240 
fd1
;

241 
fd2
;

242 
tmout
;

243 *
buf
;

244 *
buÊí
;

246 
n
 = 0, 
i
;

247 
timevÆ
 
tv
;

248 
fd_£t
 
fds
;

249 
io_≥ndög
;

251 
tv
.
tv_£c
 = 
tmout
 / 1000;

252 
tv
.
tv_u£c
 = (
tmout
 % 1000) * 1000L;

254 
i
 = 
fd1
;

255 i‡(
fd2
 > 
fd1
Ë
i
 = fd2;

257 
	`FD_ZERO
(&
fds
);

258 i‡(
fd1
 >0Ë
	`FD_SET
(fd1, &
fds
); fd1 = 0;

259 i‡(
fd2
 >0Ë
	`FD_SET
(fd2, &
fds
); fd2 = 0;

261 i‡(
fd2
 =0 && 
io_≥ndög
)

262 
n
 = 2;

263 i‡(
	`£À˘
(
i
+1, &
fds
, 
NULL
, NULL, &
tv
) > 0)

264 
n
 = 1 * (
	`FD_ISSET
(
fd1
, &
fds
Ë> 0Ë+ 2 * (FD_ISSET(
fd2
, &fds) > 0);

267 i‡(
buf
) {

268 
i
 = 0;

269 i‡((
n
 & 1Ë=1Ë
i
 = 
	`ªad
(
fd1
, 
buf
, 127);

270 
buf
[
i
 > 0 ? i : 0] = 0;

271 i‡(
buÊí
Ë*buÊí = 
i
;

274 (
n
);

275 
	}
}

277 
	$keybﬂrd
(
cmd
, 
¨g
)

278 
cmd
, 
¨g
;

280 
cmd
) {

281 
KSTART
:

282 
KSTOP
:

284 
KSIGIO
:

286 
KGETKEY
:

287 (
	`wxgëch
());

288 
KSETESC
:

289 
esˇ≥
 = 
¨g
;

291 
KSETBS
:

292 
	`vt_£t
(-1, -1, 
NULL
, -1, 
¨g
, -1, -1, -1);

294 
KCURST
:

295 
	`vt_£t
(-1, -1, 
NULL
, -1, -1, -1, 
NORMAL
, -1);

297 
KCURAPP
:

298 
	`vt_£t
(-1, -1, 
NULL
, -1, -1, -1, 
APPL
, -1);

305 
	}
}

	@keyboard.h

14 
	#KSTOP
 1

	)

15 
	#KKPST
 2

	)

16 
	#KVT100
 3

	)

17 
	#KANSI
 4

	)

18 
	#KMINIX
 5

	)

19 
	#KSTART
 6

	)

20 
	#KKPAPP
 7

	)

21 
	#KCURST
 8

	)

22 
	#KCURAPP
 9

	)

23 
	#KSIGIO
 10

	)

24 
	#KSETESC
 11

	)

25 
	#KSETBS
 12

	)

26 
	#KGETKEY
 13

	)

28 #i‡
deföed
 (
_COHERENT
Ë&& !deföed(
SIGUSR1
)

29 
	#SIGUSR1
 
SIGDIVE


	)

30 
	#SIGUSR2
 
SIGOVFL


	)

32 
	#HELLO
 
SIGUSR1


	)

33 
	#ACK
 
SIGUSR2


	)

35 
	#KINSTALL
 100

	)

36 
	#KUNINSTALL
 101

	)

	@keyserv.c

15 #ifde‡
HAVE_CONFIG_H


16 
	~<c⁄fig.h
>

19 
	~"rcsid.h
"

20 
RCSID
(
PKG_VER
 "$Id: keyserv.c,v 1.2 2000/01/27 11:25:31 misiek Exp $")

22 
	~"p‹t.h
"

23 
	~"möicom.h
"

26 
	#EVT100
 1

	)

27 
	#EANSI
 2

	)

30 
	#‰om_möicom
 3

	)

31 
	#to_möicom
 4

	)

34 
	gkey∑dmode
 = 
NORMAL
;

35 
	gcurs‹mode
 = 
NORMAL
;

37 *
	g_çå
 = (*)
NULL
;

38 
	gmode
 = 
EVT100
;

39 
	g∑ª¡
;

40 
jmp_buf
 
	gmaölo›
;

41 **
	gesc£q
;

42 
	g¨gumít
;

43 
	gesc_ch¨
 = 1;

44 
	gbs_code
 = 8;

45 
≥ndögkeys
;

47 *
	g°_vãsc
[] = {

52 *
	g≠p_vãsc
[] = {

57 *
	g™sõsc
[] = {

67 
	$h™dÀr
(
dummy
)

68 
dummy
;

70 
buf
[8];

71 
n
;

73 
	`sig«l
(
HELLO
, 
h™dÀr
);

74 
n
 = 
	`ªad
(
‰om_möicom
, 
buf
, 8);

75 i‡(
n
 <= 0) {

76 
n
 = 2;

77 
buf
[0] = 0;

79 i‡(
n
 % 2 == 1) {

80 
n
++;

81 
	`ªad
(
‰om_möicom
, 
buf
 + 
n
, 1);

83 
¨gumít
 = 
buf
[
n
-1];

84 
	`l⁄gjmp
(
maölo›
, ()
buf
[
n
 - 2]);

85 
	}
}

90 
	$£nd°r
(
s
)

91 *
s
;

93 
	`wrôe
(1, 
s
, 
	`°æí
(s));

94 
	}
}

99 
	$maö
(
¨gc
, 
¨gv
)

100 
¨gc
;

101 **
¨gv
;

103 
c
;

104 
ch
;

105 
f
, 
fun
;

106 
°›≥d
 = 0;

108 
∑ª¡
 = 
	`©oi
(
¨gv
[1]);

112 
	`sig«l
(
SIGQUIT
, 
SIG_IGN
);

113 
	`sig«l
(
SIGINT
, 
SIG_IGN
);

114 #ifde‡
SIGTSTP


115 
	`sig«l
(
SIGTSTP
, 
SIG_IGN
);

116 
	`sig«l
(
SIGTTIN
, 
SIG_IGN
);

117 
	`sig«l
(
SIGTTOU
, 
SIG_IGN
);

119 
	`sig«l
(
HELLO
, 
h™dÀr
);

122 
esc£q
 = 
°_vãsc
;

125 (Ë
	`£tcbªak
(1);

127 i‡((
fun
 = 
	`£tjmp
(
maölo›
)) != 0) {

129 
fun
) {

133 
KVT100
:

134 
mode
 = 
EVT100
;

135 
esc£q
 = 
°_vãsc
;

137 
KANSI
:

138 
mode
 = 
EANSI
;

139 
esc£q
 = 
™sõsc
;

141 
KKPST
:

142 
key∑dmode
 = 
NORMAL
;

144 
KKPAPP
:

145 
key∑dmode
 = 
APPL
;

147 
KCURST
:

148 
curs‹mode
 = 
NORMAL
;

149 i‡(
mode
 =
EVT100
)

150 
esc£q
 = 
°_vãsc
;

152 
KCURAPP
:

153 
curs‹mode
 = 
APPL
;

154 i‡(
mode
 =
EVT100
)

155 
esc£q
 = 
≠p_vãsc
;

157 
KSTOP
:

158 
°›≥d
 = 1;

160 
KSIGIO
:

161 
	`kûl
(
∑ª¡
, 
ACK
);

162 
f
 = 
	`ªad
(0, &
ch
, 1);

163 i‡(
f
 == 1) {

164 
	`wrôe
(
to_möicom
, &
ch
, 1);

165 (Ë
	`kûl
(
∑ª¡
, 
HELLO
);

168 
KSTART
:

169 
°›≥d
 = 0;

171 
KSETBS
:

172 
bs_code
 = 
¨gumít
;

174 
KSETESC
:

175 
esc_ch¨
 = 
¨gumít
;

180 i‡(
fun
 !
KSIGIO
) {

181 
	`kûl
(
∑ª¡
, 
ACK
);

185 i‡(
°›≥d
Ë
	`∑u£
();

189 
c
 = 
	`wxgëch
();

190 i‡(
c
 > 256 && c < 256 + 
NUM_KEYS
) {

191 
	`£nd°r
(
esc£q
[
c
 - 256]);

193 i‡(
c
 < 256) {

194 i‡(
c
 =
K_ERA
Ë¯
bs_code
;

195 
ch
 = 
c
;

197 i‡(
c
 =
esc_ch¨
 || (esc_char == 128 && c > 128)) {

202 i‡(
c
 =
esc_ch¨
 && 
≥ndögkeys
 > 0) {

203 
ch
 = 
	`wxgëch
();

205 
	`wrôe
(
to_möicom
, &
ch
, 1);

206 (Ë
	`kûl
(
∑ª¡
, 
HELLO
);

208 
	`wrôe
(1, &
ch
, 1);

214 
	}
}

	@main.c

18 #ifde‡
HAVE_CONFIG_H


19 
	~<c⁄fig.h
>

22 
	~"rcsid.h
"

23 
RCSID
("$Id: main.c,v 1.7 2000/10/27 14:19:38 walker Exp $")

25 
	~"p‹t.h
"

26 
	~"möicom.h
"

27 
	~"öé.h
"

28 #i‡
deföed
(
__löux__
Ë|| (deföed(
BSD
) && (BSD >= 199306))

29 
	~<î∫o.h
>

32 #ifde‡
SVR4_LOCKS


33 
	~<sys/ty≥s.h
>

34 
	~<sys/°©.h
>

35 
	~<sys/mkdev.h
>

38 
jmp_buf
 
	gÆbuf
;

41 *
	gVîsi⁄
 = 
VERSION
;

43 
curs_°©us
();

48 *
	$mba£«me
(
s
)

49 *
s
;

51 *
p
;

53 if((
p
 = 
	`°ºchr
(
s
, '/')Ë=(*)
NULL
)

54 
p
 = 
s
;

56 
p
++;

57 (
p
);

58 
	}
}

63 
	$Àave
(
s
)

64 *
s
;

66 i‡(
°dwö
Ë
	`w˛o£
(stdwin, 1);

67 i‡(
p‹tfd
 > 0) {

68 
	`m_ª°‹e°©e
(
p‹tfd
);

69 
	`˛o£
(
p‹tfd
);

71 
	`£t_¥ivs
();

72 i‡(
lockfûe
[0]Ë
	`u∆ök
(lockfile);

73 i‡(
P_CALLIN
[0]Ë(Ë
	`Á°sy°em
(P_CALLIN, 
CNULL
, CNULL, CNULL);

74 i‡(
ªÆ_uid
Ë
	`chown
(
dül_ây
, (
uid_t
)
p‹tuid
, (
gid_t
)
p‹tgid
);

75 
	`Ârötf
(
°dîr
, "%s", 
s
);

76 
	`exô
(1);

77 
	}
}

82 *
	$esc_key
()

84 
buf
[16];

86 i‡(!
Æt_ovîride
 && 
P_ESCAPE
[0] == '^' && P_ESCAPE[1] != '[') {

87 
	`•rötf
(
buf
, "CTRL-%¯", 
P_ESCAPE
[1]);

88 (
buf
);

90 #i‡
	`deföed
(
_COHERENT
Ë|| deföed(
i386
Ë|| deföed(
__i386__
)

91 
	`•rötf
(
buf
, "ALT-");

93 
	`•rötf
(
buf
, "Meta-");

95 (
buf
);

96 
	}
}

99 
	$gë_Ærm
(
dummy
)

100 
dummy
;

102 ()
dummy
;

103 
	`l⁄gjmp
(
Æbuf
, 1);

104 
	}
}

109 
	$›í_ãrm
(
doöô
)

110 
doöô
;

112 
°©
 
°t
;

113 
buf
[128];

114 
fd
, 
n
 = 0;

115 
pid
;

116 
mask
;

117 #i‡
	`deföed
(
__löux__
Ë|| (deföed(
BSD
) && (BSD >= 199306))

118 
s_î∫o
;

122 
	`£t_¥ivs
();

125 i‡(
P_LOCK
[0] && 
	`°©
(P_LOCK, &
°t
) == 0) {

127 #ifde‡
SVR4_LOCKS


128 
	`°©
(
dül_ây
, &
°t
);

129 
	`•rötf
(
lockfûe
, "%s/LK.%03d.%03d.%03d", 
P_LOCK
, 
	`maj‹
(
°t
.
°_dev
), maj‹(°t.
°_rdev
), 
	`mö‹
(stt.st_rdev));

132 
	`¢¥ötf
(
lockfûe
, ÷ockfûe), "%s/LCK..%s", 
P_LOCK
, 
	`mba£«me
(
dül_ây
));

138 
lockfûe
[0] = 0;

140 i‡(
doöô
 > 0 && 
lockfûe
[0] && (
fd
 = 
	`›í
÷ockfûe, 
O_RDONLY
)) >= 0) {

141 
n
 = 
	`ªad
(
fd
, 
buf
, 127);

142 
	`˛o£
(
fd
);

143 i‡(
n
 > 0) {

144 
pid
 = -1;

145 i‡(
n
 == 4)

147 
pid
 = *(*)
buf
;

150 
buf
[
n
] = 0;

151 
	`ssˇnf
(
buf
, "%d", &
pid
);

153 i‡(
pid
 > 0 && 
	`kûl
((
pid_t
)pid, 0) < 0 &&

154 
î∫o
 =
ESRCH
) {

155 
	`Ârötf
(
°dîr
, 
	`_
("Lockfile is stale. Overriding it..\n"));

156 
	`¶ìp
(1);

157 
	`u∆ök
(
lockfûe
);

159 
n
 = 0;

161 i‡(
n
 == 0) {

162 i‡(
°dwö
 !
NIL_WIN
Ë
	`w˛o£
(stdwin, 1);

163 
	`Ârötf
(
°dîr
, 
	`_
("Devi˚ %†i†locked.\n"), 
dül_ây
);

164 
	`dr›_¥ivs
();

169 i‡(
doöô
 > 0 && 
lockfûe
[0]) {

171 
mask
 = 
	`umask
(022);

172 #ifde‡
_COH3


173 i‡((
fd
 = 
	`¸ót
(
lockfûe
, 0666)) < 0) {

175 i‡((
fd
 = 
	`›í
(
lockfûe
, 
O_WRONLY
 | 
O_CREAT
 | 
O_EXCL
, 0666)) < 0) {

177 i‡(
°dwö
 !
NIL_WIN
Ë
	`w˛o£
(stdwin, 1);

178 
	`Ârötf
(
°dîr
, 
	`_
("Cannot createÜockfile. Sorry.\n"));

179 
	`dr›_¥ivs
();

182 (Ë
	`umask
(
mask
);

183 (Ë
	`chown
(
lockfûe
, (
uid_t
)
ªÆ_uid
, (
gid_t
)
ªÆ_gid
);

184 
	`¢¥ötf
(
buf
, (buf), "%10ld möicom %.20s\n", ()
	`gëpid
(), 
u£∫ame
);

185 
	`wrôe
(
fd
, 
buf
, 
	`°æí
(buf));

186 
	`˛o£
(
fd
);

190 i‡(
doöô
 > 0 && 
P_CALLOUT
[0]) {

191 if(
	`Á°sy°em
(
P_CALLOUT
, 
CNULL
, CNULL, CNULL) < 0) {

192 i‡(
°dwö
 !
NIL_WIN
Ë
	`w˛o£
(stdwin, 1);

193 
	`Ârötf
(
°dîr
, 
	`_
("CouldÇot setup for dial out.\n"));

194 i‡(
lockfûe
[0]Ë
	`u∆ök
(lockfile);

195 
	`dr›_¥ivs
();

201 i‡(
	`£tjmp
(
Æbuf
) == 0) {

202 
p‹tfd
 = -1;

203 
	`sig«l
(
SIGALRM
, 
gë_Ærm
);

204 
	`Æ¨m
(4);

205 #i‡
	`deföed
(
O_NDELAY
Ë&& deföed(
F_SETFL
)

206 
p‹tfd
 = 
	`›í
(
dül_ây
, 
O_RDWR
|
O_NDELAY
);

207 i‡(
p‹tfd
 >= 0){

209 
n
 = 
	`f˙é
(
p‹tfd
, 
F_GETFL
, 0);

210 (Ë
	`f˙é
(
p‹tfd
, 
F_SETFL
, 
n
 & ~
O_NDELAY
);

213 
p‹tfd
 = 
	`›í
(
dül_ây
, 
O_RDWR
);

215 i‡(
p‹tfd
 >= 0) {

216 i‡(
doöô
 > 0Ë
	`m_ßve°©e
(
p‹tfd
);

217 
	`p‹t_öô
();

220 #i‡
	`deföed
(
__löux__
Ë|| (deföed(
BSD
) && (BSD >= 199306))

221 
s_î∫o
 = 
î∫o
;

223 
	`Æ¨m
(0);

224 
	`sig«l
(
SIGALRM
, 
SIG_IGN
);

225 i‡(
p‹tfd
 < 0) {

226 i‡(
doöô
 > 0) {

227 i‡(
°dwö
 !
NIL_WIN
Ë
	`w˛o£
(stdwin, 1);

228 #i‡
	`deföed
(
__löux__
Ë|| (deföed(
BSD
) && (BSD >= 199306))

229 
	`Ârötf
(
°dîr
, 
	`_
("minicom: cannot open %s: %s\n"),

230 
dül_ây
, 
	`°ªº‹
(
s_î∫o
));

232 
	`Ârötf
(
°dîr
, 
	`_
("möicom: c™nŸ o≥¿%s. S‹ry.\n"), 
dül_ây
);

234 i‡(
lockfûe
[0]Ë
	`u∆ök
(lockfile);

235 
	`dr›_¥ivs
();

238 i‡(
lockfûe
[0]Ë
	`u∆ök
(lockfile);

239 
	`wîr‹
(
	`_
("C™nŸ o≥¿%s!"), 
dül_ây
);

240 
	`dr›_¥ivs
();

245 
	`°©
(
dül_ây
, &
°t
);

246 
p‹tuid
 = 
°t
.
°_uid
;

247 
p‹tgid
 = 
°t
.
°_gid
;

250 i‡(
ªÆ_uid
 !0Ë
	`chown
(
dül_ây
, (
uid_t
Ïól_uid, (
gid_t
)
ªÆ_gid
);

253 
	`m_noh™g
(
p‹tfd
);

256 
	`m_hup˛
(
p‹tfd
, 1);

257 i‡(
doöô
 > 0Ë
	`m_Êush
(
p‹tfd
);

258 
	`dr›_¥ivs
();

260 
	}
}

264 
	$do_ouçut
(
s
, 
Àn
)

265 *
s
;

266 
Àn
;

268 
buf
[256];

269 
f
;

271 i‡(
Àn
 =0ËÀ¿
	`°æí
(
s
);

273 i‡(
P_PARITY
[0] == 'M') {

274 
f
 = 0; f < 
Àn
 && f < 256; f++)

275 
buf
[
f
] = *
s
++ | 0x80;

276 
	`wrôe
(
p‹tfd
, 
buf
, 
f
);

278 
	`wrôe
(
p‹tfd
, 
s
, 
Àn
);

279 
	}
}

282 
	$kb_h™dÀr
(
a
, 
b
)

283 
a
,
b
;

285 
curs‹mode
 = 
b
;

286 
key∑dmode
 = 
a
;

287 i‡(
°
Ë
	`curs_°©us
();

288 
	}
}

293 
	$öô_emul
(
ty≥
, 
do_öô
)

294 
ty≥
;

295 
do_öô
;

297 
x
 = -1, 
y
 = -1;

298 
©å
 = 0;

299 
maxy
;

300 
ypos
;

301 
u£_°©us
;

303 i‡(
°
 !
NIL_WIN
) {

304 
	`w˛o£
(
°
, 1);

305 
ãmp°
 = 0;

306 
°
 = 
NIL_WIN
;

309 i‡(
us
 !
NIL_WIN
) {

310 
x
 = 
us
->
curx
; 
y
 = us->
cury
;

311 
©å
 = 
us
->attr;

312 
	`w˛o£
(
us
, 0);

316 
maxy
 = 
LINES
 - 1;

317 i‡((
u£_°©us
 || 
LINES
 > 24)

318 && 
P_STATLINE
[0] == 'e') {

319 i‡(
u£_°©us
) {

320 
ypos
 = 
LINES
;

321 
maxy
 = 
LINES
 - 1;

323 
ypos
 = 
LINES
 - 1;

324 
maxy
 = 
LINES
 - 2;

326 
°
 = 
	`w›í
(0, 
ypos
, 
COLS
 - 1, ypos, 
BNONE
,

327 
°_©å
, 
sfcﬁ‹
, 
sbcﬁ‹
, 1, 0, 1);

328 
	`wªdøw
(
°
, 1);

332 
num_hi°_löes
 = 
	`©oi
(
P_HISTSIZE
);

333 i‡(
num_hi°_löes
 < 0)Çum_hist_lines = 0;

334 i‡(
num_hi°_löes
 > 5000)Çum_hist_lines = 5000;

337 
us
 = 
	`w›í
(0, 0, 
COLS
 - 1, 
maxy
,

338 
BNONE
, 
XA_NORMAL
, 
tfcﬁ‹
, 
tbcﬁ‹
, 1, 
num_hi°_löes
, 0);

340 i‡(
x
 >= 0) {

341 
	`wloˇã
(
us
, 
x
, 
y
);

342 
	`w£èâr
(
us
, 
©å
);

345 
us
->
auto¸
 = 0;

346 
us
->
wøp
 = 
wø∂n
;

348 
ãrmöÆ
 = 
ty≥
;

349 
löes
 = 
LINES
 - (
°
 !
NIL_WIN
);

350 
cﬁs
 = 
COLS
;

353 i‡(
do_öô
) {

354 
	`vt_ö°Æl
(
do_ouçut
, 
kb_h™dÀr
, 
us
);

355 
	`vt_öô
(
ty≥
, 
tfcﬁ‹
, 
tbcﬁ‹
, 
us
->
wøp
, 0);

357 
	`vt_pöô
(
us
, -1, -1);

359 i‡(
°
 !
NIL_WIN
Ë
	`show_°©us
();

360 
	}
}

366 
	$ªt_c§
()

368 
	`wloˇã
(
us
, us->
curx
, us->
cury
);

369 
	`wÊush
();

370 
	}
}

375 
	$mode_°©us
()

377 i‡(
°
) {

378 
	`wloˇã
(
°
, 20, 0);

379 i‡(
P_SHOWSPD
[0] == 'l')

380 
	`w¥ötf
(
°
, "%6ld %s%s%s", 
löe•d
, 
P_BITS
, 
P_PARITY
, 
P_STOPB
);

382 
	`w¥ötf
(
°
, "%6.6†%s%s%s", 
P_BAUDRATE
, 
P_BITS
, 
P_PARITY
, 
P_STOPB
);

383 
	`ªt_c§
();

385 
	}
}

392 
	$time_°©us
()

394 i‡(!
°
)

396 
	`wloˇã
(
°
, 63, 0);

397 i‡(
⁄löe
 < 0)

398 
	`w¥ötf
(
°
, " %12.12†", 
P_HASDCD
[0] ='Y' ? 
	`_
("Offline") : _("OFFLINE"));

400 
	`w¥ötf
(
°
," %†%02ld:%02ld", 
P_HASDCD
[0] ='Y' ? 
	`_
("Online") : _("ONLINE"),

401 
⁄löe
 / 3600, (online / 60) % 60);

403 
	`ªt_c§
();

404 
	}
}

409 
	$curs_°©us
()

411 
	`wloˇã
(
°
, 33, 0);

412 
	`w¥ötf
(
°
, 
curs‹mode
 =
NORMAL
 ? "NOR" : "APP");

413 
	`ªt_c§
();

414 
	}
}

416 
time_t
 
	gﬁd_⁄löe
 = -1;

421 
	$updtime
()

424 i‡(
ﬁd_⁄löe
 =
⁄löe
) ;

425 i‡((
P_LOGCONN
[0] ='Y'Ë&& (
ﬁd_⁄löe
 >0Ë&& (
⁄löe
 < 0)) {

426 
	`do_log
(
	`_
("Gone offline (%ld:%02ld:%02ld)"),

427 
ﬁd_⁄löe
 / 3600, (old_online / 60) % 60, old_online % 60);

429 
ﬁd_⁄löe
 = 
⁄löe
;

430 i‡(
°
 !
NIL_WIN
) {

431 
	`time_°©us
();

432 
	`ªt_c§
();

434 
	`wÊush
();

435 
	}
}

439 
	$timî_upd©e
()

441 
time_t
 
t1
, 
°¨t
;

442 
dcd_suµ‹t
 = 
P_HASDCD
[0] == 'Y';

445 i‡((!
dcd_suµ‹t
 && 
bogus_dcd
Ë|| (dcd_suµ‹à&& 
	`m_gëdcd
(
p‹tfd
))) {

447 i‡(
⁄löe
 < 0) {

449 
	`time
(&
°¨t
);

450 
t1
 = 
°¨t
;

451 
⁄löe
 = 0;

452 
	`updtime
();

453 #i‡
_DCDFLOW


455 i‡(
P_HASRTS
[0] == 'Y')

456 
	`m_£thwf
(
p‹tfd
, 1);

461 #i‡
_DCDFLOW


462 i‡(
⁄löe
 >= 0) {

464 
	`m_£thwf
(
p‹tfd
, 0);

467 i‡(
⁄löe
 >0 && 
ﬁd_⁄löe
 >= 0) {

469 
	`time
(&
t1
);

470 
⁄löe
 = 
t1
 - 
°¨t
;

471 
	`updtime
();

474 
⁄löe
 = -1;

475 
	`updtime
();

479 i‡(
⁄löe
 >= 0) {

480 
	`time
(&
t1
);

481 
⁄löe
 = 
t1
 - 
°¨t
;

482 i‡(
⁄löe
 > (
ﬁd_⁄löe
 + 59))

483 
	`updtime
();

485 
	}
}

490 
	$show_°©us
()

492 
°
->
dúe˘
 = 0;

493 
	`wloˇã
(
°
, 0, 0);

494 
	`w¥ötf
(
°
,

495 
	`_
(" %7.7sZ for help | | | Minicom %-6.6s | | "),

496 
	`esc_key
(), 
VERSION
);

497 
	`mode_°©us
();

498 
	`time_°©us
();

499 
	`curs_°©us
();

500 
	`wloˇã
(
°
, 56, 0);

501 
ãrmöÆ
) {

502 
VT100
:

503 
	`wputs
(
°
, "VT102");

505 
ANSI
:

506 
	`wputs
(
°
, "ANSI");

509 
	`wªdøw
(
°
, 1);

510 
	`ªt_c§
();

511 
	}
}

516 
	$s¸ùäame
(
s
)

517 *
s
;

519 i‡(
°
 =
NIL_WIN
) ;

520 
	`wloˇã
(
°
, 39, 0);

521 i‡(*
s
 == 0)

522 
	`w¥ötf
(
°
, "Möicom %-6.6s", 
VERSION
);

524 
	`w¥ötf
(
°
, "s¸ùà%-7.7s", 
s
);

525 
	`ªt_c§
();

526 
	}
}

531 
	$showãmp
()

533 i‡(
°
 !
NIL_WIN
) ;

535 
°
 = 
	`w›í
(0, 
LINES
 - 1, 
COLS
 - 1, LINES - 1,

536 
BNONE
, 
°_©å
, 
sfcﬁ‹
, 
sbcﬁ‹
, 1, 0, 1);

537 
	`show_°©us
();

538 
ãmp°
 = 1;

539 
	}
}

546 
	$do_ãrmöÆ
()

548 
buf
[128];

549 *
±r
;

550 
c
;

551 
x
;

552 
bÀn
;

553 
zauto
 = 0;

554 *
zsig
 = "**\030B00";

555 
zpos
 = 0;

556 #i‡
_HAVE_MACROS


557 *
s
;

559 
dúÊush
 = 0;

561 
dúty_gŸo
:

563 
	`updtime
();

566 i‡(
ãmp°
) {

567 
ãmp°
 = 0;

568 
	`w˛o£
(
°
, 1);

569 
°
 = 
NIL_WIN
;

574 i‡(
P_PAUTO
[0] >'A' && P_PAUTO[0] <'Z'Ë
zauto
 = P_PAUTO[0];

576 (Ë
	`£tcbªak
(2);

578 
	`keybﬂrd
(
KSTART
, 0);

583 i‡(
size_ch™ged
) {

584 
size_ch™ged
 = 0;

587 
	`w˛o£
(
us
, 0);

588 
us
 = 
NIL_WIN
;

589 i‡(
°
Ë
	`w˛o£
(st, 0);

590 
°
 = 
NIL_WIN
;

591 
	`w˛o£
(
°dwö
, 0);

592 i‡(
	`wö_öô
(
tfcﬁ‹
, 
tbcﬁ‹
, 
XA_NORMAL
) < 0)

593 
	`Àave
(
	`_
("CouldÇotÑe-initialize window system."));

594 
	`öô_emul
(
ãrmöÆ
, 0);

596 
	`wîr‹
(
	`_
("ResizeÇot supported, screen may be messed up!"));

600 
	`timî_upd©e
();

603 
x
 = 
	`check_io
(
p‹tfd
, 0, 1000, 
buf
, &
bÀn
);

606 i‡((
x
 & 1) == 1) {

607 
±r
 = 
buf
;

608 
bÀn
-- > 0) {

610 i‡(
zauto
) {

611 i‡(
zsig
[
zpos
] =*
±r
) zpos++;

612 
zpos
 = 0;

614 i‡(
P_PARITY
[0] == 'M' || P_PARITY[0] == 'S')

615 *
±r
 &= 0x7f;

616 
	`vt_out
(*
±r
++);

617 i‡(
zauto
 && 
zsig
[
zpos
] == 0) {

618 
dúÊush
 = 1;

619 
	`keybﬂrd
(
KSTOP
, 0);

620 
	`updown
('D', 
zauto
 - 'A');

621 
dúÊush
 = 0;

622 
zpos
 = 0;

623 
bÀn
 = 0;

624 
dúty_gŸo
;

627 
	`wÊush
();

631 i‡((
x
 & 2) == 2) {

633 
c
 = 
	`keybﬂrd
(
KGETKEY
, 0);

634 i‡(
c
 < 0) c += 256;

637 #i‚de‡
RH_FIX


638 i‡((
esˇ≥
 =128 && 
c
 > 224 && c < 252) ||

640 i‡((
esˇ≥
 =128 && 
c
 > 128 && c < 256) ||

642 (
esˇ≥
 !27 && 
c
 ==Éscape) ||

643 (
c
 > 
K_META
)) {

646 
	`keybﬂrd
(
KSTOP
, 0);

649 (Ë
	`£tcbªak
(1);

652 
	`showãmp
();

653 i‡(
c
 =
esˇ≥
)

654 
c
 = 
	`keybﬂrd
(
KGETKEY
, 0);

655 i‡(
c
 > 
K_META
) c -= K_META;

656 i‡(
c
 > 128) c -= 128;

657 i‡(
c
 > ' ') {

658 
dúÊush
 = 1;

659 
	`m_Êush
(0);

660 (
c
);

664 
	`wrôe
(
p‹tfd
, &
c
, 1);

666 
	`vt_£nd
(
c
);

668 
dúty_gŸo
;

672 #i‡
_HAVE_MACROS


673 i‡(
c
 >
K_F1
 && c <
K_F10
 && 
P_MACENAB
[0] == 'Y') {

674 
s
 = "";

675 
c
) {

676 
K_F1
: 
s
 = 
P_MAC1
; ;

677 
K_F2
: 
s
 = 
P_MAC2
; ;

678 
K_F3
: 
s
 = 
P_MAC3
; ;

679 
K_F4
: 
s
 = 
P_MAC4
; ;

680 
K_F5
: 
s
 = 
P_MAC5
; ;

681 
K_F6
: 
s
 = 
P_MAC6
; ;

682 
K_F7
: 
s
 = 
P_MAC7
; ;

683 
K_F8
: 
s
 = 
P_MAC8
; ;

684 
K_F9
: 
s
 = 
P_MAC9
; ;

685 
K_F10
: 
s
 = 
P_MAC10
; ;

687 i‡(*
s
)

688 
	`mputs
(
s
, 1);

690 
	`vt_£nd
(
c
);

693 
	`vt_£nd
(
c
);

696 
	}
}

	@minicom.c

22 #ifde‡
HAVE_CONFIG_H


23 
	~<c⁄fig.h
>

26 
	~"rcsid.h
"

27 
RCSID
(
PKG_VER
 "$Id: minicom.c,v 1.14 2001/07/04 14:43:25 kloczek Exp $")

29 
	~<gë›t.h
>

31 
	#EXTERN


	)

32 
	~"p‹t.h
"

33 
	~"möicom.h
"

34 
	~"öé.h
"

37 
	#RESET
 1

	)

38 
	#NORESET
 2

	)

40 #ifde‡
_SVR2


41 
∑sswd
 *
gëpwuid
();

44 #ifde‡
DEBUG


46 
	$sign‹e
(
sig
)

47 
sig
;

49 i‡(
°dwö
 !
NIL_WIN
)

50 
	`wîr‹
(
	`_
("GŸ sig«»%d"), 
sig
);

52 
	`¥ötf
("%s\r\n", 
	`_
("GŸ sig«»%d"), 
sig
);

53 
	}
}

60 *
	gc1
[] = { 
N_
(" Ye† "), N_(" Nÿ "), 
CNULL
 };

61 *
	gc2
[] = { 
N_
(" Clo£ "), N_(" Pau£ "), N_(" Exô "), 
CNULL
 };

62 *
	gc3
[] = { 
N_
(" Clo£ "), N_(" U≈au£"), N_(" Exô "), 
CNULL
 };

63 *
	gc7
[] = { 
N_
(" Ye† "), N_(" Nÿ "), 
CNULL
 };

66 
	$p‹t_öô
()

68 
	`m_£ç¨ms
(
p‹tfd
, 
P_BAUDRATE
, 
P_PARITY
, 
P_BITS
, 
P_STOPB
,

69 
P_HASRTS
[0] ='Y', 
P_HASXON
[0] == 'Y');

70 
	}
}

72 
	$do_h™g
(
askô
)

73 
askô
;

75 
c
 = 0;

77 i‡(
askô
Ë
c
 = 
	`ask
(
	`_
("H™g-u∞löe?"), 
c7
);

78 i‡(
c
 =0Ë
	`h™gup
();

79 
	}
}

84 
	$h™gsig
(
sig
)

85 
sig
;

87 i‡(
°dwö
 !
NIL_WIN
)

88 
	`wîr‹
(
	`_
("KûÀd by sig«»%d !\n"), 
sig
);

89 i‡(
ˇpÂ
 !(
FILE
 *)0Ë
	`f˛o£
(capfp);

90 
	`keybﬂrd
(
KUNINSTALL
, 0);

91 
	`h™gup
();

92 
	`modemª£t
();

93 
	`Àave
("\n");

94 
	}
}

99 #ifde‡
SIGTSTP


101 
	$shjump
(
sig
)

102 
sig
;

104 
u£_°©us
;

106 
	`wÀave
();

107 
	`sig«l
(
SIGTSTP
, 
SIG_DFL
);

108 
	`Âuts
(
	`_
("Su•íded. Ty≥ \"fg\"Åÿªsume.\n"),
°dout
);

109 
	`kûl
(
	`gëpid
(), 
SIGTSTP
);

110 
	`sig«l
(
SIGTSTP
, 
shjump
);

111 
	`wªtu∫
();

112 i‡(
u£_°©us
Ë
	`show_°©us
();

113 
	}
}

116 
	$shjump
(
dummy
)

117 
dummy
;

119 
u£_°©us
;

121 *
sh
;

122 
pid
;

123 
°©us
;

124 
f
;

126 
sh
 = 
	`gëív
("SHELL");

127 i‡(
sh
 =
CNULL
) {

128 
	`wîr‹
(
	`_
("SHELL variableÇot set"));

131 i‡((
pid
 = 
	`f‹k
()) == -1) {

132 
	`wîr‹
(
	`_
("Out of memory: couldÇot fork()"));

135 i‡(
pid
 !0Ë
	`wÀave
();

136 i‡(
pid
 == 0) {

137 
f
 = 1; f < 
_NSIG
; f++Ë
	`sig«l
(f, 
SIG_DFL
);

138 
f
 = 3; f < 20; f++Ë
	`˛o£
(f);

139 
	`£t_¥ivs
();

140 
	`£tgid
((
gid_t
)
ªÆ_gid
);

141 
	`£tuid
((
uid_t
)
ªÆ_uid
);

142 
	`Âuts
(
	`_
("ShñÀd out. Ty≥ \"exô\"Åÿªtu∫.\n"), 
°dout
);

143 
	`exe˛
(
sh
, sh, 
CNULL
);

144 
	`exô
(1);

146 (Ë
	`m_waô
(&
°©us
);

147 
	`wªtu∫
();

148 i‡(
u£_°©us
Ë
	`show_°©us
();

149 
	}
}

152 #i‡
_HISTORY


154 
ELM
 *
	$gëlöe
(
w
, 
no
)

155 
WIN
 *
w
;

156 
no
;

158 
i
;

159 
ELM
 
outo‰™ge
[
MAXCOLS
] = {{0,0,0}};

161 i‡(
no
 < 
us
->
hi°löes
) {

163 
i
 = 
no
 + 
us
->
hi°löe
 ;

164 i‡(
i
 >
us
->
hi°löes
) i -= us->histlines;

165 i‡(
i
 < 0Ëò
us
->
hi°löes
 - 1;

166 (
us
->
hi°buf
 + (
i
 * us->
xs
));

170 
no
 -
us
->
hi°löes
;

171 i‡(
no
 >
w
->
ys
) {

172 i‡(
outo‰™ge
[0].
vÆue
 == 0) {

173 
i
=0; i<
MAXCOLS
; i++) {

174 
outo‰™ge
[
i
].
vÆue
 = ' ';

175 
outo‰™ge
[
i
].
cﬁ‹
 = 
us
->color;

176 
outo‰™ge
[
i
].
©å
 = 
us
->attr;

178 
outo‰™ge
[0].
vÆue
 = '~';

180  
outo‰™ge
;

182 (
w
->
m≠
 + (
no
 * 
us
->
xs
));

183 
	}
}

186 
	$døwhi°
(
w
, 
y
, 
r
)

187 
WIN
 *
w
;

188 
y
;

189 
r
;

191 
f
;

193 
w
->
dúe˘
 = 0;

194 
f
 = 0; f < 
w
->
ys
; f++)

195 
	`wdøwñm
(
w
, 
f
, 
	`gëlöe
(w, 
y
++));

196 i‡(
r
Ë
	`wªdøw
(
w
, 1);

197 
w
->
dúe˘
 = 1;

198 
	}
}

200 #i‡
_SEARCH_HISTORY


208 
	$døwhi°_look
(
w
, 
y
, 
r
, 
look
, 
ˇ£_m©ãrs
)

209 
WIN
 *
w
;

210 
y
;

211 
r
;

212 *
look
;

213 
ˇ£_m©ãrs
;

215 
f
;

216 
ELM
 *
tmp_e
;

217 
tmp_löe
[
MAXCOLS
];

219 
tmp_löe
[0]='\0';

220 
w
->
dúe˘
 = 0;

221 
f
 = 0; f < 
w
->
ys
; f++)

223 
tmp_e
 = 
	`gëlöe
(
w
, 
y
++);

226 
	`wdøwñm_v¨
(
w
, 
f
, 
tmp_e
, 
tmp_löe
);

229 i‡(
	`°æí
(
look
)>1 && såÀn(
tmp_löe
)>1) {

230 i‡(
	`SåSå
(
tmp_löe
,
look
, 
ˇ£_m©ãrs
))

231 
	`wdøwñm_övî£
(
w
, 
f
, 
tmp_e
);

233 
	`wdøwñm
(
w
, 
f
, 
tmp_e
);

237 i‡(
r
Ë
	`wªdøw
(
w
, 1);

238 
w
->
dúe˘
 = 1;

239 
	}
}

246 
	$£¨chhi°
(
w_‹ig
, 
w_hi°
, 
r
, 
°r
)

247 
WIN
 *
w_‹ig
,*
w_hi°
;

248 
r
;

249 *
°r
;

251 
y
;

252 
WIN
 *
w_√w
;

253 
hlöe
[128];

256 
y
 = 
w_hi°
->
y2
;

257 i‡(
°
 =(
WIN
 *)0 || (° && 
ãmp°
)Ë
y
--;

260 
w_√w
 = 
	`w›í
(0, 
y
+1, 
w_hi°
->
x2
, y+1, 0, 
°_©å
, 
sfcﬁ‹
, 
sbcﬁ‹
, 0, 0, 1);

261 
w_√w
->
dos¸ﬁl
 = 0;

262 
w_√w
->
wøp
 = 0;

264 
	`°r˝y
(
hlöe
, 
	`_
("SEARCH FOR (ESC=Exit)"));

265 
	`w¥ötf
(
w_√w
, "%s(%d):",
hlöe
,
MAX_SEARCH
);

266 
	`wªdøw
(
w_√w
, 1);

267 
	`wÊush
();

269 
	`wloˇã
(
w_√w
, 
	`°æí
(
hlöe
)+6, 0); 
	`wputs
(w_√w, 
°r
);

270 
	`wloˇã
(
w_√w
, 
	`°æí
(
hlöe
)+6, 0);

271 (Ë
	`wgës
(
w_√w
, 
°r
, 
MAX_SEARCH
, MAX_SEARCH);

273 i‡(!
°r
[0])

275 
	`wÊush
();

276 
	`w˛o£
(
w_√w
, 0);

281 
	`wªdøw
(
w_hi°
, 1);

282 
	`w˛o£
(
w_√w
, 1);

283 
	`wÊush
();

286 
	}
}

294 
	$föd_√xt
(
w
, 
w_hi°
, 
hô_löe
, 
look
, 
ˇ£_m©ãrs
)

295 
WIN
 *
w
;

296 
WIN
 *
w_hi°
;

297 
hô_löe
;

298 *
look
;

299 
ˇ£_m©ãrs
;

301 
√xt_löe
;

302 
ELM
 *
tmp_e
;

303 
tmp_löe
[
MAXCOLS
];

304 
Æl_löes
;

306 i‡(!
look
)

307 (++
hô_löe
);

309 
tmp_löe
[0]='\0';

311 
hô_löe
++;

312 
Æl_löes
 = 
w
->
hi°löes
 + 
w_hi°
->
ys
;

314 i‡(
hô_löe
 >
Æl_löes
)

316 
	`wîr‹
(
	`_
("Search Wrapping AroundÅo Start!"));

317 
hô_löe
 = 0;

320 
√xt_löe
 = 
hô_löe
;Çext_löê<
Æl_löes
;Çext_line++)

323 
tmp_e
 = 
	`gëlöe
(
w_hi°
, 
√xt_löe
);

329 
	`wdøwñm_v¨
(
w
, 
√xt_löe
, 
tmp_e
, 
tmp_löe
);

332 i‡(
	`°æí
(
tmp_löe
Ë> 1 && såÀn(
look
) > 1)

333 i‡(
	`SåSå
(
tmp_löe
, 
look
, 
ˇ£_m©ãrs
))

334 (
√xt_löe
);

337 i‡(
hô_löe
 >
Æl_löes
)

339 
	`wîr‹
(
	`_
("Search Wrapping AroundÅo Start!"));

340 
hô_löe
 = 0;

344 
	}
}

351 c⁄° *
	$upˇ£
(
de°
, 
§c
)

352 *
de°
, *
§c
;

354 *
d
;

356 
d
=
de°
;

357 *
§c
)

358 *
d
++=
	`touµî
(*
§c
++);

359 *
d
='\0';

360  (
de°
);

361 
	}
}

368 *
	$SåSå
(
°r1
, 
°r2
, 
ˇ£_m©ãrs
)

369 *
°r1
, *
°r2
;

370 
ˇ£_m©ãrs
;

372 
tmp°r1
[
MAXCOLS
],

373 
tmp°r2
[
MAXCOLS
];

375 i‡(
ˇ£_m©ãrs
)

376  (
	`°r°r
(
°r1
,
°r2
));

378  (
	`°r°r
(
	`upˇ£
(
tmp°r1
,
°r1
),upˇ£(
tmp°r2
,
°r2
)));

379 
	}
}

384 
	$døwcôe
(
w
, 
y
, 
côey
, 
°¨t
, 
íd
)

385 
WIN
 *
w
;

386 
y
;

387 
côey
;

388 
°¨t
;

389 
íd
;

391 i‡(
y
+
côey
 >
°¨t
 && y+côey <
íd
)

392 
	`wdøwñm_övî£
(
w
, 
y
, 
	`gëlöe
(w, y+
côey
));

394 
	`wdøwñm
(
w
, 
y
, 
	`gëlöe
(w, y+
côey
));

395 
	}
}

397 
	$døwcôe_whﬁe
(
w
, 
y
, 
°¨t
, 
íd
)

398 
WIN
 *
w
;

399 
y
, 
°¨t
, 
íd
;

401 
sy
;

402 
sy
 = 0; sy < 
w
->
ys
; sy++) {

403 
	`døwcôe
(
w
, 
sy
, 
y
, 
°¨t
, 
íd
);

405 
	}
}

407 
	$do_côe
(
w
, 
°¨t
, 
íd
)

408 
WIN
 *
w
;

409 
°¨t
,
íd
;

411 
tmp_löe
[
MAXCOLS
];

412 
ELM
 *
tmp_e
;

413 
x
, 
y
;

415 
y
=
°¨t
; y<=
íd
; y++) {

416 
	`vt_£nd
('>');

417 
	`vt_£nd
(' ');

418 
tmp_e
 = 
	`gëlöe
(
w
, 
y
);

419 
	`wdøwñm_v¨
(
w
, 0 , 
tmp_e
, 
tmp_löe
);

420 
tmp_löe
[
w
->
xs
]=0;

421 
x
=
w
->
xs
-1; x>=0; x--){

422 i‡(
tmp_löe
[
x
] <= ' ')Åmp_line[x]=0;

425 
x
=0; 
tmp_löe
[x]; x++){

426 
	`vt_£nd
(
tmp_löe
[
x
]);

428 
	`vt_£nd
(13);

430 
	}
}

433 
	$s¸ﬁlback
()

435 
y
,
c
;

436 
WIN
 *
b_us
, *
b_°
;

437 #i‡
_SEARCH_HISTORY


438 
ELM
 *
tmp_e
;

439 
ˇ£_m©ãrs
=0;

440 
look_f‹
[
MAX_SEARCH
];

441 
tmp_löe
[
MAXCOLS
];

443 
côemode
 = 0;

444 
côe_y°¨t
 = 1000000,

445 
côe_yíd
 = -1,

446 
côe_y
;

447 
övî£
;

448 
lo›
 = 1;

450 
hlöe0
[128], 
hlöe1
[128], *
hlöe
;

451 
hô
=0;

454 
y
 = 
us
->
y2
;

456 i‡(
°
 =(
WIN
 *)0 || (° && 
ãmp°
)Ë
y
--;

459 
b_us
 = 
	`w›í
(0, 0, 
us
->
x2
, 
y
, 0, us->
©å
, 
	`COLFG
(us->
cﬁ‹
),

460 
	`COLBG
(
us
->
cﬁ‹
), 0, 0, 0);

461 
	`wcurs‹
(
b_us
, 
CNONE
);

464 
b_°
 = 
	`w›í
(0, 
y
+1, 
us
->
x2
, y+1, 0, 
°_©å
, 
sfcﬁ‹
, 
sbcﬁ‹
, 0, 0, 1);

465 
b_°
->
dos¸ﬁl
 = 0;

466 
b_°
->
wøp
 = 0;

470 #i‡
_SEARCH_HISTORY


476 
	`°r˝y
(
hlöe0
, 
	`_
("HISTORY: U=Up D=Down F=PgDn B=PgUp s=Srch S=CaseLess N=Next C=Cite ESC=Exit "));

478 
	`°r˝y
(
hlöe0
, 
	`_
(" SCROLL MODE U=up D=down F=page-forward B=page-backward C=Cite ESC=exit "));

481 i‡(
b_°
->
xs
 < 127)

482 
hlöe0
[
b_°
->
xs
] = 0;

483 
hlöe
 = 
hlöe0
;

484 
	`w¥ötf
(
b_°
, 
hlöe
);

485 
	`wªdøw
(
b_°
, 1);

486 
	`wÊush
();

489 
y
 = 
us
->
hi°löes
;

496 
hô
=0;

498 
	`døwhi°
(
b_us
, 
y
, 0);

500 
lo›
) {

501 
c
 = 
	`wxgëch
();

502 
c
) {

503 #i‡
_SEARCH_HISTORY


510 
ˇ£_m©ãrs
=0;

517 i‡(!
us
->
hi°löes
)

518 { 
	`wbñl
(); 
	`wîr‹
(
	`_
("History buffer Disabled!")); ; }

519 i‡(!
us
->
hi°löe
)

520 { 
	`wbñl
(); 
	`wîr‹
(
	`_
("History bufferÉmpty!")); ; }

521 i‡(
côemode
) ;

524 i‡(
c
 == '/' || c == 's')

525 
ˇ£_m©ãrs
=1;

528 
	`£¨chhi°
(
us
, 
b_us
, 0, 
look_f‹
);

530 
	`wloˇã
(
b_°
, 0, 0);

531 
	`w¥ötf
(
b_°
, 
hlöe
);

532 
	`wªdøw
(
b_°
, 1);

534 i‡(
	`°æí
(
look_f‹
)>1)

536 
hô
 = 
	`föd_√xt
(
us
, 
b_us
, 
y
, 
look_f‹
, 
ˇ£_m©ãrs
);

538 i‡(
hô
 =-1Ë{ 
	`wbñl
(); 
	`wÊush
(); hit=0; ; }

539 
	`døwhi°_look
(
b_us
, 
hô
, 1, 
look_f‹
, 
ˇ£_m©ãrs
);

540 
y
 = 
hô
;

543 { 
	`wbñl
(); ; }

544 
	`wÊush
();

555 i‡(
côemode
) ;

556 i‡(
	`°æí
(
look_f‹
)>1)

558 
hô
 = 
	`föd_√xt
(
us
, 
b_us
, 
y
, 
look_f‹
, 
ˇ£_m©ãrs
);

560 i‡(
hô
 =-1Ë{ 
	`wbñl
(); 
	`wÊush
(); hit=0; ; }

561 
	`døwhi°_look
(
b_us
, 
hô
, 1, 
look_f‹
, 
ˇ£_m©ãrs
);

562 
y
 = 
hô
;

566 
	`wbñl
();

567 
	`wîr‹
(
	`_
("NoÖrevious search!\n Please 's' or 'S' first!"));

569 
	`wÊush
();

575 
K_UP
:

576 i‡(
côemode
 && 
côe_y
) {

577 
côe_y
--;

578 i‡(
côe_y°¨t
 != 1000000) {

579 
côe_yíd
 = 
y
 + 
côe_y
;

580 
	`døwcôe
(
b_us
, 
côe_y
+1, 
y
, 
côe_y°¨t
, 
côe_yíd
);

581 
	`døwcôe
(
b_us
, 
côe_y
, 
y
, 
côe_y°¨t
, 
côe_yíd
);

583 
	`wloˇã
(
b_us
, 0, 
côe_y
);

586 i‡(
y
 <= 0) ;

587 
y
--; i‡(
côe_y°¨t
 !1000000Ë
côe_yíd
 = y + 
côe_y
;

588 
	`ws¸ﬁl
(
b_us
, 
S_DOWN
);

590 #i‡
_SEARCH_HISTORY


597 i‡(
côemode
) {

598 
övî£
 =

599 (
y
+
côe_y
 >
côe_y°¨t
 && y+côe_y <
côe_yíd
);

601 
tmp_e
 = 
	`gëlöe
(
b_us
, 
y
);

602 i‡(
	`°æí
(
look_f‹
) > 1)

605 
	`wdøwñm_v¨
(
b_us
, 0, 
tmp_e
, 
tmp_löe
);

606 
övî£
 = (
	`°æí
(
tmp_löe
)>1 &&

607 
	`SåSå
(
tmp_löe
, 
look_f‹
, 
ˇ£_m©ãrs
));

610 
övî£
 = 0;

613 i‡(
côemode
) {

614 
övî£
 =

615 (
y
+
côe_y
 >
côe_y°¨t
 && y+côe_y <
côe_yíd
);

617 
övî£
 = 0;

620 i‡(
övî£
Ë
	`wdøwñm_övî£
(
b_us
, 0, 
	`gëlöe
(b_us, 
y
));

621 
	`wdøwñm
(
b_us
, 0, 
	`gëlöe
(b_us, 
y
));

622 i‡(
côemode
Ë
	`wloˇã
(
b_us
, 0, 
côe_y
);

623 
	`wÊush
();

627 
K_DN
:

628 i‡(
côemode
 && 
côe_y
 < 
b_us
->
ys
-1) {

629 
côe_y
++;

630 i‡(
côe_y°¨t
 != 1000000) {

631 
côe_yíd
 = 
y
 + 
côe_y
;

632 
	`døwcôe
(
b_us
, 
côe_y
-1, 
y
, 
côe_y°¨t
, 
côe_yíd
);

633 
	`døwcôe
(
b_us
, 
côe_y
, 
y
, 
côe_y°¨t
, 
côe_yíd
);

635 
	`wloˇã
(
b_us
, 0, 
côe_y
);

639 i‡(
y
 >
us
->
hi°löes
) ;

640 
y
++; i‡(
côe_y°¨t
 !1000000Ë
côe_yíd
 = y + 
côe_y
;

641 
	`ws¸ﬁl
(
b_us
, 
S_UP
);

643 #i‡
_SEARCH_HISTORY


650 i‡(
côemode
) {

651 
övî£
 =

652 (
y
+
côe_y
 >
côe_y°¨t
 && y+côe_y <
côe_yíd
);

654 
tmp_e
 = 
	`gëlöe
(
b_us
, 
y
 + b_us->
ys
 - 1);

655 i‡(
	`°æí
(
look_f‹
) > 1)

658 
	`wdøwñm_v¨
(
b_us
, 0, 
tmp_e
, 
tmp_löe
);

659 
övî£
 = (
	`°æí
(
tmp_löe
)>1 &&

660 
	`SåSå
(
tmp_löe
, 
look_f‹
, 
ˇ£_m©ãrs
));

663 
övî£
 = 0;

666 i‡(
côemode
) {

667 
övî£
 =

668 (
y
+
côe_y
 >
côe_y°¨t
 && y+côe_y <
côe_yíd
);

670 
övî£
 = 0;

673 i‡(
övî£
)

674 
	`wdøwñm_övî£
(
b_us
, b_us->
ys
 - 1,

675 
	`gëlöe
(
b_us
, 
y
 + b_us->
ys
 - 1));

677 
	`wdøwñm
(
b_us
, b_us->
ys
 - 1,

678 
	`gëlöe
(
b_us
, 
y
 + b_us->
ys
 - 1));

679 i‡(
côemode
Ë
	`wloˇã
(
b_us
, 0, 
côe_y
);

680 
	`wÊush
();

684 
K_PGUP
:

685 i‡(
y
 <= 0) ;

686 
y
 -
b_us
->
ys
;

687 i‡(
y
 < 0) y = 0;

688 i‡(
côe_y°¨t
 !1000000Ë
côe_yíd
 = 
y
 + 
côe_y
;

690 #i‡
_SEARCH_HISTORY


697 i‡(
	`°æí
(
look_f‹
)>1 && 
us
->
hi°löe
)

698 
	`døwhi°_look
(
b_us
, 
y
, 1, 
look_f‹
, 
ˇ£_m©ãrs
);

700 
	`døwhi°
(
b_us
, 
y
, 1);

702 
	`døwhi°
(
b_us
, 
y
, 1);

704 i‡(
côemode
Ë
	`wloˇã
(
b_us
, 0, 
côe_y
);

709 
K_PGDN
:

710 i‡(
y
 >
us
->
hi°löes
) ;

711 
y
 +
b_us
->
ys
;

712 i‡(
y
 > 
us
->
hi°löes
) y=us->histlines;

713 i‡(
côe_y°¨t
 !1000000Ë
côe_yíd
 = 
y
 + 
côe_y
;

715 #i‡
_SEARCH_HISTORY


722 i‡(
	`°æí
(
look_f‹
)>1 && 
us
->
hi°löe
)

723 
	`døwhi°_look
(
b_us
, 
y
, 1, 
look_f‹
, 
ˇ£_m©ãrs
);

725 
	`døwhi°
(
b_us
, 
y
, 1);

727 
	`døwhi°
(
b_us
, 
y
, 1);

729 i‡(
côemode
Ë
	`wloˇã
(
b_us
, 0, 
côe_y
);

732 i‡(
côemode
 ^= 1) {

733 
côe_y
 = 0;

734 
côe_y°¨t
 = 1000000;

735 
côe_yíd
 = -1;

736 
	`°r˝y
(
hlöe1
, 
	`_
(" CITATION: ENTER=select startÜine ESC=exit "));

737 i‡(
b_°
->
xs
 < 127Ë
hlöe1
[b_st->xs]=0;

738 
hlöe
 = 
hlöe1
;

740 
hlöe
 = 
hlöe0
;

742 
	`wloˇã
(
b_°
, 0, 0);

743 
	`w¥ötf
(
b_°
, 
hlöe
);

744 
	`wªdøw
(
b_°
, 1);

745 i‡(
côemode
Ë
	`wloˇã
(
b_us
, 0, 
côe_y
);

748 i‡(!
côemode
) ;

749 i‡(
côe_y°¨t
 == 1000000) {

750 
côe_yíd
 = 
côe_y°¨t
 = 
y
 + 
côe_y
;

751 
	`°r˝y
(
hlöe1
, 
	`_
(" CITATION: ENTER=selectÉndÜine ESC=exit "));

752 i‡(
b_°
->
xs
 < 127Ë
hlöe1
[b_st->xs]=0;

754 i‡(
côe_y°¨t
 > 
côe_yíd
) ;

755 
	`døwcôe_whﬁe
(
b_us
, 
y
, 1000000, -1);

756 
lo›
 = 0;

759 
	`wloˇã
(
b_°
, 0, 0);

760 
	`w¥ötf
(
b_°
, 
hlöe
);

761 
	`wªdøw
(
b_°
, 1);

762 
	`wdøwñm_övî£
(
b_us
, 
côe_y
, 
	`gëlöe
(b_us, 
côe_y°¨t
));

763 
	`wloˇã
(
b_us
, 0, 
côe_y
);

765 
K_ESC
:

766 i‡(!
côemode
Ë{
lo›
 = 0; ;}

767 i‡(
côe_y°¨t
 == 1000000) {

768 
côemode
 = 0;

769 
hlöe
 = 
hlöe0
;

771 
côe_y°¨t
 = 1000000;

772 
	`°r˝y
(
hlöe1
, 
	`_
(" CITATION: ENTER=select startÜine ESC=exit "));

774 
	`døwcôe_whﬁe
(
b_us
, 
y
, 
côe_y°¨t
, 
côe_yíd
);

775 
	`wloˇã
(
b_°
, 0, 0);

776 
	`w¥ötf
(
b_°
, 
hlöe
);

777 
	`wªdøw
(
b_°
, 1);

778 i‡(
côemode
Ë
	`wloˇã
(
b_us
, 0, 
côe_y
);

783 i‡(
côemode
Ë
	`do_côe
(
b_us
, 
côe_y°¨t
, 
côe_yíd
);

784 
	`w˛o£
(
b_us
, 
y
 =
us
->
hi°löes
 ? 0 : 1);

785 
	`w˛o£
(
b_°
, 1);

786 
	`wloˇã
(
us
, us->
curx
, us->
cury
);

787 
	`wÊush
();

788 
	`wªdøw
(
us
, 1);

789 
	}
}

792 #ifde‡
SIGWINCH


794 
	$ch™ge_size
(
sig
)

795 
sig
;

797 ()
sig
;

798 
size_ch™ged
 = 1;

799 
	`sig«l
(
SIGWINCH
, 
ch™ge_size
);

800 
	}
}

806 *
	$gëw‹d
(
s
)

807 **
s
;

809 *
begö
;

812 **
s
 == ' ' || **s == '\t') (*s)++;

814 i‡(**
s
 == '\0' || **s == '\n') ((*)0);

816 
begö
 = *
s
;

818 **
s
 != ' ' && **s != '\t' && **s != '\n' && **s) (*s)++;

820 i‡(**
s
) {

821 **
s
 = 0;

822 (*
s
)++;

824 (
begö
);

825 
	}
}

827 
	$ußge
(
ív_¨gs
, 
›töd
, 
mc
)

828 
ív_¨gs
, 
›töd
;

829 *
mc
;

831 i‡(
ív_¨gs
 >
›töd
 && 
mc
)

832 
	`Ârötf
(
°dîr
, 
	`_
("Wr⁄g o±i⁄ i¿ívú⁄míàMINICOM=\"%s\"\n"), 
mc
);

833 
	`Ârötf
(
°dîr
, 
	`_
("Type \"minicom %s\" for help.\n"), "--help");

834 
	`exô
(1);

835 
	}
}

838 
	$hñ±hem
()

840 *
mc
 = 
	`gëív
("MINICOM");

842 
	`¥ötf
(
	`_
("Ußge: %†[OPTION]... [c⁄figuøti⁄]\n"), 
PACKAGE
);

843 
	`¥ötf
(
	`_
("AÅerminalÖrogram for Linuxánd other unix-like systems.\n\n"));

844 
	`¥ötf
(
	`_
(" -s, --setup :Énter setup mode (onlyásÑoot)\n"));

845 
	`¥ötf
(
	`_
(" -o, --noinit : doÇot initialize modem &Üockfilesát startup\n"));

846 
	`¥ötf
(
	`_
(" -m, --metakey : use meta orált key for commands\n"));

847 
	`¥ötf
(
	`_
(" -M, --metakey8 : use 8bit meta key for commands\n"));

848 
	`¥ötf
(
	`_
(" -l, --ansi :Üiteral;ássume screen usesÅhe IBM-PC character set\n"));

849 
	`¥ötf
(
	`_
(" -L, --iso : Ditto, butássume screen uses ISO8859\n"));

850 
	`¥ötf
(
	`_
(" -w, --wrap : Linewrap on\n"));

851 
	`¥ötf
(
	`_
(" -z, --statline :ÅryÅo useÅerminal's statusÜine\n"));

852 
	`¥ötf
(
	`_
(" -8, --8bit : 8bit clean mode (for Japanese,Étc)\n"));

853 
	`¥ötf
(
	`_
(" -c, --color=on/off : ANSI style color usage on or off\n"));

854 
	`¥ötf
(
	`_
(" -a, --attrib=on/off : useÑeverse or highlightáttributes on or off\n"));

855 
	`¥ötf
(
	`_
(" -t, --term=TERM : override TERMÉnvironment variable\n"));

856 
	`¥ötf
(
	`_
(" -S, --script=SCRIPT :Ñun SCRIPTát startup\n"));

857 
	`¥ötf
(
	`_
(" -d, --dial=ENTRY : dial ENTRY fromÅhe dialing directory\n"));

858 
	`¥ötf
(
	`_
(" -p, --ptty=TTYP : connectÅoÖseudoÅerminal\n"));

859 
	`¥ötf
(
	`_
(" -C, --capturefile=FILE : start capturingÅo FILE\n"));

860 
	`¥ötf
(
	`_
(" -v, --version : output version informationándÉxit\n"));

861 
	`¥ötf
(
	`_
(" configuration : configuration fileÅo use\n\n"));

862 
	`¥ötf
(
	`_
("These options canálso be specified inÅhe MINICOMÉnvironment variable.\n"));

863 
	`¥ötf
(
	`_
("Thi†v¨übÀ i†cuºíéy %s\"%s\".\n"), 
mc
 ? _("setÅo ") : _("unset"),

864 
mc
 ? mc : "");

865 
	`¥ötf
(
	`_
("The LIBDIRÅo findÅhe configuration filesándÅheáccess file\n"));

866 
	`¥ötf
(
	`_
("möicom.u£r†i†compûedá†%s.\n\n"), 
LIBDIR
);

867 
	`¥ötf
(
	`_
("Report bugsÅo <minicom-devel@bazar.conectiva.com.br>.\n"));

869 
	}
}

871 
	$maö
(
¨gc
, 
¨gv
)

872 
¨gc
;

873 **
¨gv
;

875 
c
;

876 
quô
 = 0;

877 *
s
, *
buÂ
;

878 
do£tup
 = 0, 
doöô
 = 1;

879 
buf
[80];

880 
ˇ≤ame
[128];

881 
∑sswd
 *
pwd
;

882 
u£rok
 = 0;

883 
FILE
 *
Â
;

884 
u£rfûe
[256];

885 *
u£_p‹t
;

886 *
¨gs
[20];

887 
¨gk
 = 1;

888 
	`gë›t
(), 
›töd
;

889 *
›èrg
;

890 
u£_°©us
;

891 *
mc
;

892 
ív_¨gs
;

893 *
cmd_dül
;

894 
Æt_code
 = 0;

895 
p£udo
[64];

898 
›ti⁄
 
l⁄g_›ti⁄s
[] =

900 { "£tup", 
no_¨gumít
, 
NULL
, 's' },

901 { "hñp", 
no_¨gumít
, 
NULL
, 'h' },

902 { "±ty", 
ªquúed_¨gumít
, 
NULL
, 'p' },

903 { "mëakey", 
no_¨gumít
, 
NULL
, 'm' },

904 { "mëakey8", 
no_¨gumít
, 
NULL
, 'M' },

905 { "™si", 
no_¨gumít
, 
NULL
, 'l' },

906 { "iso", 
no_¨gumít
, 
NULL
, 'L' },

907 { "ãrm", 
ªquúed_¨gumít
, 
NULL
, 't' },

908 { "noöô", 
no_¨gumít
, 
NULL
, 'o' },

909 { "cﬁ‹", 
ªquúed_¨gumít
, 
NULL
, 'c' },

910 { "©åib", 
ªquúed_¨gumít
, 
NULL
, 'a' },

911 { "dül", 
ªquúed_¨gumít
, 
NULL
, 'd' },

912 { "°©löe", 
no_¨gumít
, 
NULL
, 'z' },

913 { "ˇ±uªfûe", 
ªquúed_¨gumít
, 
NULL
, 'C' },

914 { "s¸ùt", 
ªquúed_¨gumít
, 
NULL
, 'S' },

915 { "8bô", 
no_¨gumít
, 
NULL
, '8' },

916 { "vîsi⁄", 
no_¨gumít
, 
NULL
, 'v' },

917 { "wøp", 
no_¨gumít
, 
NULL
, 'w' },

918 { 
NULL
, 0, NULL, 0 }

922 
	`£éoˇÀ
(
LC_ALL
, "");

923 
	`bödãxtdomaö
(
PACKAGE
, 
LOCALEDIR
);

924 
	`ãxtdomaö
(
PACKAGE
);

927 
p‹tfd
 = -1;

928 
ˇpÂ
 = (
FILE
 *)
NULL
;

929 
doˇp
 = 0;

930 
⁄löe
 = -1;

931 
löe•d
 = 0;

932 
°d©å
 = 
XA_NORMAL
;

933 
us
 = 
NIL_WIN
;

934 
addlf
 = 0;

935 
wø∂n
 = 0;

936 #ifde‡
HAVE_SELECT


937 
loˇl_echo
 = 0;

939 
	`°r˝y
(
ˇ≤ame
, "minicom.cap");

940 
lockfûe
[0] = 0;

941 
ãmp°
 = 0;

942 
°
 = 
NIL_WIN
;

943 
us
 = 
NIL_WIN
;

944 
bogus_dcd
 = 0;

945 
u£cﬁ‹
 = 0;

946 
s¸ìn_ibmpc
 = 0;

947 
s¸ìn_iso
 = 0;

948 
u£©å
 = 1;

949 
	`°∫˝y
(
ãrmty≥
, 
	`gëív
("TERM") ? getenv("TERM") : "dumb", (termtype));

950 
°d©å
 = 
XA_NORMAL
;

951 
u£_p‹t
 = "dfl";

952 
Æt_ovîride
 = 0;

953 
s¸_«me
[0] = 0;

954 
s¸_u£r
[0] = 0;

955 
s¸_∑sswd
[0] = 0;

956 
dül_«me
 = (*)
NULL
;

957 
dül_numbî
 = (*)
NULL
;

958 
dül_u£r
 = (*)
NULL
;

959 
dül_∑ss
 = (*)
NULL
;

960 
size_ch™ged
 = 0;

961 
esˇ≥
 = 1;

962 
cmd_dül
 = 
NULL
;

963 
ªÆ_uid
 = 
	`gëuid
();

964 
ªÆ_gid
 = 
	`gëgid
();

965 
eff_uid
 = 
	`gëeuid
();

966 
eff_gid
 = 
	`gëegid
();

970 
mfcﬁ‹
 = 
YELLOW
;

971 
mbcﬁ‹
 = 
BLUE
;

972 
tfcﬁ‹
 = 
WHITE
;

973 
tbcﬁ‹
 = 
BLACK
;

974 
sfcﬁ‹
 = 
WHITE
;

975 
sbcﬁ‹
 = 
RED
;

976 
°_©å
 = 
XA_NORMAL
;

985 *
œng
 = 
	`gëív
("LANG");

986 i‡(
œng
!=
NULL
 && (!
	`°∫cmp
(lang,"ja",2) || !strncmp(lang,"ko",2))) {

987 
¨gs
[
¨gk
++] = "-8";

992 
num_hi°_löes
 = 256;

999 
¨gs
[0] = "minicom";

1000 i‡((
mc
 = 
	`gëív
("MINICOM")Ë!
CNULL
) {

1001 
	`°∫˝y
(
buf
, 
mc
, 80);

1002 
buÂ
 = 
buf
;

1003 
buf
[79] = 0;

1004 
	`is•a˚
(*
buÂ
)) bufp++;

1005 *
buÂ
 && 
¨gk
 < 19) {

1006 
s
 = 
buÂ
; !
	`is•a˚
(*bufp) && *bufp; bufp++)

1008 
¨gs
[
¨gk
++] = 
s
;

1009 
	`is•a˚
(*
buÂ
)) *bufp++ = 0;

1012 
ív_¨gs
 = 
¨gk
;

1015 
c
 = 1; c < 
¨gc
 && 
¨gk
 < 19; c++Ë
¨gs
[¨gk++] = 
¨gv
[c];

1016 
¨gs
[
¨gk
] = 
CNULL
;

1020 (
c
 = 
	`gë›t_l⁄g
(
¨gk
, 
¨gs
, "v8zhlLsomMbwc:a:t:d:p:C:S:",

1021 
l⁄g_›ti⁄s
, 
NULL
)Ë!
EOF
)

1022 
c
) {

1024 
	`¥ötf
(
	`_
("%†vîsi⁄ %s"), 
PACKAGE
, 
VERSION
);

1025 #ifde‡
__DATE__


1026 
	`¥ötf
(
	`_
(" (compûed %s)"), 
__DATE__
);

1028 
	`¥ötf
("\n");

1029 
	`¥ötf
(
	`_
("Copyright (C) Miquel van Smoorenburg.\n\n"));

1030 
	`¥ötf
("ThisÖrogram is free software; you canÑedistribute itánd/or\n"

1034 
	`exô
(1);

1037 i‡(
ªÆ_uid
 !0 &&Ñól_uid !
eff_uid
) {

1038 
	`Ârötf
(
°dîr
, 
	`_
("minicom: -s switchÇeedsÑootÖrivilige\n"));

1039 
	`exô
(1);

1041 
do£tup
 = 1;

1044 
	`hñ±hem
();

1045 
	`exô
(1);

1048 i‡(
	`°∫cmp
(
›èrg
, "/dev/", 5) == 0)

1049 
›èrg
 += 5;

1050 i‡(((
	`°∫cmp
(
›èrg
, "tty", 3) != 0)

1052 && (
	`°∫cmp
(
›èrg
, "pts", 3) != 0)

1054 && (
	`°∫cmp
(
›èrg
, "pty", 3) != 0))

1055 || !
	`°rchr
("pqr°uvwxyz/", 
›èrg
[3])) {

1056 
	`Ârötf
(
°dîr
, 
	`_
("minicom:árgumentÅo -p must beáÖty\n"));

1057 
	`exô
(1);

1059 
	`¢¥ötf
(
p£udo
, ’£udo), "/dev/%s", 
›èrg
);

1060 
dül_ây
 = 
p£udo
;

1063 
	`dr›_Æl_¥ivs
();

1066 
Æt_ovîride
++;

1067 
Æt_code
 = 27;

1070 
Æt_ovîride
++;

1071 
Æt_code
 = 128;

1074 
s¸ìn_ibmpc
++;

1077 
s¸ìn_iso
++;

1080 
	`°∫˝y
(
ãrmty≥
, 
›èrg
, (termtype));

1081 #ifde‡
__löux__


1083 i‡((
s
 = 
	`gëív
("TERMCAP")Ë!
NULL
 && *s != '/')

1084 
	`un£ãnv
("TERMCAP");

1088 
doöô
 = 0;

1091 i‡(
	`°rcmp
("⁄", 
›èrg
) == 0) {

1092 
u£cﬁ‹
 = 1;

1093 
°d©å
 = 
XA_BOLD
;

1096 i‡(
	`°rcmp
("off", 
›èrg
) == 0) {

1097 
u£cﬁ‹
 = 0;

1098 
°d©å
 = 
XA_NORMAL
;

1101 
	`ußge
(
ív_¨gs
, 
›töd
 - 1, 
mc
);

1104 i‡(
	`°rcmp
("⁄", 
›èrg
) == 0) {

1105 
u£©å
 = 1;

1108 i‡(
	`°rcmp
("off", 
›èrg
) == 0) {

1109 
u£©å
 = 0;

1112 
	`ußge
(
ív_¨gs
, 
›töd
 - 1, 
mc
);

1115 
cmd_dül
 = 
›èrg
;

1118 
u£_°©us
 = 1;

1121 
ˇpÂ
 = 
	`sf›í
(
›èrg
, "a");

1122 i‡(
ˇpÂ
 =
NULL
) {

1123 
	`wîr‹
(
	`_
("Cannot open capture file"));

1124 
	`exô
(1);

1126 
doˇp
 = 1;

1127 
	`vt_£t
(
addlf
, -1, 
ˇpÂ
, 
doˇp
, -1, -1, -1, -1);

1130 
	`°∫˝y
(
s¸_«me
, 
›èrg
, 33);

1133 
	`vt_£t
(-1, -1, (
FILE
*)
NULL
, -1, -1, -1, -1, 1);

1134 
s¸ìn_ibmpc
++; 
s¸ìn_iso
++;

1137 
wø∂n
 = 1;

1140 
	`ußge
(
ív_¨gs
, 
›töd
, 
mc
);

1145 
›töd
 < 
¨gk
 && 
¨gs
[optind][0] != '-')

1146 
u£_p‹t
 = 
¨gs
[
›töd
++];

1149 } 
›töd
 < 
¨gk
);

1151 #ifde‡
SVR4_LOCKS


1152 i‡(
ªÆ_uid
 =0 && 
do£tup
 == 0) {

1153 
	`Ârötf
(
°dîr
, "%s",

1154 
	`_
("minicom: WARNING:Ölease don'tÑun minicomásÑoot whenÇot maintaining\n"

1157 
	`¶ìp
(5);

1162 
s
 = 
u£_p‹t
; *s; s++) if (*s == '/') *s = '_';

1163 
	`¢¥ötf
(
∑rfûe
, ’¨fûe), "%s/möúc.%s", 
LIBDIR
, 
u£_p‹t
);

1166 i‡((
pwd
 = 
	`gëpwuid
(
ªÆ_uid
)Ë=(
∑sswd
 *)0) {

1167 
	`Âuts
(
	`_
("You d⁄'àexi°. Gÿaway.\n"), 
°dîr
);

1168 
	`exô
(1);

1172 i‡((
s
 = 
	`gëív
("HOME")Ë=
CNULL
)

1173 
	`°∫˝y
(
homedú
, 
pwd
->
pw_dú
, (homedir));

1175 
	`°∫˝y
(
homedú
, 
s
, (homedir));

1176 
	`°∫˝y
(
u£∫ame
, 
pwd
->
pw_«me
, (username));

1179 
	`¢¥ötf
(
µ¨fûe
, ’∑rfûe), "%s/.möúc.%s", 
homedú
, 
u£_p‹t
);

1182 i‡(
ªÆ_uid
 !0 &&Ñól_uid !
eff_uid
) {

1183 
	`¢¥ötf
(
u£rfûe
, (u£rfûe), "%s/möicom.u£rs", 
LIBDIR
);

1184 i‡((
Â
 = 
	`f›í
(
u£rfûe
, "r")Ë!(
FILE
 *)0) {

1185 
	`fgës
(
buf
, 70, 
Â
Ë!
CNULL
 && !
u£rok
) {

1187 
buÂ
 = 
buf
;

1188 
s
 = 
	`gëw‹d
(&
buÂ
);

1190 i‡(
s
 && (!
	`°rcmp
(
pwd
->
pw_«me
, s) ||

1191 
	`°rcmp
("ALL", 
s
) == 0)) {

1192 i‡((
s
 = 
	`gëw‹d
(&
buÂ
)Ë=
CNULL
)

1193 
u£rok
 = 1;

1195 i‡(!
	`°rcmp
(
s
, 
u£_p‹t
)) {

1196 
u£rok
 = 1;

1199 } (
s
 = 
	`gëw‹d
(&
buÂ
)Ë!
CNULL
);

1202 
	`f˛o£
(
Â
);

1203 i‡(!
u£rok
) {

1204 
	`Ârötf
(
°dîr
,

1205 
	`_
("Sorry %s. YouáreÇotállowedÅo use configuration %s.\n"),

1206 
pwd
->
pw_«me
, 
u£_p‹t
);

1207 
	`Ârötf
(
°dîr
,

1208 
	`_
("Ask your sysadmÅoádd yourÇameÅo %s\n"),

1209 
u£rfûe
);

1210 
	`exô
(1);

1214 
buf
[0] = 0;

1216 
	`ªad_∑rms
();

1217 
num_hi°_löes
 = 
	`©oi
(
P_HISTSIZE
);

1218 
	`°r˝y
(
log‚ame
,
P_LOGFNAME
);

1220 
°dwö
 = 
NIL_WIN
;

1223 i‡(!
u£cﬁ‹
) {

1224 
mfcﬁ‹
 = 
tfcﬁ‹
 = 
sfcﬁ‹
 = 
WHITE
;

1225 
mbcﬁ‹
 = 
tbcﬁ‹
 = 
sbcﬁ‹
 = 
BLACK
;

1226 
°_©å
 = 
XA_REVERSE
;

1229 i‡(
dül_ây
 =
NULL
) {

1230 i‡(!
do£tup
) {

1231 (
dül_ây
 = 
	`gë_p‹t
(
P_PORT
)Ë!
NULL
 && 
	`›í_ãrm
(
doöô
) < 0)

1233 if(
dül_ây
 =
NULL
)

1234 
	`exô
(1);

1238 i‡(!
do£tup
 && 
	`›í_ãrm
(
doöô
Ë< 0Ë
	`exô
(1);

1241 
	`mc_£ãnv
("TERM", 
ãrmty≥
);

1243 i‡(
	`wö_öô
(
tfcﬁ‹
, 
tbcﬁ‹
, 
XA_NORMAL
Ë< 0Ë
	`Àave
("");

1245 i‡(
COLS
 < 40 || 
LINES
 < 10) {

1246 
	`Àave
(
	`_
("Sorry. Your screen isÅoo small.\n"));

1249 i‡(
do£tup
) {

1250 i‡(
	`c⁄fig
(1)) {

1251 
	`w˛o£
(
°dwö
, 1);

1252 
	`exô
(0);

1254 (
dül_ây
 = 
	`gë_p‹t
(
P_PORT
)Ë!
NULL
 && 
	`›í_ãrm
(
doöô
) < 0)

1256 if(
dül_ây
 =
NULL
)

1257 
	`exô
(1);

1261 
	`sig«l
(
SIGTERM
, 
h™gsig
);

1262 
	`sig«l
(
SIGHUP
, 
h™gsig
);

1263 
	`sig«l
(
SIGINT
, 
SIG_IGN
);

1264 
	`sig«l
(
SIGQUIT
, 
SIG_IGN
);

1265 
	`sig«l
(
SIGPIPE
, 
SIG_IGN
);

1267 #ifde‡
SIGTSTP


1268 
	`sig«l
(
SIGTSTP
, 
shjump
);

1269 
	`sig«l
(
SIGTTIN
, 
SIG_IGN
);

1270 
	`sig«l
(
SIGTTOU
, 
SIG_IGN
);

1272 #ifde‡
SIGTINT


1273 
	`sig«l
(
SIGTINT
, 
SIG_IGN
);

1275 #ifde‡
SIGWINCH


1276 
	`sig«l
(
SIGWINCH
, 
ch™ge_size
);

1279 #i‡
DEBUG


1280 
c
 = 1; c < 
_NSIG
; c++) {

1281 i‡(
c
 =
SIGTERM
) ;

1282 
	`sig«l
(
c
, 
sign‹e
);

1286 
	`keybﬂrd
(
KINSTALL
, 0);

1288 i‡(
	`°rcmp
(
P_BACKSPACE
, "BS") != 0)

1289 
	`keybﬂrd
(
KSETBS
, 
P_BACKSPACE
[0] == 'B' ? 8 : 127);

1290 i‡(
Æt_ovîride
)

1291 
	`keybﬂrd
(
KSETESC
, 
Æt_code
);

1292 i‡(
	`°rcmp
(
P_ESCAPE
, "^A") != 0) {

1293 
P_ESCAPE
[0]) {

1295 
c
 = 
P_ESCAPE
[1] & 31;

1298 
c
 = 27;

1301 
c
 = 128;

1304 
	`keybﬂrd
(
KSETESC
, 
c
);

1307 
°
 = 
NIL_WIN
;

1308 
us
 = 
NIL_WIN
;

1310 
	`öô_emul
(
VT100
, 1);

1312 i‡(
doöô
Ë
	`modemöô
();

1314 
	`w¥ötf
(
us
, "\n%†%s\r\n", 
	`_
("Wñcomêtÿmöicom"), 
VERSION
);

1315 
	`w¥ötf
(
us
, "\n%s: %s%s%s%s%s\r\n", 
	`_
("OPTIONS"),

1316 
CR_OPTION1
,
CR_OPTION2
,
CR_OPTION3
,
CR_OPTION4
,
CR_OPTION5
);

1317 #i‡
	`deföed
 (
__DATE__
Ë&& deföed (
__TIME__
)

1318 
	`w¥ötf
(
us
, "%†%s, %s.\r\n",
	`_
("Compûed on"), 
__DATE__
,
__TIME__
);

1320 
	`w¥ötf
(
us
, 
	`_
("\nPªs†%sZ f‹ hñ∞⁄ s≥cü»keys%c\n\n"),
	`esc_key
(),'\r');

1323 
	`dr›_¥ivs
();

1325 
	`ªaddüldú
();

1327 i‡(
s¸_«me
[0]Ë
	`runs¸ùt
 (0, scr_name, "", "");

1329 i‡(
cmd_dül
Ë
	`dül⁄e
(cmd_dial);

1332 !
quô
) {

1333 
c
 = 
	`do_ãrmöÆ
();

1334 
dúty_gŸo
:

1335 
c
 + 32 *(c >= 'A' && c <= 'Z')) {

1337 
addlf
 = !addlf;

1338 
	`vt_£t
(
addlf
, -1, 
NULL
, -1, -1, -1, -1, -1);

1339 
s
 = 
addlf
 ?

1340 
	`_
("AddÜinefeed ON") : _("AddÜinefeed OFF");

1341 
	`wîr‹
("%s", 
s
);

1343 #ifde‡
HAVE_SELECT


1345 
loˇl_echo
 = !local_echo;

1346 
	`vt_£t
(-1, -1, 
NULL
, -1, -1, 
loˇl_echo
, -1 ,-1);

1347 
s
 = 
loˇl_echo
 ?

1348 
	`_
("LocalÉcho ON") : _("LocalÉcho OFF");

1349 
	`wîr‹
("%s", 
s
);

1353 
c
 = 
	`hñp
();

1354 i‡(
c
 !'z'Ë
dúty_gŸo
;

1357 
	`wö˛r
(
us
);

1360 
	`£ndbªak
();

1362 #i‡
_HISTORY


1364 
	`s¸ﬁlback
();

1368 i‡(
P_HASDCD
[0]=='Y' && 
⁄löe
 >= 0) {

1369 
c
 = 
	`ask
(
	`_
("Youáª o∆öe. RóŒy inôülize?"), 
c1
);

1370 i‡(
c
 != 0)

1373 
	`modemöô
();

1376 
c
 = 
	`ask
(
	`_
("Lóvêwôhouàª£t?"), 
c1
);

1377 i‡(
c
 =0Ë
quô
 = 
NORESET
;

1378 #i‡
_HAVE_MACROS


1379 i‡(!
	`°rcmp
(
P_MACCHG
,"CHANGED")) {

1380 
c
 = 
	`ask
 (
	`_
("Savêma¸os?"),
c1
);

1381 i‡(
c
 == 0)

1382 i‡(
	`dodÊßve
() < 0)

1384 
c
 = 'O';

1385 
quô
 = 0;

1386 
dúty_gŸo
;

1392 
c
 = 
	`ask
(
	`_
("LóvêMöicom?"), 
c1
);

1393 i‡(
c
 == 0) {

1394 
quô
 = 
RESET
;

1395 if(
⁄löe
 >= 0)

1396 
	`do_h™g
(0);

1397 
	`modemª£t
();

1399 #i‡
_HAVE_MACROS


1400 i‡(!
	`°rcmp
(
P_MACCHG
,"CHANGED")) {

1401 
c
 = 
	`ask
 (
	`_
("Savêma¸os?"),
c1
);

1402 i‡(
c
 == 0)

1403 i‡(
	`dodÊßve
() < 0)

1405 
c
 = 'O';

1406 
quô
 = 0;

1407 
dúty_gŸo
;

1413 i‡(
ˇpÂ
 =(
FILE
 *)0 && !
doˇp
) {

1414 
s
 = 
	`öput
(
	`_
("CaptureÅo which file? "),

1415 
ˇ≤ame
);

1416 i‡(
s
 =
CNULL
 || *s == 0) ;

1417 i‡((
ˇpÂ
 = 
	`sf›í
(
s
, "a")Ë=(
FILE
 *)
NULL
) {

1418 
	`wîr‹
(
	`_
("Cannot open capture file"));

1421 
doˇp
 = 1;

1422 } i‡(
ˇpÂ
 !(
FILE
 *)0 && !
doˇp
) {

1423 
c
 = 
	`ask
(
	`_
("C≠tuª fûe"), 
c3
);

1424 i‡(
c
 == 0) {

1425 
	`f˛o£
(
ˇpÂ
);

1426 
ˇpÂ
 = (
FILE
 *)
NULL
;

1427 
doˇp
 = 0;

1429 i‡(
c
 =1Ë
doˇp
 = 1;

1430 } i‡(
ˇpÂ
 !(
FILE
 *)0 && 
doˇp
) {

1431 
c
 = 
	`ask
(
	`_
("C≠tuª fûe"), 
c2
);

1432 i‡(
c
 == 0) {

1433 
	`f˛o£
(
ˇpÂ
);

1434 
ˇpÂ
 = (
FILE
 *)
NULL
;

1435 
doˇp
 = 0;

1437 i‡(
c
 =1Ë
doˇp
 = 0;

1439 
	`vt_£t
(
addlf
, -1, 
ˇpÂ
, 
doˇp
, -1, -1, -1, -1);

1442 
	`gë_bbp
(
P_BAUDRATE
, 
P_BITS
, 
P_PARITY
, 
P_STOPB
, 0);

1443 
	`p‹t_öô
();

1444 i‡(
°
 !
NIL_WIN
Ë
	`mode_°©us
();

1445 
quô
 = 0;

1448 
	`kîmô
();

1451 
	`do_h™g
(1);

1454 
	`düldú
();

1457 
c
 = 
	`dŸîmmíu
();

1458 i‡(
c
 > 0Ë
	`öô_emul
(c, 1);

1461 
c
 = (!
us
->
wøp
);

1462 
	`vt_£t
(
addlf
, 
c
, 
ˇpÂ
, 
doˇp
, -1, -1, -1, -1);

1463 
s
 = 
c
 ? 
	`_
("Linewrap ON") : _("Linewrap OFF");

1464 
	`wîr‹
("%s", 
s
);

1467 (Ë
	`c⁄fig
(0);

1470 
	`updown
('U', 0);

1473 
	`updown
('D', 0);

1476 
	`shjump
(0);

1479 
	`runs¸ùt
(1, "", "", "");

1482 
curs‹mode
 = (curs‹modê=
NORMAL
Ë? 
APPL
 : NORMAL;

1483 
	`keybﬂrd
(
curs‹mode
 =
NORMAL
 ? 
KCURST
 : 
KCURAPP
, 0);

1484 i‡(
°
Ë
	`curs_°©us
();

1492 i‡(
quô
 !
NORESET
)

1493 
	`m_ª°‹e°©e
(
p‹tfd
);

1495 i‡(
P_LOGCONN
[0] ='Y' && 
⁄löe
 > 0)

1496 
	`do_log
("%s", 
	`_
("Quit withoutÑeset while online."));

1497 
	`m_hup˛
(
p‹tfd
, 0);

1499 i‡(
ˇpÂ
 !(
FILE
 *)0Ë
	`f˛o£
(capfp);

1500 
	`w˛o£
(
us
, 0);

1501 
	`w˛o£
(
°
, 0);

1502 
	`w˛o£
(
°dwö
, 1);

1503 
	`£t_¥ivs
();

1504 
	`keybﬂrd
(
KUNINSTALL
, 0);

1505 i‡(
lockfûe
[0]Ë
	`u∆ök
(lockfile);

1506 
	`˛o£
(
p‹tfd
);

1510 
	`chown
(
dül_ây
, (
uid_t
)
p‹tuid
, (
gid_t
)
p‹tgid
);

1511 i‡(
quô
 !
NORESET
 && 
P_CALLIN
[0])

1512 (Ë
	`Á°sy°em
(
P_CALLIN
, 
CNULL
, CNULL, CNULL);

1514 
	}
}

	@minicom.h

25 
	~"c⁄fig.h
"

26 
	~"c⁄figsym.h
"

27 
	~"wödow.h
"

28 
	~"keybﬂrd.h
"

29 
	~"vt100.h
"

30 
	~"libp‹t.h
"

32 #ifde‡
_HISTORY


33 
	#CR_OPTION1
 "Hi°‹y Buf„r, "

	)

35 
	#CR_OPTION1
 ""

	)

37 #ifde‡
_HAVE_MACROS


38 
	#CR_OPTION2
 "F-key Ma¸os, "

	)

40 
	#CR_OPTION2
 ""

	)

42 #ifde‡
_RH_FIX


43 
	#CR_OPTION3
 "RedH© fix, "

	)

45 
	#CR_OPTION3
 ""

	)

47 #ifde‡
_SEARCH_HISTORY


48 
	#CR_OPTION4
 "Sórch Hi°‹y Buf„r, "

	)

50 
	#CR_OPTION4
 ""

	)

52 #ifde‡
ENABLE_NLS


53 
	#CR_OPTION5
 "I18¿"

	)

55 
	#CR_OPTION5
 ""

	)

62 
	#MAXCOLS
 256

	)

64 
	#XA_OK_EXIST
 1

	)

65 
	#XA_OK_NOTEXIST
 2

	)

67 #i‚de‡
EXTERN


68 
	#EXTERN
 

	)

71 #ifde‡
_UWIN2P0


72 
EXTERN
 
LINES
;

73 
EXTERN
 
	gCOLS
;

76 
EXTERN
 
	g°d©å
;

78 
EXTERN
 
WIN
 *
	gus
;

79 
EXTERN
 
WIN
 *
	g°
;

81 
EXTERN
 
	gªÆ_uid
;

82 
EXTERN
 
	gªÆ_gid
;

83 
EXTERN
 
	geff_uid
;

84 
EXTERN
 
	geff_gid
;

85 
EXTERN
 
	gãrmöÆ
;

86 
EXTERN
 
time_t
 
	g⁄löe
;

87 
EXTERN
 
	glöe•d
;

88 
EXTERN
 
	gp‹tfd
;

89 
EXTERN
 
	glöes
;

90 
EXTERN
 
	gcﬁs
;

91 
EXTERN
 
	gkey∑dmode
;

92 
EXTERN
 
	gcurs‹mode
;

94 
EXTERN
 
	gdoˇp
;

95 
EXTERN
 
FILE
 *
	gˇpÂ
;

96 
EXTERN
 
	gaddlf
;

97 
EXTERN
 
	gwø∂n
;

98 
EXTERN
 
	gãmp°
;

99 
EXTERN
 
	gesˇ≥
;

101 
EXTERN
 
	glockfûe
[128];

102 
EXTERN
 
	ghomedú
[256];

103 
EXTERN
 
	glog‚ame
[
PARS_VAL_LEN
];

104 
EXTERN
 
	gu£∫ame
[16];

106 
EXTERN
 
	gbogus_dcd
;

107 
EXTERN
 
	gÆt_ovîride
;

109 
EXTERN
 
	g∑rfûe
[256];

110 
EXTERN
 
	gµ¨fûe
[256];

112 
EXTERN
 
	gs¸_«me
[33];

113 
EXTERN
 
	gs¸_u£r
[33];

114 
EXTERN
 
	gs¸_∑sswd
[33];

116 
EXTERN
 
	gãrmty≥
[32];

117 
EXTERN
 *
	gdül_ây
;

119 
EXTERN
 
	gp‹tuid
, 
	gp‹tgid
;

120 
EXTERN
 *
	gdül_«me
;

121 
EXTERN
 *
	gdül_numbî
;

122 
EXTERN
 *
	gdül_u£r
;

123 
EXTERN
 *
	gdül_∑ss
;

129 #i‡
_SEARCH_HISTORY


130 
	#MAX_SEARCH
 30

	)

135 
EXTERN
 
	gmfcﬁ‹
;

136 
EXTERN
 
	gmbcﬁ‹
;

137 
EXTERN
 
	gtfcﬁ‹
;

138 
EXTERN
 
	gtbcﬁ‹
;

139 
EXTERN
 
	gsfcﬁ‹
;

140 
EXTERN
 
	gsbcﬁ‹
;

141 
EXTERN
 
	g°_©å
;

144 
EXTERN
 
	gvt_outm≠
[256], 
	gvt_öm≠
[256];

147 
EXTERN
 
	gnum_hi°_löes
;

151 
_PROTO
(
Jcﬁ‹
, ( * ));

153 
EXTERN
 
	gsize_ch™ged
;

154 *
Vîsi⁄
;

156 #ifde‡
HAVE_SELECT


157 
EXTERN
 
	gloˇl_echo
;

161 
	gdüÀ¡
;

167 
_PROTO
(
ªad_∑rms
, ( ));

168 
_PROTO
(
wac˚ss
, ( *
s
 ));

169 
_PROTO
(
c⁄fig
, ( 
£tup
 ));

170 
_PROTO
(
gë_bbp
, ( *
ba
 , *
bi
 , *
∑
 , *
°›b
 , 
cuº_ok
 ));

171 
_PROTO
(*
ye¢o
, ( 
k
 ));

172 
_PROTO
(
dŸîmmíu
, ( ));

173 
_PROTO
(
dodÊßve
, ( ));

174 
_PROTO
(
vdodÊßve
, ( ));

175 
_PROTO
(
domacßve
, ( ));

176 
_PROTO
(
lﬂdc⁄v
, ( *));

177 
_PROTO
(
ßvec⁄v
, ( *));

180 
_PROTO
(*
pfix_home
, ( *
s
 ));

181 
_PROTO
(
do_log
, ( *
löe
, ... ));

185 
_PROTO
(
mputs
, ( *
s
 , 
how
 ));

186 
_PROTO
(
modemöô
, ( ));

187 
_PROTO
(
modemª£t
, ( ));

188 
_PROTO
(
h™gup
, ( ));

189 
_PROTO
(
£ndbªak
, ( ));

190 
_PROTO
(
dül
, ( 
düÀ¡
 *
d
 , düÀ¡ **
d2
 ));

191 
_PROTO
(
ªaddüldú
, ( ));

192 
_PROTO
(
dül⁄e
, ( *
íåy
 ));

193 
_PROTO
(
düldú
, ( ));

197 
_PROTO
(*
fûedú
, (
how_m™y
, 
dow∆ﬂdög
));

198 
_PROTO
(
öô_dú
, (
dú
));

202 
_PROTO
(
Á°exec
, ( *
cmd
 ));

203 
_PROTO
(
Á°sy°em
, ( *
cmd
 , *
ö
 , *
out
 , *
îr
 ));

204 
_PROTO
(* 
gë_p‹t
, ( * ));

208 
_PROTO
(
hñp
, ( ));

212 
_PROTO
(
check_io
, ( 
fd1
, 
fd2
, 
tmout
, *
buf
 , *
buÊí
 ));

213 
_PROTO
(
keybﬂrd
, ( 
cmd
 , 
¨g
 ));

217 
_PROTO
(
h™dÀr
, ( 
dummy
 ));

218 
_PROTO
(
£nd°r
, ( *
s
 ));

219 
_PROTO
(
maö
, ( 
¨gc
 , **
¨gv
 ));

223 
_PROTO
(*
mba£«me
, ( *
s
 ));

224 
_PROTO
(
Àave
, ( *
s
 ));

225 
_PROTO
(*
esc_key
, ( ));

226 
_PROTO
(
›í_ãrm
, ( 
doöô
 ));

227 
_PROTO
(
öô_emul
, ( 
ty≥
 , 
do_öô
 ));

228 
_PROTO
(
timî_upd©e
, ());

229 
_PROTO
(
mode_°©us
, ( ));

230 
_PROTO
(
time_°©us
, ( ));

231 
_PROTO
(
curs_°©us
, ( ));

232 
_PROTO
(
show_°©us
, ( ));

233 
_PROTO
(
s¸ùäame
, ( *
s
 ));

234 
_PROTO
(
do_ãrmöÆ
, ( ));

238 
_PROTO
(
p‹t_öô
, ( ));

244 #i‡
_SEARCH_HISTORY


245 
_PROTO
(
døwhi°_look
, (
WIN
 *
w
, 
y
, 
r
, *
look
, 
ˇ£_m©ãrs
));

246 
_PROTO
(
£¨chhi°
, (
WIN
 *
w_‹ig
, WIN *
w_hi°
, 
r
, *
°r
));

247 
_PROTO
(
föd_√xt
, (
WIN
 *
w
, WIN *
w_hi°
, 
hô_löe
, *
look
, 
ˇ£_m©ãrs
));

248 
_PROTO
(c⁄° *
upˇ£
, (*
de°
, *
§c
));

249 
_PROTO
(*
SåSå
, (*
°r1
, *
°r2
, 
ˇ£_m©ãrs
));

254 
_PROTO
(
wrôï¨s
, ( 
FILE
 *
Â
 , 
Æl
 ));

255 
_PROTO
(
wrôemacs
, ( 
FILE
 *
Â
 , 
Æl
 ));

256 
_PROTO
(
ªad∑rs
, ( 
FILE
 *
Â
 , 
öô
 ));

257 
_PROTO
(
ªadmacs
, ( 
FILE
 *
Â
 , 
öô
 ));

260 
_PROTO
(*
°πok
, ( *
s
 , *
dñim
 ));

262 #ifde‡
_SVR2


263 
_PROTO
(
dup2
, ( 
‰om
, 
to
 ));

268 
_PROTO
(
m_£thwf
, ( 
fd
 , 
⁄
 ));

269 
_PROTO
(
m_dåtoggÀ
, ( 
fd
 , 
£c
 ));

270 
_PROTO
(
m_bªak
, ( 
fd
 ));

271 
_PROTO
(
m_gëdcd
, ( 
fd
 ));

272 
_PROTO
(
m_£tdcd
, ( 
fd
 , 
wh©
 ));

273 
_PROTO
(
m_ßve°©e
, ( 
fd
 ));

274 
_PROTO
(
m_ª°‹e°©e
, ( 
fd
 ));

275 
_PROTO
(
m_noh™g
, ( 
fd
 ));

276 
_PROTO
(
m_hup˛
, ( 
fd
, 
⁄
 ));

277 
_PROTO
(
m_Êush
, ( 
fd
 ));

278 
_PROTO
(
m_gëmax•d
, ( ));

279 
_PROTO
(
m_£ç¨ms
, ( 
fd
 , *
baudr
 , *
∑r
 , *
bôs
, *
°›b
, 
hwf
, 
swf
 ));

280 
_PROTO
(
m_waô
, ( *
°
 ));

284 
_PROTO
(
gërowcﬁs
, ( *
rows
 , *
cﬁs
 ));

285 
_PROTO
(
£tcbªak
, ( 
mode
 ));

286 
_PROTO
(
íab_sig
, ( 
⁄off
 , 
öåch¨
 ));

287 
_PROTO
(
dr›_Æl_¥ivs
, ( ));

288 
_PROTO
(
dr›_¥ivs
, ( ));

289 
_PROTO
(
£t_¥ivs
, ( ));

290 
_PROTO
(
FILE
 *
sf›í
, ( *
fûe
, *
mode
 ));

293 
_PROTO
(*
°πok
, ( *
s
 , *
dñim
 ));

295 #ifde‡
_SVR2


296 
_PROTO
(
dup2
, ( 
‰om
, 
to
 ));

301 
_PROTO
(
updown
, ( 
wh©
, 
ƒ
 ));

302 
_PROTO
(
mc_£ãnv
, (*, *));

303 
_PROTO
(
kîmô
, ( ));

304 
_PROTO
(
runs¸ùt
, ( 
ask
, *
s
 , *
l
 , *
p
 ));

309 
WIN
 *
mc_ãŒ
();

310 
wîr‹
();

311 
_PROTO
(
ask
, ( *
wh©
 , *
s
 []));

312 
_PROTO
(*
öput
, ( *
s
 , *
buf
 ));

316 
_PROTO
(
wxgëch
, ( ));

320 
_PROTO
(
doma¸os
, ( ));

	@port.h

17 #ifde‡
ISC


18 
	~<sys/bsdty≥s.h
>

20 #ifde‡
HAVE_SYS_PARAM_H


21 
	~<sys/∑øm.h
>

23 
	~<sys/ty≥s.h
>

24 #ifde‡
HAVE_UNISTD_H


25 
	~<uni°d.h
>

26 
	~<°dlib.h
>

28 *
gëív
();

30 #ifde‡
HAVE_TERMCAP_H


31 
	~<ãrmˇp.h
>

33 *
tgë°r
(), *
tgŸo
();

34 
tgëít
(), 
çuts
(), 
tgënum
(), 
tgëÊag
();

36 #ifde‡
_UWIN2P0


37 
	~<time.h
>

38 
	#MAXNAMLEN
 80

	)

40 
	~<sig«l.h
>

41 
	~<f˙é.h
>

42 
	~<£tjmp.h
>

43 
	~<sys/°©.h
>

44 #ifde‡
_MINIX


45 
	~<sys/times.h
>

47 
	~<time.h
>

48 
	~<sys/time.h
>

50 
	~<°rög.h
>

51 
	~<°dio.h
>

52 
	~<pwd.h
>

53 
	~<˘y≥.h
>

54 
	~<î∫o.h
>

55 #i‡
deföed
(
_BSD43
Ë|| deföed(
_SYSV
Ë|| (deföed(
BSD
) && (BSD >= 199103))

56 
	#NOSTREAMS


	)

57 
	~<sys/fûe.h
>

59 #i‡
deföed
(
_COH42
Ë|| deföed(
_SEQUENT
)

60 
	~<sys/£À˘.h
>

64 #ifde‡
_COH3


65 
	~<ac˚ss.h
>

66 
	#W_OK
 
AWRITE


	)

67 
	#R_OK
 
AREAD


	)

71 #i‚de‡
W_OK


72 
	#W_OK
 2

	)

73 
	#R_OK
 4

	)

75 #i‚de‡
SEEK_SET


76 
	#SEEK_SET
 0

	)

77 
	#SEEK_END
 2

	)

79 #i‚de‡
_NSIG


80 #i‚de‡
NSIG


81 
	#_NSIG
 31

	)

83 
	#_NSIG
 
NSIG


	)

88 #i‚de‡
_PROTO


89 #i‡
__STDC__


90 
	#_PROTO
(
fun
, 
¨gs
Ëfu¿
	)
args

92 
	#_PROTO
(
fun
, 
¨gs
Ë
	`fun
()

	)

96 #ifde‡
_COH42


97 
	#time_t
 

	)

101 #i‡
deföed
(
__löux__
Ë|| deföed(
_COH42
Ë|| deföed(
_SCO
)

102 #ifde‡
HAVE_SELECT


103 
	#VC_MUSIC
 1

	)

108 #i‡
deföed
(
__löux__
Ë|| deföed(
_BSD43
Ë|| (deföed(
BSD
) && (BSD >= 199103))

109 
	#HAS_REUID


	)

113 #i‡
deföed
 (
_SYSV
Ë|| deföed (
_BSD43
Ë|| deföed(
_DGUX_SOURCE
)

114 #i‡!
deföed
(
_SVR2
Ë&& !deföed(
_SYSV3
Ë&& !deföed(
_COH42
)

115 
	#HAS_FCHOWN


	)

	@rcsid.h

4 
	#PKG_VER
 " $Package: " 
PACKAGE
 " $ $Vîsi⁄: " 
VERSION
 " $ "

	)

5 #i‡
deföed
(
NO_RCSID
Ë|| deföed(
löt
)

6 
	#RCSID
(
x
Ë

	)

8 #i‡
__STDC__


13 c⁄° *
rcsid
(const *);

14 
	#RCSID
(
x
) \

15 c⁄° *
	`rcsid
(c⁄° *
s
) { \

16  
	`rcsid
(
x
); }

	)

18 
	#RCSID
(
x
) \

19 *
	`rcsid
(
s
) *s; { \

20  
	`rcsid
(
x
); }

	)

	@rwconf.c

33 #ifde‡
HAVE_CONFIG_H


34 
	~<c⁄fig.h
>

37 
	~"rcsid.h
"

38 
RCSID
("$Id:Ñwconf.c,v 1.6 2000/06/02 21:33:22 walker Exp $")

40 
	~"p‹t.h
"

41 
	~"möicom.h
"

42 
	~"öé.h
"

44 
	#ADM_CHANGE
 1

	)

45 
	#USR_CHANGE
 2

	)

47 #i‡
_HAVE_MACROS


49 
	#MAX_MACS
 10

	)

50 
macs
 
	gmmacs
[] = {

51 { "", 
PUBLIC
, "pmac1" },

52 { "", 
PUBLIC
, "pmac2" },

53 { "", 
PUBLIC
, "pmac3" },

54 { "", 
PUBLIC
, "pmac4" },

55 { "", 
PUBLIC
, "pmac5" },

56 { "", 
PUBLIC
, "pmac6" },

57 { "", 
PUBLIC
, "pmac7" },

58 { "", 
PUBLIC
, "pmac8" },

59 { "", 
PUBLIC
, "pmac9" },

60 { "", 
PUBLIC
, "pmac10" },

64 { "", 0, (*)
NULL
 },

68 
∑rs
 
	gm∑rs
[] = {

71 { "YUNYYzmodem", 
PUBLIC
, "pname1" },

72 { "YUNYYymodem", 
PUBLIC
, "pname2" },

73 { "YUNYNxmodem", 
PUBLIC
, "pname3" },

74 { "NDNYYzmodem", 
PUBLIC
, "pname4" },

75 { "NDNYYymodem", 
PUBLIC
, "pname5" },

76 { "YDNYNxmodem", 
PUBLIC
, "pname6" },

77 { "YUYNNkîmô", 
PUBLIC
, "pname7" },

78 { "NDYNNkîmô", 
PUBLIC
, "pname8" },

79 { "YUNYNascii", 
PUBLIC
, "pname9" },

80 { "", 
PUBLIC
, "pname10" },

81 { "", 
PUBLIC
, "pname11" },

82 { "", 
PUBLIC
, "pname12" },

83 #ifde‡
__löux__


84 { "/u§/bö/sz -vv -b", 
PUBLIC
, "pprog1" },

85 { "/u§/bö/sb -vv", 
PUBLIC
, "pprog2" },

86 { "/u§/bö/sx -vv", 
PUBLIC
, "pprog3" },

87 { "/u§/bö/rz -vv -b -E", 
PUBLIC
, "pprog4" },

88 { "/u§/bö/rb -vv", 
PUBLIC
, "pprog5" },

89 { "/u§/bö/rx -vv", 
PUBLIC
, "pprog6" },

90 { "/u§/bö/kîmô -ò-»%»-s", 
PUBLIC
, "pprog7" },

91 { "/u§/bö/kîmô -ò-»%»-r", 
PUBLIC
, "pprog8" },

94 { "/u§/loˇl/bö/sz -vv", 
PUBLIC
, "pprog1" },

95 { "/u§/loˇl/bö/sb -vv", 
PUBLIC
, "pprog2" },

96 { "/u§/loˇl/bö/sx -vv", 
PUBLIC
, "pprog3" },

97 { "/u§/loˇl/bö/rz -vv", 
PUBLIC
, "pprog4" },

98 { "/u§/loˇl/bö/rb -vv", 
PUBLIC
, "pprog5" },

99 { "/u§/loˇl/bö/rx -vv", 
PUBLIC
, "pprog6" },

100 { "/u§/loˇl/bö/kîmô -ò-»%»-s", 
PUBLIC
, "pprog7" },

101 { "/u§/loˇl/bö/kîmô -ò-»%»-r", 
PUBLIC
, "pprog8" },

103 { "/u§/bö/ascii-x‰ -dsv", 
PUBLIC
, "pprog9" },

104 { "", 
PUBLIC
, "pprog10" },

105 { "", 
PUBLIC
, "pprog11" },

106 { "", 
PUBLIC
, "pprog12" },

108 { 
DFL_PORT
, 
PRIVATE
, "port" },

109 { 
CALLIN
, 
PRIVATE
, "callin" },

110 { 
CALLOUT
, 
PRIVATE
, "callout" },

111 { 
UUCPLOCK
, 
PRIVATE
, "lock" },

112 { 
DEF_BAUD
, 
PUBLIC
, "baudrate" },

113 { "8", 
PUBLIC
, "bits" },

114 { "N", 
PUBLIC
, "parity" },

115 { "1", 
PUBLIC
, "stopbits" },

117 { 
KERMIT
, 
PRIVATE
, "kermit" },

118 { 
N_
("Yes"), 
PRIVATE
, "kermallow" },

119 { 
N_
("No"), 
PRIVATE
, "kermreal" },

120 { "3", 
PUBLIC
, "colusage" },

122 { "runs¸ùt", 
PUBLIC
, "scriptprog" },

124 { "~^M~AT S7=45 S0=0 L1 V1 X4 &c1 E1 Q0^M", 
PUBLIC
, "minit" },

125 { "^M~ATZ^M~", 
PUBLIC
, "mreset" },

126 { "ATDT", 
PUBLIC
, "mdialpre" },

127 { "^M", 
PUBLIC
, "mdialsuf" },

128 { "ATDP", 
PUBLIC
, "mdialpre2" },

129 { "^M", 
PUBLIC
, "mdialsuf2" },

130 { "ATX1DT", 
PUBLIC
, "mdialpre3" },

131 { ";X4D^M", 
PUBLIC
, "mdialsuf3" },

132 { "CONNECT", 
PUBLIC
, "mconnect" },

133 { "NO CARRIER", 
PUBLIC
, "mnocon1" },

134 { "BUSY", 
PUBLIC
, "mnocon2" },

135 { "NO DIALTONE", 
PUBLIC
, "mnocon3" },

136 { "VOICE", 
PUBLIC
, "mnocon4" },

137 { "~~+++~~ATH^M", 
PUBLIC
, "mhangup" },

138 { "^M", 
PUBLIC
, "mdialcan" },

139 { "45", 
PUBLIC
, "mdialtime" },

140 { "2", 
PUBLIC
, "mrdelay" },

141 { "10", 
PUBLIC
, "mretries" },

142 { "1", 
PUBLIC
, "mdropdtr" },

143 { "No", 
PUBLIC
, "mautobaud" },

144 { "d", 
PUBLIC
, "showspeed" },

145 { "", 
PUBLIC
, "updir" },

146 { "", 
PUBLIC
, "downdir" },

147 { "", 
PUBLIC
, "scriptdir" },

148 { "^A", 
PUBLIC
, "escape-key" },

149 { "BS", 
PUBLIC
, "backspace" },

150 { 
N_
("íabÀd"), 
PUBLIC
, "statusline" },

151 { 
N_
("Yes"), 
PUBLIC
, "hasdcd" },

152 { 
N_
("Yes"), 
PUBLIC
, "rtscts" },

153 { 
N_
("No"), 
PUBLIC
, "xonxoff" },

154 { "D", 
PUBLIC
, "zauto" },

159 { "YELLOW", 
PUBLIC
, "mfcolor" },

160 { "BLUE", 
PUBLIC
, "mbcolor" },

161 { "WHITE", 
PUBLIC
, "tfcolor" },

162 { "BLACK", 
PUBLIC
, "tbcolor" },

163 { "WHITE", 
PUBLIC
, "sfcolor" },

164 { "RED", 
PUBLIC
, "sbcolor" },

168 { ".ma¸os", 
PUBLIC
, "macros" },

169 { "", 
PUBLIC
, "changed" },

170 { "Yes", 
PUBLIC
, "macenab" },

173 { "Yes", 
PUBLIC
, "sound" },

175 { "2000", 
PUBLIC
, "histlines" },

178 { "", 
PUBLIC
, "convf" },

179 { "Yes", 
PUBLIC
, "convcap" },

181 { "Yes", 
PUBLIC
, "fselw" },

183 { "No", 
PUBLIC
, "askdndir" },

186 #ifde‡
LOGFILE


187 { 
LOGFILE
, 
PUBLIC
, "logfname" },

189 { "/dev/nuŒ", 
PUBLIC
, "logfname" },

191 { "Yes", 
PUBLIC
, "logconn" },

192 { "Yes", 
PUBLIC
, "logxfer" },

194 { "No", 
PUBLIC
, "multiline"},

197 { "", 0, (*)
NULL
 },

200 #i‡
_HAVE_MACROS


204 
	$wrôemacs
(
Â
, 
Æl
)

205 
FILE
 *
Â
;

206 
Æl
;

208 
macs
 *
m
;

210 
m
 = 
mmacs
; m->
desc
; m++)

211 i‡((
Æl
 && (
m
->
Êags
 & 
ADM_CHANGE
))

212 || ((
m
->
Êags
 & 
PUBLIC
Ë&& (m->Êag†& 
USR_CHANGE
)))

213 
	`Ârötf
(
Â
, "%†%-16.16†%s\n", 
m
->
Êags
 &

214 
PUBLIC
 ? "pu" : "¥", 
m
->
desc
, m->
vÆue
);

216 
	}
}

222 
	$wrôï¨s
(
Â
, 
Æl
)

223 
FILE
 *
Â
;

224 
Æl
;

226 
∑rs
 *
p
;

228 i‡(
Æl
)

229 
	`Ârötf
(
Â
, 
	`_
("# Machine-generated file - use \"minicom -s\"Åo changeÖarameters.\n"));

231 
	`Ârötf
(
Â
, 
	`_
("# Machine-generated file - use setup menu in minicomÅo changeÖarameters.\n"));

233 
p
 = 
m∑rs
;Ö->
desc
;Ö++)

234 i‡((
Æl
 && (
p
->
Êags
 & 
ADM_CHANGE
)) ||

235 ((
p
->
Êags
 & 
PUBLIC
Ë&& (p->Êag†& 
USR_CHANGE
)))

236 
	`Ârötf
(
Â
, "%s %-16.16s %s\n",

237 
p
->
Êags
 & 
PUBLIC
 ? "pu" : "¥",Ö->
desc
,Ö->
vÆue
);

239 
	}
}

244 
	$ªad∑rs
(
Â
, 
öô
)

245 
FILE
 *
Â
;

246 
öô
;

248 
∑rs
 *
p
;

249 
löe
[80];

250 *
s
;

251 
public
;

252 
do¶ìp
 = 0;

254 i‡(
öô
Ë
	`°r˝y
(
P_SCRIPTPROG
, "runscript");

256 
	`fgës
(
löe
, 80, 
Â
) != (*)0) {

258 
s
 = 
	`°πok
(
löe
, "\n\t ");

259 i‡(
s
 =
NULL
) ;

262 
public
 = -1;

263 i‡(
	`°rcmp
(
s
, "pr") == 0) {

264 
public
 = 0;

265 
s
 = 
	`°πok
((*)
NULL
, "\n\t ");

267 i‡(
	`°rcmp
(
löe
, "pu") == 0) {

268 
public
 = 1;

269 
s
 = 
	`°πok
((*)
NULL
, "\n\t ");

271 i‡(
s
 =
NULL
 || 
public
 < 0) ;

274 i‡(!
öô
 && 
public
 == 0) ;

276 
p
 = 
m∑rs
;Ö->
desc
 != (*)0;Ö++) {

277 i‡(
	`°rcmp
(
p
->
desc
, 
s
) == 0) {

280 i‡(((
p
->
Êags
 & 
PRIVATE
Ë&& 
public
) ||

281 ((
p
->
Êags
 & 
PUBLIC
Ë&& !
public
)) {

282 
	`Ârötf
(
°dîr
,

283 
	`_
("** Parameter %s is %s, but is marked %s in %s config file\n"),

284 
s
,

285 (
p
->
Êags
 & 
PRIVATE
Ë? 
	`_
("private") : _("public"),

286 
public
 ? 
	`_
("public") : _("private"),

287 
öô
 ? 
	`_
("global") : _("personal"));

288 
do¶ìp
 = 1;

291 i‡((
p
->
Êags
 & 
PRIVATE
Ë&& 
public
 == 1) {

292 
	`Ârötf
(
°dîr
,

293 
	`_
("== AttemptÅo changeÖrivateÖarameter %s - denied.\n"),

294 
p
->
desc
);

295 
do¶ìp
 = 1;

300 i‡((
s
 = 
	`°πok
((*)
NULL
, "\n")) == (*)0)

301 
s
 = "";

302 *
s
 && (*s == '\t' || *s == ' ')) s++;

307 i‡(!
	`°∫cmp
(
p
->
desc
,"≤ame",(
size_t
) 5)) {

308 i‡(
s
[4] != 'N' && s[4] != 'Y') {

309 
	`memmove
 (
s
+5, s+4, 
	`°æí
(s+4));

310 *(
s
+4)='N';

315 i‡(
	`°rcmp
(
p
->
vÆue
, 
s
) == 0) {

316 
p
->
Êags
 = 0;

318 i‡(
öô
)

319 
p
->
Êags
 |
ADM_CHANGE
;

321 
p
->
Êags
 |
USR_CHANGE
;

322 
	`°r˝y
(
p
->
vÆue
, 
s
);

326 
p
->
Êags
 |(
public
 ? 
PUBLIC
 : 
PRIVATE
);

327 
p
->
Êags
 &~(
public
 ? 
PRIVATE
 : 
PUBLIC
);

334 i‡(
	`°rcmp
(
P_BAUDRATE
, "Cuº"Ë=0Ë
	`°r˝y
(P_BAUDRATE, "38400");

336 i‡(
do¶ìp
Ë
	`¶ìp
(3);

339 
	}
}

341 #i‡
_HAVE_MACROS


345 
	$ªadmacs
(
Â
, 
öô
)

346 
FILE
 *
Â
;

347 
öô
;

349 
macs
 *
m
;

350 
löe
[
MAC_LEN
];

351 
public
, 
max_macs
=
MAX_MACS
+1;

352 *
s
;

354 
	`fgës
(
löe
, 
MAC_LEN
, 
Â
Ë!(*)0 && 
max_macs
--) {

355 
s
 = 
	`°πok
(
löe
, "\n\t ");

357 
public
 = 0;

358 i‡(
	`°rcmp
(
s
, "pr") == 0) {

359 
public
 = 0;

360 
s
 = 
	`°πok
((*)
NULL
, "\n\t ");

362 i‡(
	`°rcmp
(
löe
, "pu") == 0) {

363 
public
 = 1;

364 
s
 = 
	`°πok
((*)
NULL
, "\n\t ");

367 i‡(!
öô
 && 
public
 == 0) ;

369 
m
 = 
mmacs
; m->
desc
 != (*)0; m++) {

370 i‡(
	`°rcmp
(
m
->
desc
, 
s
) == 0) {

373 i‡((
s
 = 
	`°πok
((*)
NULL
, "\n")) == (*)0)

374 
s
 = "";

375 *
s
 && (*s == '\t' || *s == ' ')) s++;

378 i‡(
	`°rcmp
(
m
->
vÆue
, 
s
) == 0) {

379 
m
->
Êags
 = 0;

381 i‡(
öô
)

382 
m
->
Êags
 |
ADM_CHANGE
;

384 
m
->
Êags
 |
USR_CHANGE
;

385 
	`°r˝y
(
m
->
vÆue
, 
s
);

389 
m
->
Êags
 |(
public
 ? 
PUBLIC
 : 
PRIVATE
);

396 
	}
}

	@script.c

24 #ifde‡
HAVE_CONFIG_H


25 
	~<c⁄fig.h
>

28 
	~"rcsid.h
"

29 
RCSID
(
PKG_VER
 "$Id: script.c,v 1.4 2000/09/19 18:04:51 walker Exp $")

31 
	~"p‹t.h
"

32 
	~"möicom.h
"

33 
	~"öé.h
"

35 
	#OK
 0

	)

36 
	#ERR
 -1

	)

37 
	#RETURN
 1

	)

38 
	#BREAK
 2

	)

40 #i‚de‡
löt


41 *
	gVîsi⁄
 = "@(#)runscript 1.23 31-May-1999 JL";

44 
	slöe
 {

45 *
	mlöe
;

46 
	mœbñcou¡
;

47 
	mlöío
;

48 
löe
 *
	m√xt
;

51 
	sv¨
 {

52 *
	m«me
;

53 
	mvÆue
;

54 
v¨
 *
	m√xt
;

57 
	#LNULL
 ((
löe
 *)0)

	)

58 
	#VNULL
 ((
v¨
 *)0)

	)

59 #i‚de‡
CNULL


60 
	#CNULL
 ((*)0)

	)

67 
	sív
 {

68 
löe
 *
	mlöes
;

69 
v¨
 *
	mv¨s
;

70 *
	ms¸ùäame
;

71 
	mvîbo£
;

72 
jmp_buf
 
	mebuf
;

73 
	mex°©
;

76 
ív
 *
	gcuªnv
;

77 
	ggtimeout
 = 120;

78 
	gëimeout
 = 0;

79 
jmp_buf
 
	gejmp
;

80 
	göex≥˘
 = 0;

81 *
	g√wlöe
;

82 *
	gs_logö
 = "name";

83 *
	gs_∑ss
 = "password";

84 
löe
 *
	gthi¶öe
;

85 
	gœ°°©us
 = 0;

86 
	ghomedú
[256];

87 
	glog‚ame
[
PARS_VAL_LEN
];

89 
	göbuf
[65];

92 
s_exec
();

93 
execs¸ùt
();

99 
	$s_îr‹
(
fmt
, 
a1
, 
a2
, 
a3
, 
a4
)

100 *
fmt
;

101 *
a1
, *
a2
, *
a3
, *
a4
;

103 
	`Ârötf
(
°dîr
, 
fmt
, 
a1
, 
a2
, 
a3
, 
a4
);

104 
	}
}

110 
	$öô_ív
()

112 **
ívú⁄
;

113 **
e
;

115 
e
 = 
ívú⁄
; *e;É++) {

116 i‡(!
	`°∫cmp
(*
e
, "LOGIN=", 6)) {

117 
s_logö
 = (*
e
) + 6;

118 *
e
 = "LOGIN=";

120 i‡(!
	`°∫cmp
(*
e
, "PASS=", 5)) {

121 
s_∑ss
 = (*
e
) + 5;

122 *
e
 = "PASS=";

125 
	}
}

131 *
	$mygëív
(
ív
)

132 *
ív
;

134 i‡(!
	`°rcmp
(
ív
, "LOGIN")Ë(
s_logö
);

135 i‡(!
	`°rcmp
(
ív
, "PASS")Ë(
s_∑ss
);

136 (
	`gëív
(
ív
));

137 
	}
}

142 
	$sy¡axîr
(
s
)

143 *
s
;

145 
	`s_îr‹
(
	`_
("script \"%s\": syntaxÉrror inÜine %d %s%s\n"),

146 
cuªnv
->
s¸ùäame
, 
thi¶öe
->
löío
, 
s
, "\r");

147 
	`exô
(1);

148 
	}
}

153 
	$skù•a˚
(
s
)

154 **
s
;

156 **
s
 == ' ' || **s == '\t') (*s)++;

157 
	}
}

163 
	$my˛ock
(
dummy
)

164 
dummy
;

166 ()
dummy
;

167 
	`sig«l
(
SIGALRM
, 
my˛ock
);

168 
	`Æ¨m
(1);

170 i‡(--
gtimeout
 == 0) {

171 
	`s_îr‹
(
	`_
("script \"%s\": globalÅimeout%s\n"),

172 
cuªnv
->
s¸ùäame
,"\r");

173 
	`exô
(1);

175 i‡(
öex≥˘
 && 
ëimeout
 && --ëimeouà=0Ë
	`sigl⁄gjmp
(
ejmp
, 1);

176 
	}
}

182 *
	$gëw‹d
(
s
)

183 **
s
;

185 
buf
[81];

186 
Àn
, 
f
;

187 
idx
 = 0;

188 *
t
 = *
s
;

189 
ßwesc
 = 0;

190 
ßwq
 = 0;

191 *
ív
, 
ívbuf
[32];

193 i‡(**
s
 =0Ë(
CNULL
);

195 
Àn
 = 0;Üen < 81;Üen++) {

196 i‡(
ßwesc
 && 
t
[
Àn
]) {

197 
ßwesc
 = 0;

198 i‡(
t
[
Àn
] <= '7' &&Å[len] >= '0') {

199 
buf
[
idx
] = 0;

200 
f
 = 0; f < 4 && 
Àn
 < 81 && 
t
[len] <= '7' &&

201 
t
[
Àn
] >'0'; 
f
++)

202 
buf
[
idx
] = 8*buf[idx] + 
t
[
Àn
++] - '0';

203 i‡(
buf
[
idx
] == 0) buf[idx] = '@';

204 
idx
++; 
Àn
--;

207 
t
[
Àn
]) {

209 
buf
[
idx
++] = '\r';

212 
buf
[
idx
++] = '\n';

215 
buf
[
idx
++] = '\b';

217 #i‚de‡
_HPUX_SOURCE


219 
buf
[
idx
++] = '\a';

223 
buf
[
idx
++] = '\f';

226 
buf
[
idx
++] = 255;

229 
buf
[
idx
++] = 
t
[
Àn
];

232 
ßwesc
 = 0;

235 i‡(
t
[
Àn
] == '\\') {

236 
ßwesc
 = 1;

239 i‡(
t
[
Àn
] == '"') {

240 i‡(
ßwq
 == 1) {

241 
ßwq
 = 0;

242 
Àn
++;

245 
ßwq
 = 1;

248 i‡(
t
[
Àn
] == '$' &&Å[len + 1] == '(') {

249 
f
 = 
Àn
; 
t
[f] &&Å[f] != ')'; f++)

251 i‡(
t
[
f
] == ')') {

252 
	`°∫˝y
(
ívbuf
, &
t
[
Àn
 + 2], 
f
 -Üen - 2);

253 
ívbuf
[
f
 - 
Àn
 - 2] = 0;

254 
Àn
 = 
f
;

255 
ív
 = 
	`mygëív
(
ívbuf
);

256 i‡(
ív
 =
CNULL
)Énv = "";

257 *
ív
Ë
buf
[
idx
++] = *env++;

261 if((!
ßwq
 && (
t
[
Àn
] == ' ' ||Å[len] == '\t')) ||Å[len] == 0) ;

262 
buf
[
idx
++] = 
t
[
Àn
];

264 
buf
[
idx
] = 0;

265 (*
s
Ë+
Àn
;

266 
	`skù•a˚
(
s
);

267 i‡(
ßwesc
 || 
ßwq
Ë
	`sy¡axîr
(
	`_
("(word contains ESC or quote)"));

268 (
buf
);

269 
	}
}

274 *
	$°rßve
(
s
)

275 *
s
;

277 *
t
;

278 
Àn
;

280 
Àn
 = 
	`°æí
(
s
);

281 i‡(
Àn
 && 
s
[len - 1] == '\n') s[--len] = 0;

282 i‡((
t
 = (*)
	`mÆloc
(
Àn
 + 1)) == (*)0) (t);

283 
	`°r˝y
(
t
, 
s
);

284 (
t
);

285 
	}
}

290 
	$‰ìmem
()

292 
löe
 *
l
, *
√xé
;

293 
v¨
 *
v
, *
√xtv
;

295 
l
 = 
cuªnv
->
löes
;Ü;Ü = 
√xé
) {

296 
√xé
 = 
l
->
√xt
;

297 
	`‰ì
((*)
l
->
löe
);

298 
	`‰ì
((*)
l
);

300 
v
 = 
cuªnv
->
v¨s
; v; v = 
√xtv
) {

301 
√xtv
 = 
v
->
√xt
;

302 
	`‰ì
(
v
->
«me
);

303 
	`‰ì
((*)
v
);

305 
	}
}

310 
	$ªads¸ùt
(
s
)

311 *
s
;

313 
FILE
 *
Â
;

314 
löe
 *
é
, *
¥ev
 = 
LNULL
;

315 *
t
;

316 
buf
[81];

317 
no
 = 0;

319 i‡((
Â
 = 
	`f›í
(
s
, "r")Ë=(
FILE
 *)0) {

320 
	`s_îr‹
(
	`_
("runs¸ùt: couldn'à›í %s%s\n"), 
s
, "\r");

321 
	`exô
(1);

325 (
t
 = 
	`fgës
(
buf
, 80, 
Â
)Ë!
CNULL
) {

326 
no
++;

327 
	`skù•a˚
(&
t
);

328 i‡(*
t
 == '\n') ;

329 i‡–((
é
 = (
löe
 *)
	`mÆloc
( (löe))Ë=
LNULL
) ||

330 ((
é
->
löe
 = 
	`°rßve
(
t
)Ë=
CNULL
)) {

331 
	`s_îr‹
(
	`_
("s¸ùà%s: ouào‡mem‹y%s\n"), 
s
, "\r");

332 
	`exô
(1);

334 i‡(
¥ev
)

335 
¥ev
->
√xt
 = 
é
;

337 
cuªnv
->
löes
 = 
é
;

338 
é
->
√xt
 = (
löe
 *)0;

339 
é
->
œbñcou¡
 = 0;

340 
é
->
löío
 = 
no
;

341 
¥ev
 = 
é
;

344 
	}
}

347 
	$ªadch¨
()

349 
c
;

350 
n
;

352 (
n
 = 
	`ªad
(0, &
c
, 1)) != 1)

353 i‡(
î∫o
 !
EINTR
) ;

355 i‡(
n
 <= 0) ;

358 #ifde‡
_SYSV


359 
	`mem˝y
(
öbuf
, inbuf + 1, 63);

361 #ifde‡
_BSD43


362 
	`bc›y
(
öbuf
 + 1, inbuf, 63);

365 
	`memmove
(
öbuf
, inbuf + 1, 63);

368 i‡(
cuªnv
->
vîbo£
Ë
	`Âutc
(
c
, 
°dîr
);

369 
öbuf
[63] = 
c
;

370 
	}
}

373 
	$expfound
(
w‹d
)

374 *
w‹d
;

376 
Àn
;

378 
Àn
 = 
	`°æí
(
w‹d
);

379 i‡(
Àn
 > 64)Üen = 64;

381 (!
	`°rcmp
(
öbuf
 + 64 - 
Àn
, 
w‹d
));

382 
	}
}

387 
	$ouçut
(
ãxt
, 
Â
)

388 *
ãxt
;

389 
FILE
 *
Â
;

391 *
w
;

392 
fú°
 = 1;

393 
d⁄l
 = 1;

395 (
w
 = (*)
	`gëw‹d
(&
ãxt
)) != (*)0) {

396 i‡(!
fú°
Ë
	`Âutc
(' ', 
Â
);

397 
fú°
 = 0;

398 ; *
w
; w++) {

399 i‡(*
w
 == 255) {

400 
d⁄l
 = 0;

403 i‡(*
w
 == '\n')

404 
	`Âuts
(
√wlöe
, 
Â
);

406 
	`Âutc
(*
w
, 
Â
);

409 i‡(
d⁄l
Ë
	`Âuts
(
√wlöe
, 
Â
);

410 
	`fÊush
(
Â
);

411 (
OK
);

412 
	}
}

418 
v¨
 *
	$gëv¨
(
«me
, 
¸
)

419 *
«me
;

420 
¸
;

422 
v¨
 *
v
, *
íd
 = 
VNULL
;

424 
v
 = 
cuªnv
->
v¨s
; v; v = v->
√xt
) {

425 
íd
 = 
v
;

426 i‡(!
	`°rcmp
(
v
->
«me
,Çame)) (v);

428 i‡(!
¸
) {

429 
	`s_îr‹
(
	`_
("script \"%s\"Üine %d: unknown variable \"%s\"%s\n"),

430 
cuªnv
->
s¸ùäame
, 
thi¶öe
->
löío
, 
«me
, "\r");

431 
	`exô
(1);

433 i‡((
v
 = (
v¨
 *)
	`mÆloc
((v¨))Ë=
VNULL
 ||

434 (
v
->
«me
 = 
	`°rßve
“ame)Ë=
CNULL
) {

435 
	`s_îr‹
(
	`_
("script \"%s\": out of memory%s\n"),

436 
cuªnv
->
s¸ùäame
, "\r");

437 
	`exô
(1);

439 i‡(
íd
)

440 
íd
->
√xt
 = 
v
;

442 
cuªnv
->
v¨s
 = 
v
;

443 
v
->
√xt
 = 
VNULL
;

444 
v
->
vÆue
 = 0;

445 (
v
);

446 
	}
}

451 
	$gënum
(
ãxt
)

452 *
ãxt
;

454 
vÆ
;

456 i‡(!
	`°rcmp
(
ãxt
, "$?")Ë(
œ°°©us
);

457 i‡((
vÆ
 = 
	`©oi
(
ãxt
)) != 0 || *text == '0') (val);

458 (
	`gëv¨
(
ãxt
, 0)->
vÆue
);

459 
	}
}

465 
löe
 **
	$buûdex≥˘
()

467 
löe
 *
£q
[17];

468 
f
;

469 *
w
, *
t
;

471 
f
 = 0; f < 16; f++) {

472 i‡(
thi¶öe
 =
LNULL
) {

473 
	`s_îr‹
(
	`_
("script \"%s\": unexpectedÉnd of file%s\n"),

474 
cuªnv
->
s¸ùäame
, "\r");

475 
	`exô
(1);

477 
t
 = 
thi¶öe
->
löe
;

478 
w
 = 
	`gëw‹d
(&
t
);

479 i‡(!
	`°rcmp
(
w
, "}")) {

480 i‡(*
t
Ë
	`sy¡axîr
(
	`_
("(garbageáfter })"));

481 
£q
[
f
] = 
NULL
;

482 (
£q
);

484 
£q
[
f
] = 
thi¶öe
;

485 
thi¶öe
 =Åhi¶öe->
√xt
;

487 i‡(
f
 =16Ë
	`sy¡axîr
(
	`_
("(too manyárguments)"));

488 (
£q
);

489 
	}
}

494 
	$ex≥˘
(
ãxt
)

495 *
ãxt
;

497 *
s
, *
w
;

498 
löe
 **
£q
;

499 
löe
 
⁄ñöe
;

500 
löe
 *
dÊ£q
[2];

501 *
tﬂ˘
 = "exit 1";

502 
found
 = 0, 
f
, 
vÆ
, 
c
;

503 *
a˘i⁄
 = 
CNULL
;

505 i‡(
öex≥˘
) {

506 
	`s_îr‹
(
	`_
("script \"%s\"Üine %d:ÇestedÉxpect%s\n"),

507 
cuªnv
->
s¸ùäame
, 
thi¶öe
->
löío
, "\r");

508 
	`exô
(1);

510 
ëimeout
 = 120;

511 
öex≥˘
 = 1;

513 
s
 = 
	`gëw‹d
(&
ãxt
);

514 i‡(!
	`°rcmp
(
s
, "{")) {

515 i‡(*
ãxt
Ë
	`sy¡axîr
(
	`_
("(garbageáfter {)"));

516 
thi¶öe
 =Åhi¶öe->
√xt
;

517 
£q
 = 
	`buûdex≥˘
();

519 
dÊ£q
[1] = 
LNULL
;

520 
dÊ£q
[0] = &
⁄ñöe
;

521 
⁄ñöe
.
löe
 = 
ãxt
;

522 
⁄ñöe
.
√xt
 = 
LNULL
;

523 
£q
 = 
dÊ£q
;

526 
f
 = 0; 
£q
[f]; f++) {

527 i‡(!
	`°∫cmp
(
£q
[
f
]->
löe
, "timeout", 7)) {

528 
c
 = 
£q
[
f
]->
löe
[7];

529 i‡(
c
 == 0 || (c != ' ' && c != '\t')) ;

530 
s
 = 
£q
[
f
]->
löe
 + 7;

531 
£q
[
f
] = 
LNULL
;

532 
	`skù•a˚
(&
s
);

533 
w
 = 
	`gëw‹d
(&
s
);

534 i‡(
w
 =
CNULL
Ë
	`sy¡axîr
(
	`_
("(argumentÉxpected)"));

535 
vÆ
 = 
	`gënum
(
w
);

536 i‡(
vÆ
 =0Ë
	`sy¡axîr
(
	`_
("(invalidárgument)"));

537 
ëimeout
 = 
vÆ
;

538 
	`skù•a˚
(&
s
);

539 i‡(*
s
 !0Ë
tﬂ˘
 = s;

543 i‡(
	`sig£tjmp
(
ejmp
,1) != 0) {

544 
f
 = 
	`s_exec
(
tﬂ˘
);

545 
öex≥˘
 = 0;

546 (
f
);

550 
c
 = 
OK
;

551 !
found
) {

552 
a˘i⁄
 = 
CNULL
;

553 
	`ªadch¨
();

554 
f
 = 0; 
£q
[f]; f++) {

555 
s
 = 
£q
[
f
]->
löe
;

556 
w
 = 
	`gëw‹d
(&
s
);

557 i‡(
	`expfound
(
w
)) {

558 
a˘i⁄
 = 
s
;

559 
found
 = 1;

563 i‡(
a˘i⁄
 !
CNULL
 && *action) {

564 
found
 = 0;

566 i‡((
c
 = 
	`s_exec
(
a˘i⁄
)Ë!
OK
Ë
found
 = 1;

569 
öex≥˘
 = 0;

570 
ëimeout
 = 0;

571 (
c
);

572 
	}
}

577 
	$shñl
(
ãxt
)

578 *
ãxt
;

580 
œ°°©us
 = 
	`sy°em
(
ãxt
);

581 (
OK
);

582 
	}
}

587 
	$do£nd
(
ãxt
)

588 *
ãxt
;

590 #ifde‡
HAVE_USLEEP


592 
	`u¶ìp
(200000);

596 
	`m_Êush
(0);

597 
	`mem£t
(
öbuf
, 0, (inbuf));

599 
√wlöe
 = "\r";

600 (
	`ouçut
(
ãxt
, 
°dout
));

601 
	}
}

606 
	$d€xô
(
ãxt
)

607 *
ãxt
;

609 *
w
;

610 
ªt
 = 0;

612 
w
 = 
	`gëw‹d
(&
ãxt
);

613 i‡(
w
 !
CNULL
Ë
ªt
 = 
	`gënum
(w);

614 
cuªnv
->
ex°©
 = 
ªt
;

615 
	`l⁄gjmp
(
cuªnv
->
ebuf
, 1);

617 
	}
}

622 
	$dogŸo
(
ãxt
)

623 *
ãxt
;

625 *
w
;

626 
löe
 *
l
;

627 
buf
[32];

628 
Àn
;

630 
w
 = 
	`gëw‹d
(&
ãxt
);

631 i‡(
w
 =
CNULL
 || *
ãxt
Ë
	`sy¡axîr
(
	`_
("(in goto/gosubÜabel)"));

632 
	`¢¥ötf
(
buf
, (buf), "%s:", 
w
);

633 
Àn
 = 
	`°æí
(
buf
);

634 
l
 = 
cuªnv
->
löes
;Ü;Ü =Ü->
√xt
Ëi‡(!
	`°∫cmp
÷->
löe
, 
buf
, 
Àn
)) ;

635 i‡(
l
 =
LNULL
) {

636 
	`s_îr‹
(
	`_
("script \"%s\"Üine %d:Üabel \"%s\"Çot found%s\n"),

637 
cuªnv
->
s¸ùäame
, 
thi¶öe
->
löío
, 
w
, "\r");

638 
	`exô
(1);

640 
thi¶öe
 = 
l
;

642 (
BREAK
);

643 
	}
}

648 
	$dogosub
(
ãxt
)

649 *
ãxt
;

651 
löe
 *
ﬁdlöe
;

652 
ªt
 = 
OK
;

654 
ﬁdlöe
 = 
thi¶öe
;

655 
	`dogŸo
(
ãxt
);

657 
ªt
 !
ERR
) {

658 i‡((
thi¶öe
 =Åhi¶öe->
√xt
Ë=
LNULL
) {

659 
	`s_îr‹
(
	`_
("script \"%s\":ÇoÑeturn from gosub%s\n"),

660 
cuªnv
->
s¸ùäame
, "\r");

661 
	`exô
(1);

663 
ªt
 = 
	`s_exec
(
thi¶öe
->
löe
);

664 i‡(
ªt
 =
RETURN
) {

665 
ªt
 = 
OK
;

666 
thi¶öe
 = 
ﬁdlöe
;

670 (
ªt
);

671 
	}
}

677 
	$d‹ëu∫
(
ãxt
)

678 *
ãxt
;

680 ()
ãxt
;

681 (
RETURN
);

682 
	}
}

687 
	$¥öt
(
ãxt
)

688 *
ãxt
;

690 
√wlöe
 = "\r\n";

692 (
	`ouçut
(
ãxt
, 
°dîr
));

693 
	}
}

698 
	$do£t
(
ãxt
)

699 *
ãxt
;

701 *
w
;

702 
v¨
 *
v
;

704 
w
 = 
	`gëw‹d
(&
ãxt
);

705 i‡(
w
 =
CNULL
Ë
	`sy¡axîr
(
	`_
("(missing varÇame)"));

706 
v
 = 
	`gëv¨
(
w
, 1);

707 i‡(*
ãxt
Ë
v
->
vÆue
 = 
	`gënum
(
	`gëw‹d
(&text));

708 (
OK
);

709 
	}
}

714 
	$dodec
(
ãxt
)

715 *
ãxt
;

717 *
w
;

718 
v¨
 *
v
;

720 
w
 = 
	`gëw‹d
(&
ãxt
);

721 i‡(
w
 =
CNULL
Ë
	`sy¡axîr
(
	`_
("(expected variable)"));

722 
v
 = 
	`gëv¨
(
w
, 0);

723 
v
->
vÆue
--;

724 (
OK
);

725 
	}
}

730 
	$doöc
(
ãxt
)

731 *
ãxt
;

733 *
w
;

734 
v¨
 *
v
;

736 
w
 = 
	`gëw‹d
(&
ãxt
);

737 i‡(
w
 =
CNULL
Ë
	`sy¡axîr
(
	`_
("(expected variable)"));

738 
v
 = 
	`gëv¨
(
w
, 0);

739 
v
->
vÆue
++;

740 (
OK
);

741 
	}
}

746 
	$doif
(
ãxt
)

747 *
ãxt
;

749 *
w
;

750 
n1
;

751 
n2
;

752 
›
;

754 i‡((
w
 = 
	`gëw‹d
(&
ãxt
)Ë=
CNULL
Ë
	`sy¡axîr
("(if)");

755 
n1
 = 
	`gënum
(
w
);

756 i‡((
w
 = 
	`gëw‹d
(&
ãxt
)Ë=
CNULL
Ë
	`sy¡axîr
("(if)");

757 i‡(
	`°rcmp
(
w
, "!=") == 0)

758 
›
 = '!';

760 i‡(*
w
 =0 || w[1] !0Ë
	`sy¡axîr
("(if)");

761 
›
 = *
w
;

763 i‡((
w
 = 
	`gëw‹d
(&
ãxt
)Ë=
CNULL
Ë
	`sy¡axîr
("(if)");

764 
n2
 = 
	`gënum
(
w
);

765 i‡(!*
ãxt
Ë
	`sy¡axîr
(
	`_
("(expected commandáfter if)"));

767 i‡(
›
 == '=') {

768 i‡(
n1
 !
n2
Ë(
OK
);

769 } i‡(
›
 == '!') {

770 i‡(
n1
 =
n2
Ë(
OK
);

771 } i‡(
›
 == '>') {

772 i‡(
n1
 <
n2
Ë(
OK
);

773 } i‡(
›
 == '<') {

774 i‡(
n1
 >
n2
Ë(
OK
);

776 
	`sy¡axîr
(
	`_
("(unknown operator)"));

778 (
	`s_exec
(
ãxt
));

779 
	}
}

784 
	$dŸimeout
(
ãxt
)

785 *
ãxt
;

787 *
w
;

788 
vÆ
;

790 
w
 = 
	`gëw‹d
(&
ãxt
);

791 if(
w
 =
CNULL
Ë
	`sy¡axîr
(
	`_
("(argumentÉxpected)"));

792 i‡((
vÆ
 = 
	`gënum
(
w
)Ë=0Ë
	`sy¡axîr
(
	`_
("(invalidárgument)"));

793 
gtimeout
 = 
vÆ
;

794 (
OK
);

795 
	}
}

800 
	$dovîbo£
(
ãxt
)

801 *
ãxt
;

803 *
w
;

805 
cuªnv
->
vîbo£
 = 1;

807 i‡((
w
 = 
	`gëw‹d
(&
ãxt
)Ë!
CNULL
) {

808 i‡(!
	`°rcmp
(
w
, "⁄")Ë(
OK
);

809 i‡(!
	`°rcmp
(
w
, "off")) {

810 
cuªnv
->
vîbo£
 = 0;

811 (
OK
);

814 
	`sy¡axîr
(
	`_
("(unexpectedárgument)"));

815 (
ERR
);

816 
	}
}

821 
	$do¶ìp
(
ãxt
)

822 *
ãxt
;

824 
foo
, 
tm
;

826 
tm
 = 
	`gënum
(
ãxt
);

828 
foo
 = 
gtimeout
 - 
tm
;

831 
gtimeout
 !
foo
Ë
	`∑u£
();

832 (
OK
);

833 
	}
}

838 
	$dobªak
()

840 i‡(!
öex≥˘
) {

841 
	`s_îr‹
(
	`_
("script \"%s\"Üine %d: break outside ofÉxpect%s\n"),

842 
cuªnv
->
s¸ùäame
, 
thi¶öe
->
löío
, "\r");

843 
	`exô
(1);

845 (
BREAK
);

846 
	}
}

851 
	$doˇŒ
(
ãxt
)

852 *
ãxt
;

854 
löe
 *
ﬁdlöe
;

855 
ív
 *
ﬁdív
;

856 
î
;

858 i‡(*
ãxt
 =0Ë
	`sy¡axîr
(
	`_
("(argumentÉxpected)"));

860 i‡(
öex≥˘
) {

861 
	`s_îr‹
(
	`_
("script \"%s\"Üine %d: call insideÉxpect%s\n"),

862 
cuªnv
->
s¸ùäame
, "\r");

863 
	`exô
(1);

866 
ﬁdlöe
 = 
thi¶öe
;

867 
ﬁdív
 = 
cuªnv
;

868 i‡((
î
 = 
	`execs¸ùt
(
ãxt
)Ë!0Ë
	`exô
(er);

870 
thi¶öe
 = 
ﬁdlöe
;

871 
cuªnv
 = 
ﬁdív
;

873 
	}
}

877 
	skw
 {

878 *
	mcomm™d
;

879 (*
	m‚
)();

880 } 
	gkeyw‹ds
[] = {

881 { "ex≥˘", 
ex≥˘
 },

882 { "£nd", 
do£nd
 },

883 { "!", 
shñl
 },

884 { "gŸo", 
dogŸo
 },

885 { "gosub", 
dogosub
 },

886 { "ªtu∫", 
d‹ëu∫
 },

887 { "exô", 
d€xô
 },

888 { "¥öt", 
¥öt
 },

889 { "£t", 
do£t
 },

890 { "öc", 
doöc
 },

891 { "dec", 
dodec
 },

892 { "if", 
doif
 },

893 { "timeout", 
dŸimeout
 },

894 { "vîbo£", 
dovîbo£
 },

895 { "¶ìp", 
do¶ìp
 },

896 { "bªak", 
dobªak
 },

897 { "ˇŒ", 
doˇŒ
 },

898 { "log", ((*)())
do_log
 },

905 
	$s_exec
(
ãxt
)

906 *
ãxt
;

908 *
w
;

909 
kw
 *
k
;

911 
w
 = 
	`gëw‹d
(&
ãxt
);

914 i‡(
w
 =
CNULL
 || *w ='#' || w[
	`°æí
(wË- 1] =':'Ë(
OK
);

917 
k
 = 
keyw‹ds
; k->
comm™d
; k++)

918 i‡(!
	`°rcmp
(
w
, 
k
->
comm™d
)) ;

921 i‡(
k
->
comm™d
 =(*)
NULL
) {

922 
	`s_îr‹
(
	`_
("script \"%s\"Üine %d: unknown command \"%s\"%s\n"),

923 
cuªnv
->
s¸ùäame
, 
thi¶öe
->
löío
, 
w
, "\r");

924 
	`exô
(1);

926 ((*(
k
->
‚
))(
ãxt
));

927 
	}
}

932 
	$execs¸ùt
(
s
)

933 *
s
;

935 
ªt
 = 
OK
;

937 
cuªnv
 = (
ív
 *)
	`mÆloc
((env));

938 
cuªnv
->
löes
 = 
LNULL
;

939 
cuªnv
->
v¨s
 = 
VNULL
;

940 
cuªnv
->
vîbo£
 = 1;

941 
cuªnv
->
s¸ùäame
 = 
s
;

943 i‡(
	`ªads¸ùt
(
s
) < 0) {

944 
	`‰ìmem
();

945 
	`‰ì
(
cuªnv
);

946 (
ERR
);

949 
	`sig«l
(
SIGALRM
, 
my˛ock
);

950 
	`Æ¨m
(1);

951 i‡(
	`£tjmp
(
cuªnv
->
ebuf
) == 0) {

952 
thi¶öe
 = 
cuªnv
->
löes
;

953 
thi¶öe
 !
LNULL
 && (
ªt
 = 
	`s_exec
—hi¶öe->
löe
)Ë!
ERR
)

954 
thi¶öe
 =Åhi¶öe->
√xt
;

956 
ªt
 = 
cuªnv
->
ex°©
 ? 
ERR
 : 0;

957 
	`‰ì
(
cuªnv
);

958 (
ªt
);

959 
	}
}

961 
	$maö
(
¨gc
, 
¨gv
)

962 
¨gc
;

963 **
¨gv
;

965 *
s
;

967 
	`sig«l
(
SIGHUP
, 
SIG_IGN
);

971 
	`£éoˇÀ
(
LC_ALL
, "");

972 
	`bödãxtdomaö
(
PACKAGE
, 
LOCALEDIR
);

973 
	`ãxtdomaö
(
PACKAGE
);

975 
	`öô_ív
();

976 
	`mem£t
(
öbuf
, 0, (inbuf));

978 i‡(
¨gc
 < 2) {

979 
	`s_îr‹
(
	`_
("Usage:Ñunscript <scriptfile> [logfile [homedir]]%s\n"),"\r");

983 i‡(
¨gc
 > 2) {

984 
	`°∫˝y
(
log‚ame
, 
¨gv
[2], (logfname));

985 i‡(
¨gc
 > 3)

986 
	`°∫˝y
(
homedú
, 
¨gv
[3], (homedir));

987 i‡((
s
 = 
	`gëív
("HOME")Ë!
CNULL
)

988 
	`°∫˝y
(
homedú
, 
s
, (homedir));

990 
homedú
[0]=0;

993 
log‚ame
[0] = 0;

995 (
	`execs¸ùt
(
¨gv
[1]Ë!
OK
);

996 
	}
}

	@sysdep.h

18 #ifde‡
HAVE_FEATURES_H


19 
	~<„©uªs.h
>

21 
	~<sys/ty≥s.h
>

24 #ifde‡
HAVE_UNISTD_H


25 
	~<°dlib.h
>

26 
	~<uni°d.h
>

28 #ifde‡
HAVE_SYS_WAIT_H


29 
	~<sys/waô.h
>

32 #ifde‡
_SCO


33 
	#_IBCS2


	)

35 #ifde‡
POSIX_TERMIOS


36 
	~<sys/ãrmios.h
>

38 #ifde‡
HAVE_TERMIO_H


39 
	~<ãrmios.h
>

41 
	#_V7


	)

42 #ifde‡
HAVE_SGTTY_H


43 
	~<sgây.h
>

48 #ifde‡
_HPUX_SOURCE


49 
	~<sys/modem.h
>

51 #ifde‡
HAVE_SYS_IOCTL_H


52 
	~<sys/io˘l.h
>

54 #ifde‡
_DGUX_SOURCE


55 
	~<sys/ãrmiox.h
>

59 
	~<°dio.h
>

60 
	~<£tjmp.h
>

63 #i‡!
deföed
(
_BSD43
)

64 #i‚de‡
WEXITSTATUS


65 
	#WEXITSTATUS
(
s
Ë(((sË>> 8Ë& 0377)

	)

67 #i‚de‡
WTERMSIG


68 
	#WTERMSIG
(
s
Ë((sË& 0177)

	)

73 #i‚de‡
VMIN


74 
	#VMIN
 4

	)

76 #i‚de‡
VTIME


77 
	#VTIME
 5

	)

79 #i‚de‡
IUCLC


80 
	#IUCLC
 0

	)

82 #i‚de‡
IXANY


83 
	#IXANY
 0

	)

87 #i‚de‡
TIOCMODG


88 #ifde‡
TIOCMGET


89 
	#TIOCMODG
 
TIOCMGET


	)

91 #ifde‡
MCGETA


92 
	#TIOCMODG
 
MCGETA


	)

97 #i‚de‡
TIOCMODS


98 #ifde‡
TIOCMSET


99 
	#TIOCMODS
 
TIOCMSET


	)

101 #ifde‡
MCSETA


102 
	#TIOCMODS
 
MCSETA


	)

107 #i‚de‡
TIOCM_CAR


108 #ifde‡
MDCD


109 
	#TIOCM_CAR
 
MDCD


	)

114 #i‚de‡
TANDEM


115 
	#TANDEM
 0

	)

117 #i‚de‡
BITS8


118 
	#BITS8
 0

	)

120 #i‚de‡
PASS8


121 #ifde‡
LLITOUT


122 
	#PASS8
 
LLITOUT


	)

124 
	#PASS8
 0

	)

127 #i‚de‡
CRTSCTS


128 
	#CRTSCTS
 0

	)

132 #i‡
deföed
(
_SYSV
)

133 #i‡!
deföed
(
_POSIX
Ë|| !deföed(
HAVE_TERMIOS_H
)

134 
	#ãrmios
 
ãrmio


	)

135 #i‚de‡
TCSANOW


136 
	#TCSANOW
 0

	)

138 
	#tcgë©å
(
fd
, 
ây
Ë
	`io˘l
(fd, 
TCGETA
,Åty)

	)

139 
	#tc£èâr
(
fd
, 
Êags
, 
ây
Ë
	`io˘l
(fd, 
TCSETA
,Åty)

	)

140 
	#tc£ndbªak
(
fd
, 
Àn
Ë
	`io˘l
(fd, 
TCSBRK
, 0)

	)

141 
	#•ìd_t
 

	)

142 
	#cf£ti•ìd
(
xây
, 
x•d
) \

143 ((
xây
)->
c_cÊag
 = ((xây)->c_cÊag & ~
CBAUD
Ë| (
x•d
))

	)

144 
	#cf£to•ìd
(
ây
, 
•d
)

	)

149 #i‡
deföed
 (
__löux__
Ë&& deföed(
CBAUDEX
)

150 #unde‡
cf£ti•ìd


151 #unde‡
cf£to•ìd


152 
	#cf£ti•ìd
(
xây
, 
x•d
) \

153 ((
xây
)->
c_cÊag
 = ((xây)->c_cÊag & ~
CBAUD
Ë| (
x•d
))

	)

154 
	#cf£to•ìd
(
ây
, 
•d
)

	)

	@sysdep1.c

28 #ifde‡
HAVE_CONFIG_H


29 
	~<c⁄fig.h
>

32 
	~"rcsid.h
"

33 
RCSID
("$Id: sysdep1.c,v 1.6 2000/06/24 16:01:29 walker Exp $")

35 
	~"sysdï.h
"

39 
	$m_£thwf
(
fd
, 
⁄
)

40 
fd
, 
⁄
;

42 #ifde‡
_DGUX_SOURCE


43 
ãrmiox
 
x
;

45 #ifde‡
POSIX_TERMIOS


46 
ãrmios
 
ây
;

48 
	`tcgë©å
(
fd
, &
ây
);

49 i‡(
⁄
)

50 
ây
.
c_cÊag
 |
CRTSCTS
;

52 
ây
.
c_cÊag
 &~
CRTSCTS
;

53 
	`tc£èâr
(
fd
, 
TCSANOW
, &
ây
);

56 #ifde‡
_DGUX_SOURCE


57 i‡(
	`io˘l
(
fd
, 
TCGETX
, &
x
) < 0) {

58 
	`Ârötf
(
°dîr
, 
	`_
("can't getÅermioxáttr.\n"));

61 
x
.
x_hÊag
 = 
⁄
 ? 
RTSXOFF
|
CTSXON
 : 0;

63 i‡(
	`io˘l
(
fd
, 
TCSETX
, &
x
) < 0) {

64 
	`Ârötf
(
°dîr
, 
	`_
("can't setÅermioxáttr.\n"));

68 
	}
}

71 
	$m_£åts
(
fd
)

72 
fd
;

74 #i‡
	`deföed
(
TIOCM_RTS
Ë&& deföed(
TIOCMODG
)

75 
mcs
=0;

77 
	`io˘l
(
fd
, 
TIOCMODG
, &
mcs
);

78 
mcs
 |
TIOCM_RTS
;

79 
	`io˘l
(
fd
, 
TIOCMODS
, &
mcs
);

81 #ifde‡
_COHERENT


82 
	`io˘l
(
fd
, 
TIOCSRTS
, 0);

84 
	}
}

89 
	$m_dåtoggÀ
(
fd
,
£c
)

90 
fd
;

91 
£c
;

93 #ifde‡
TIOCSDTR


96 
	`io˘l
(
fd
, 
TIOCCDTR
, 0);

97 i‡(
£c
>0) {

98 
	`¶ìp
(
£c
);

99 
	`io˘l
(
fd
, 
TIOCSDTR
, 0);

103 #i‡
	`deföed
 (
POSIX_TERMIOS
Ë&& !deföed(
_HPUX_SOURCE
)

106 
ãrmios
 
ây
, 
ﬁd
;

108 
	`tcgë©å
(
fd
, &
ây
);

109 
	`tcgë©å
(
fd
, &
ﬁd
);

110 
	`cf£to•ìd
(&
ây
, 
B0
);

111 
	`cf£ti•ìd
(&
ây
, 
B0
);

112 
	`tc£èâr
(
fd
, 
TCSANOW
, &
ây
);

113 i‡(
£c
>0) {

114 
	`¶ìp
(
£c
);

115 
	`tc£èâr
(
fd
, 
TCSANOW
, &
ﬁd
);

119 #ifde‡
_V7


122 
sgâyb
 
sg
, 
ng
;

124 
	`io˘l
(
fd
, 
TIOCGETP
, &
sg
);

125 
	`io˘l
(
fd
, 
TIOCGETP
, &
ng
);

127 
ng
.
sg_i•ìd
 =Çg.
sg_o•ìd
 = 0;

128 
	`io˘l
(
fd
, 
TIOCSETP
, &
ng
);

129 i‡(
£c
>0) {

130 
	`¶ìp
(
£c
);

131 
	`io˘l
(
fd
, 
TIOCSETP
, &
sg
);

135 #ifde‡
_HPUX_SOURCE


136 
mÊag
 = 0L;

138 
	`io˘l
(
fd
, 
MCSETAF
, &
mÊag
);

139 
	`io˘l
(
fd
, 
MCGETA
, &
mÊag
);

140 
mÊag
 = 
MRTS
 | 
MDTR
;

141 i‡(
£c
>0) {

142 
	`¶ìp
(
£c
);

143 
	`io˘l
(
fd
, 
MCSETAF
, &
mÊag
);

148 
	}
}

153 
	$m_bªak
(
fd
)

154 
fd
;

156 #ifde‡
POSIX_TERMIOS


157 
	`tc£ndbªak
(
fd
, 0);

159 #ifde‡
_V7


160 #i‚de‡
TIOCSBRK


161 
sgâyb
 
sg
, 
ng
;

163 
	`io˘l
(
fd
, 
TIOCGETP
, &
sg
);

164 
	`io˘l
(
fd
, 
TIOCGETP
, &
ng
);

165 
ng
.
sg_i•ìd
 =Çg.
sg_o•ìd
 = 
B110
;

166 
ng
.
sg_Êags
 = 
BITS8
 | 
RAW
;

167 
	`io˘l
(
fd
, 
TIOCSETP
, &
ng
);

168 
	`wrôe
(
fd
, "\0\0\0\0\0\0\0\0\0\0", 10);

169 
	`io˘l
(
fd
, 
TIOCSETP
, &
sg
);

171 
	`io˘l
(
fd
, 
TIOCSBRK
, 0);

172 
	`¶ìp
(1);

173 
	`io˘l
(
fd
, 
TIOCCBRK
, 0);

177 
	}
}

182 
	$m_gëdcd
(
fd
)

183 
fd
;

185 #ifde‡
TIOCMODG


186 
mcs
=0;

188 
	`io˘l
(
fd
, 
TIOCMODG
, &
mcs
);

189 (
mcs
 & 
TIOCM_CAR
 ? 1 : 0);

191 ()
fd
;

194 
	}
}

197 #ifde‡
POSIX_TERMIOS


198 
ãrmios
 
	gßvëty
;

199 
	gm_w‹d
;

201 #i‡
deföed
 (
_BSD43
Ë|| deföed (
_V7
)

202 
sgâyb
 
	gsg
;

203 
tch¨s
 
	gtch
;

204 
	glsw
;

205 
	gm_w‹d
;

212 
	$m_ßve°©e
(
fd
)

213 
fd
;

215 #ifde‡
POSIX_TERMIOS


216 
	`tcgë©å
(
fd
, &
ßvëty
);

218 #i‡
	`deföed
(
_BSD43
Ë|| deföed(
_V7
)

219 
	`io˘l
(
fd
, 
TIOCGETP
, &
sg
);

220 
	`io˘l
(
fd
, 
TIOCGETC
, &
tch
);

222 #ifde‡
_BSD43


223 
	`io˘l
(
fd
, 
TIOCLGET
, &
lsw
);

226 #ifde‡
TIOCMODG


227 
	`io˘l
(
fd
, 
TIOCMODG
, &
m_w‹d
);

229 
	}
}

234 
	$m_ª°‹e°©e
(
fd
)

235 
fd
;

237 #ifde‡
POSIX_TERMIOS


238 
	`tc£èâr
(
fd
, 
TCSANOW
, &
ßvëty
);

240 #i‡
	`deföed
(
_BSD43
Ë|| deföed(
_V7
)

241 
	`io˘l
(
fd
, 
TIOCSETP
, &
sg
);

242 
	`io˘l
(
fd
, 
TIOCSETC
, &
tch
);

244 #ifde‡
_BSD43


245 
	`io˘l
(
fd
, 
TIOCLSET
, &
lsw
);

248 #ifde‡
TIOCMODS


249 
	`io˘l
(
fd
, 
TIOCMODS
, &
m_w‹d
);

251 
	}
}

258 
	$m_noh™g
(
fd
)

259 
fd
;

261 #ifde‡
POSIX_TERMIOS


262 
ãrmios
 
sgg
;

264 
	`tcgë©å
(
fd
, &
sgg
);

265 
sgg
.
c_cÊag
 |
CLOCAL
;

266 
	`tc£èâr
(
fd
, 
TCSANOW
, &
sgg
);

268 #i‡
	`deföed
 (
_BSD43
Ë&& deföed(
LNOHANG
)

269 
lsw
;

271 
	`io˘l
(
fd
, 
TIOCLGET
, &
lsw
);

272 
lsw
 |
LNOHANG
;

273 
	`io˘l
(
fd
, 
TIOCLSET
, &
lsw
);

275 #ifde‡
_COHERENT


279 
	}
}

284 
	$m_hup˛
(
fd
, 
⁄
)

285 
fd
;

286 
⁄
;

289 #ifde‡
POSIX_TERMIOS


290 
ãrmios
 
sgg
;

292 
	`tcgë©å
(
fd
, &
sgg
);

293 i‡(
⁄
)

294 
sgg
.
c_cÊag
 |
HUPCL
;

296 
sgg
.
c_cÊag
 &~
HUPCL
;

297 
	`tc£èâr
(
fd
, 
TCSANOW
, &
sgg
);

299 
	}
}

304 
	$m_Êush
(
fd
)

305 
fd
;

308 #ifde‡
TCFLSH


309 
	`io˘l
(
fd
, 
TCFLSH
, 2);

311 #ifde‡
TIOCFLUSH


312 #ifde‡
_COHERENT


313 
	`io˘l
(
fd
, 
TIOCFLUSH
, 0);

315 
	`io˘l
(
fd
, 
TIOCFLUSH
, (*)0);

318 
	}
}

324 
	$m_ªadchk
(
fd
)

325 
fd
;

327 #ifde‡
FIONREAD


328 
i
 = -1;

330 (Ë
	`io˘l
(
fd
, 
FIONREAD
, &
i
);

331 (()
i
);

333 #i‡
	`deföed
(
F_GETFL
Ë&& deföed(
O_NDELAY
)

334 
i
, 
ﬁd
;

335 
c
;

337 
ﬁd
 = 
	`f˙é
(
fd
, 
F_GETFL
, 0);

338 (Ë
	`f˙é
(
fd
, 
F_SETFL
, 
ﬁd
 | 
O_NDELAY
);

339 
i
 = 
	`ªad
(
fd
, &
c
, 1);

340 (Ë
	`f˙é
(
fd
, 
F_SETFL
, 
ﬁd
);

342 (
i
);

347 
	}
}

353 
	$m_gëmax•d
()

355 #ifde‡
B230400


357 #ñi‡
	`deföed
(
B115200
)

359 #ñi‡
	`deföed
(
B57600
)

361 #ñi‡
	`deföed
(
B38400
)

363 #ñi‡
	`deföed
(
EXTB
)

365 #ñi‡
	`deföed
(
B19200
)

367 #ñi‡
	`deföed
(
EXTA
)

372 
	}
}

377 
	$m_£ç¨ms
(
fd
, 
baudr
, 
∑r
, 
bôs
, 
°›b
, 
hwf
, 
swf
)

378 
fd
;

379 *
baudr
;

380 *
∑r
;

381 *
bôs
;

382 *
°›b
;

383 
hwf
;

384 
swf
;

386 
•d
 = -1;

387 
√wbaud
;

388 
bô
 = 
bôs
[0];

390 #ifde‡
POSIX_TERMIOS


391 
ãrmios
 
ây
;

393 
	`tcgë©å
(
fd
, &
ây
);

395 
sgâyb
 
ây
;

397 
	`io˘l
(
fd
, 
TIOCGETP
, &
ây
);

401 i‡(
bô
 ='7' && (
∑r
[0] == 'M' ||Öar[0] == 'S'))

402 
bô
 = '8';

405 i‡((
√wbaud
 = (
	`©ﬁ
(
baudr
) / 100)) == 0 && baudr[0] != '0')Çewbaud = -1;

407 
√wbaud
) {

409 #ifde‡
B0


410 
•d
 = 
B0
; ;

412 
•d
 = 0; ;

414 3: 
•d
 = 
B300
; ;

415 6: 
•d
 = 
B600
; ;

416 12: 
•d
 = 
B1200
; ;

417 24: 
•d
 = 
B2400
; ;

418 48: 
•d
 = 
B4800
; ;

419 96: 
•d
 = 
B9600
; ;

420 #ifde‡
B19200


421 192: 
•d
 = 
B19200
; ;

423 #ifde‡
EXTA


424 192: 
•d
 = 
EXTA
; ;

426 192: 
•d
 = 
B9600
; ;

429 #ifde‡
B38400


430 384: 
•d
 = 
B38400
; ;

432 #ifde‡
EXTB


433 384: 
•d
 = 
EXTB
; ;

435 384: 
•d
 = 
B9600
; ;

438 #ifde‡
B57600


439 576: 
•d
 = 
B57600
; ;

441 #ifde‡
B115200


442 1152: 
•d
 = 
B115200
; ;

444 #ifde‡
B230400


445 2304: 
•d
 = 
B230400
; ;

449 #i‡
	`deföed
 (
_BSD43
Ë&& !deföed(
POSIX_TERMIOS
)

450 i‡(
•d
 !-1Ë
ây
.
sg_i•ìd
 =Åty.
sg_o•ìd
 = spd;

453 
ây
.
sg_Êags
 = 
RAW
 | 
TANDEM
;

454 i‡(
∑r
[0] == 'E')

455 
ây
.
sg_Êags
 |
EVENP
;

456 i‡(
∑r
[0] == 'O')

457 
ây
.
sg_Êags
 |
ODDP
;

459 
ây
.
sg_Êags
 |
PASS8
 | 
ANYP
;

461 
	`io˘l
(
fd
, 
TIOCSETP
, &
ây
);

463 #ifde‡
TIOCSDTR


465 
	`io˘l
(
fd
, 
TIOCSDTR
, 0);

469 #i‡
	`deföed
 (
_V7
Ë&& !deföed(
POSIX_TERMIOS
)

470 i‡(
•d
 !-1Ë
ây
.
sg_i•ìd
 =Åty.
sg_o•ìd
 = spd;

471 
ây
.
sg_Êags
 = 
RAW
;

472 i‡(
∑r
[0] == 'E')

473 
ây
.
sg_Êags
 |
EVENP
;

474 i‡(
∑r
[0] == 'O')

475 
ây
.
sg_Êags
 |
ODDP
;

477 
	`io˘l
(
fd
, 
TIOCSETP
, &
ây
);

480 #ifde‡
POSIX_TERMIOS


482 i‡(
•d
 != -1) {

483 
	`cf£to•ìd
(&
ây
, (
•ìd_t
)
•d
);

484 
	`cf£ti•ìd
(&
ây
, (
•ìd_t
)
•d
);

487 
bô
) {

489 
ây
.
c_cÊag
 = (ây.c_cÊag & ~
CSIZE
Ë| 
CS5
;

492 
ây
.
c_cÊag
 = (ây.c_cÊag & ~
CSIZE
Ë| 
CS6
;

495 
ây
.
c_cÊag
 = (ây.c_cÊag & ~
CSIZE
Ë| 
CS7
;

499 
ây
.
c_cÊag
 = (ây.c_cÊag & ~
CSIZE
Ë| 
CS8
;

503 
ây
.
c_iÊag
 = 
IGNBRK
;

504 
ây
.
c_lÊag
 = 0;

505 
ây
.
c_oÊag
 = 0;

506 
ây
.
c_cÊag
 |
CLOCAL
 | 
CREAD
;

507 #ifde‡
_DCDFLOW


508 
ây
.
c_cÊag
 &~
CRTSCTS
;

510 
ây
.
c_cc
[
VMIN
] = 1;

511 
ây
.
c_cc
[
VTIME
] = 5;

513 i‡(
swf
)

514 
ây
.
c_iÊag
 |
IXON
 | 
IXOFF
;

516 
ây
.
c_iÊag
 &~(
IXON
|
IXOFF
|
IXANY
);

518 
ây
.
c_cÊag
 &~(
PARENB
 | 
PARODD
);

519 i‡(
∑r
[0] == 'E')

520 
ây
.
c_cÊag
 |
PARENB
;

521 i‡(
∑r
[0] == 'O')

522 
ây
.
c_cÊag
 |(
PARENB
 | 
PARODD
);

524 i‡(
°›b
[0] == '2')

525 
ây
.
c_cÊag
 |
CSTOPB
;

527 
ây
.
c_cÊag
 &~
CSTOPB
;

529 
	`tc£èâr
(
fd
, 
TCSANOW
, &
ây
);

531 
	`m_£åts
(
fd
);

534 #i‚de‡
_DCDFLOW


535 
	`m_£thwf
(
fd
, 
hwf
);

537 
	}
}

542 
	$m_waô
(
°t
)

543 *
°t
;

545 #i‡
	`deföed
 (
_BSD43
Ë&& !deföed(
POSIX_TERMIOS
)

546 
pid
;

547 
waô
 
°1
;

549 
pid
 = 
	`waô
((*)&
°1
);

550 *
°t
 = ()
°1
.
w_ªtcode
 + 256 * ()°1.
w_ãrmsig
;

551 (
pid
);

553 
pid
;

554 
°1
;

556 
pid
 = 
	`waô
(&
°1
);

557 *
°t
 = ()
	`WEXITSTATUS
(
°1
Ë+ 256 * ()
	`WTERMSIG
(st1);

558 (
pid
);

560 
	}
}

	@sysdep2.c

18 #ifde‡
HAVE_CONFIG_H


19 
	~<c⁄fig.h
>

22 
	~"rcsid.h
"

23 
RCSID
("$Id: sysdep2.c,v 1.3 2000/06/24 16:01:29 walker Exp $")

25 
	~"sysdï.h
"

27 #ifde‡
POSIX_TERMIOS


28 
ãrmios
 
	gßvëty
;

30 
sgâyb
 
	gßvëty
;

31 
tch¨s
 
	gßvëty2
;

35 
	$gërowcﬁs
(
rows
, 
cﬁs
)

36 *
rows
;

37 *
cﬁs
;

39 *
p
, *
	`gëív
();

41 #ifde‡
TIOCGWINSZ


42 
wösize
 
ws
;

44 i‡(
	`io˘l
(0, 
TIOCGWINSZ
, &
ws
) >= 0) {

45 *
rows
 = 
ws
.
ws_row
;

46 *
cﬁs
 = 
ws
.
ws_cﬁ
;

49 #ifde‡
TIOCGSIZE


50 
âysize
 
ws
;

52 i‡(
	`io˘l
(0, 
TIOCGSIZE
, &
ws
) >= 0) {

53 *
rows
 = 
ws
.
ts_löes
;

54 *
cﬁs
 = 
ws
.
ts_cﬁs
;

62 i‡(*
rows
 =0 && (
p
 = 
	`gëív
("LINES")Ë!
NULL
)

63 *
rows
 = 
	`©oi
(
p
);

64 i‡(*
cﬁs
 =0 && (
p
 = 
	`gëív
("COLUMNS")Ë!
NULL
)

65 *
cﬁs
 = 
	`©oi
(
p
);

66 
	}
}

77 
	$£tcbªak
(
mode
)

78 
mode
;

80 #ifde‡
POSIX_TERMIOS


81 
ãrmios
 
ây
;

82 
öô
 = 0;

83 
îa£ch¨
;

84 #ifde‡
_HPUX_SOURCE


85 
œ°mode
 = -1;

88 #i‚de‡
XCASE


89 #ifde‡
_XCASE


90 
	#XCASE
 
_XCASE


	)

92 
	#XCASE
 0

	)

96 i‡(
öô
 == 0) {

97 
	`tcgë©å
(0, &
ßvëty
);

98 
îa£ch¨
 = 
ßvëty
.
c_cc
[
VERASE
];

99 
öô
++;

102 i‡(
mode
 =3Ë(
îa£ch¨
);

104 #ifde‡
_HPUX_SOURCE


108 i‡(
mode
 == 1) mode = 2;

112 #ifde‡
_HPUX_SOURCE


113 i‡(
mode
 =
œ°mode
Ë(
îa£ch¨
);

114 
œ°mode
 = 
mode
;

118 
	`tc£èâr
(0, 
TCSADRAIN
, &
ßvëty
);

120 i‡(
mode
 == 0) {

121 (
îa£ch¨
);

124 
	`tcgë©å
(0, &
ây
);

125 i‡(
mode
 == 1) {

126 
ây
.
c_oÊag
 &~
OPOST
;

127 
ây
.
c_lÊag
 &~(
XCASE
|
ECHONL
|
NOFLSH
);

128 
ây
.
c_lÊag
 &~(
ICANON
 | 
ISIG
 | 
ECHO
);

129 
ây
.
c_iÊag
 &~(
ICRNL
|
INLCR
);

130 
ây
.
c_cÊag
 |
CREAD
;

131 
ây
.
c_cc
[
VTIME
] = 5;

132 
ây
.
c_cc
[
VMIN
] = 1;

134 i‡(
mode
 == 2) {

135 
ây
.
c_iÊag
 &~(
IGNBRK
 | 
IGNCR
 | 
INLCR
 | 
ICRNL
 | 
IUCLC
 |

136 
IXANY
 | 
IXON
 | 
IXOFF
 | 
INPCK
 | 
ISTRIP
);

137 
ây
.
c_iÊag
 |(
BRKINT
 | 
IGNPAR
);

138 
ây
.
c_oÊag
 &~
OPOST
;

139 
ây
.
c_lÊag
 &~(
XCASE
|
ECHONL
|
NOFLSH
);

140 
ây
.
c_lÊag
 &~(
ICANON
 | 
ISIG
 | 
ECHO
);

141 
ây
.
c_cÊag
 |
CREAD
;

142 
ây
.
c_cc
[
VTIME
] = 5;

143 
ây
.
c_cc
[
VMIN
] = 1;

145 
	`tc£èâr
(0, 
TCSADRAIN
, &
ây
);

146 (
îa£ch¨
);

148 
sgâyb
 
¨gs
;

149 
öô
 = 0;

150 
îa£ch¨
;

151 #ifde‡
_BSD43


152 
…ch¨s
Ütchars;

155 i‡(
öô
 == 0) {

156 (Ë
	`io˘l
(0, 
TIOCGETP
, &
ßvëty
);

157 (Ë
	`io˘l
(0, 
TIOCGETC
, &
ßvëty2
);

158 #ifde‡
_BSD43


159 (Ë
	`io˘l
(0, 
TIOCGLTC
, &
…ch¨s
);

161 
îa£ch¨
 = 
ßvëty
.
sg_îa£
;

162 
öô
++;

165 i‡(
mode
 =3Ë(
îa£ch¨
);

167 i‡(
mode
 == 0) {

168 (Ë
	`io˘l
(0, 
TIOCSETP
, &
ßvëty
);

169 (Ë
	`io˘l
(0, 
TIOCSETC
, &
ßvëty2
);

170 #ifde‡
_BSD43


171 (Ë
	`io˘l
(0, 
TIOCSLTC
, &
…ch¨s
);

173 (
îa£ch¨
);

176 (Ë
	`io˘l
(0, 
TIOCGETP
, &
¨gs
);

177 i‡(
mode
 == 1) {

178 
¨gs
.
sg_Êags
 |
CBREAK
;

179 
¨gs
.
sg_Êags
 &~(
ECHO
|
RAW
);

181 i‡(
mode
 == 2) {

182 
¨gs
.
sg_Êags
 |
RAW
;

183 
¨gs
.
sg_Êags
 &~(
ECHO
|
CBREAK
);

185 (Ë
	`io˘l
(0, 
TIOCSETP
, &
¨gs
);

186 (
îa£ch¨
);

189 
	}
}

192 
	$íab_sig
(
⁄off
, 
ötch¨
)

193 
⁄off
;

194 
ötch¨
;

196 #ifde‡
POSIX_TERMIOS


197 
ãrmios
 
ây
;

199 (Ë
	`tcgë©å
(0, &
ây
);

200 i‡(
⁄off
)

201 
ây
.
c_lÊag
 |
ISIG
;

203 
ây
.
c_lÊag
 &~
ISIG
;

205 i‡(
⁄off
 && 
ötch¨
) {

206 
ây
.
c_cc
[
VINTR
] = 
ötch¨
;

207 
ây
.
c_cc
[
VQUIT
] = -1;

208 #ifde‡
VSUSP


209 
ây
.
c_cc
[
VSUSP
] = -1;

213 (Ë
	`tc£èâr
(0, 
TCSADRAIN
, &
ây
);

215 #ifde‡
_V7


216 
tch¨s
 
tch
;

217 
sgâyb
 
sg
;

219 (Ë
	`io˘l
(0, 
TIOCGETP
, &
sg
);

220 (Ë
	`io˘l
(0, 
TIOCGETC
, &
tch
);

221 i‡(
⁄off
) {

222 
sg
.
sg_Êags
 &~
RAW
;

223 
sg
.
sg_Êags
 |
CBREAK
;

225 
sg
.
sg_Êags
 &~
CBREAK
;

226 
sg
.
sg_Êags
 |
RAW
;

228 i‡(
⁄off
 && 
ötch¨
) {

229 
tch
.
t_öåc
 = 
ötch¨
;

230 
tch
.
t_quôc
 = -1;

232 (Ë
	`io˘l
(0, 
TIOCSETP
, &
sg
);

233 (Ë
	`io˘l
(0, 
TIOCSETC
, &
tch
);

235 
	}
}

237 #ifde‡
_SVR2


239 
	$dup2
(
‰om
, 
to
)

240 
‰om
, 
to
;

242 
fûes
[20];

243 
n
, 
f
, 
ex°©
 = -1;

244 
î∫o
;

247 i‡(
‰om
 =
to
) (to);

250 
f
 = 0; f < 20; f++Ë
fûes
[f] = 0;

253 
	`˛o£
(
to
);

256 (
n
 = 
	`›í
("/dev/nuŒ", 0)Ë< 
to
 &&Ç >= 0) {

257 i‡(
n
 =
‰om
) ;

258 
fûes
[
n
] = 1;

260 i‡(
n
 =
to
) {

262 
	`˛o£
(
n
);

263 
ex°©
 = 
	`dup
(
‰om
);

266 i‡(
n
 > 0Ë
	`˛o£
(n);

267 
ex°©
 = -1;

268 
î∫o
 = 
EBADF
;

271 
f
 = 0; f < 20; f++Ëi‡(
fûes
[f]Ë
	`˛o£
(f);

274 (
ex°©
);

275 
	}
}

	@updown.c

21 #ifde‡
HAVE_CONFIG_H


22 
	~<c⁄fig.h
>

25 
	~"rcsid.h
"

26 
RCSID
("$Id: updown.c,v 1.5 2001/07/04 14:43:25 kloczek Exp $")

28 
	~"p‹t.h
"

29 
	~"möicom.h
"

30 
	~"öé.h
"

34 
	gudpid
;

39 
	$mcd
(
dú
)

40 *
dú
;

42 
buf
[256];

43 
îr
[50];

44 
odú
[256];

45 
öô
 = 0;

47 i‡(!
öô
) {

48 i‡(*
dú
 == 0) (0);

49 
öô
 = 1;

50 #i‡
	`deföed
 (
_COH3
Ë|| deföed(
NeXT
)

51 
	`gëwd
(
odú
);

53 
	`gëcwd
(
odú
, 255);

56 i‡(*
dú
 == 0) {

57 
	`chdú
(
odú
);

61 if(*
dú
 != '/') {

62 
	`¢¥ötf
(
buf
, (buf), "%s/%s", 
homedú
, 
dú
);

63 
dú
 = 
buf
;

65 i‡(
	`chdú
(
dú
) < 0) {

68 
	`¢¥ötf
(
îr
, ”º), 
	`_
("C™nŸ chdúÅÿ%.30s"), 
dú
);

69 
	`wîr‹
("%s", 
îr
);

73 
	}
}

79 
	$udˇtch
(
dummy
)

80 
dummy
;

82 ()
dummy
;

83 
	`sig«l
(
SIGINT
, 
udˇtch
);

84 i‡(
udpid
Ë
	`kûl
((
pid_t
)udpid, 
SIGKILL
);

85 
	}
}

92 *
	$å™¶©e
(
s
)

93 *
s
;

95 
buf
[128];

96 
°r_p‹tfd
[8];

97 
i
;

99 
i
 = 0; *
s
 && i < 127; i++, s++) {

100 i‡(*
s
 != '%') {

101 
buf
[
i
] = *
s
;

104 *++
s
) {

106 
	`°∫˝y
(
buf
 + 
i
, 
dül_ây
, (buf)-i);

107 
i
 +
	`°æí
(
dül_ây
) - 1;

110 
	`°∫˝y
(
buf
 + 
i
, 
P_BAUDRATE
, (buf)-i);

111 
i
 +
	`°æí
(
P_BAUDRATE
) - 1;

114 
	`•rötf
(
°r_p‹tfd
, "%d", 
p‹tfd
);

115 
	`°∫˝y
(
buf
 + 
i
, 
°r_p‹tfd
, (buf)-i);

116 
i
 +
	`°æí
(
°r_p‹tfd
) - 1;

119 
buf
[
i
++] = '%';

120 
buf
[
i
] = *
s
;

124 
buf
[
i
] = 0;

125 (
buf
);

126 
	}
}

132 *
	$åim
(*
out°rög
, *
ö°rög
, 
n
)

134 *
p
;

135 *
ù
;

136 *
›
;

137 *
≈
;

139 
ù
 = 
ö°rög
;

140 
≈
 = 
ù
 + 
n
;

141 (*
ù
 <' 'Ë&& (ù < 
≈
)) ip++;

143 
›
 = 
out°rög
;

144 
≈
 = 
›
 + 
n
;

145 (*
ù
 >' 'Ë&& (
›
 <
≈
)) {

146 *
›
 = *
ù
;

147 
ù
++;

148 
›
++;

151 i‡(
›
<
≈
)

152 *
›
 = 0;

154 (
›
 > 
out°rög
) && (*op <= ' ')) {

155 *
›
 = 0;

156 
›
--;

159 
p
 = 
out°rög
;

160 (
p
);

161 
	}
}

167 
	$updown
(
wh©
, 
ƒ
)

168 
wh©
;

169 
ƒ
;

171 #ifde‡
LOG_XFER


172 #w¨nög 
LOG_XFER
 
deföed
!

173 
FILE
 *
xÊ
;

175 *
«me
[13];

176 
idx
[13];

177 
r
, 
f
, 
g
 = 0;

178 *
t
 = 
wh©
 ='U' ? 
	`_
("Upload") : _("Download");

179 
buf
[160];

180 
buffú°
[20];

181 
x‰°r
[160] = "";

182 
åimbuf
[160] = "";

183 
tôÀ
[64];

184 *
s
 ="";

185 
pùefd
[2];

186 
n
, 
°©us
;

187 
cmdlöe
[128];

188 
WIN
 *
wö
 = (WIN *)
NULL
;

189 #i‡
VC_MUSIC


190 
	`_PROTO
(
music
, ());

193 i‡(
	`mcd
(
wh©
 ='U' ? 
P_UPDIR
 : 
P_DOWNDIR
) < 0)

197 i‡(
ƒ
 == 0) {

198 
f
 = 0; f < 12; f++) {

199 i‡(
	`P_PNAME
(
f
)[0] && 
	`P_PUD
(fË=
wh©
) {

200 
«me
[
g
] = 
	`P_PNAME
(
f
);

201 
idx
[
g
++] = 
f
;

204 
«me
[
g
] = 
CNULL
;

205 i‡(
g
 == 0) ;

207 
r
 = 
	`w£À˘
(30, 7, 
«me
, 
NIL_FUNLIST
, 
t
, 
°d©å
, 
mfcﬁ‹
, 
mbcﬁ‹
) - 1;

208 i‡(
r
 < 0) ;

210 
g
 = 
idx
[
r
];

211 } 
g
 = 
ƒ
;

213 
buf
[0] = 0;

218 
mu…ùÀ
;

220 if(
	`P_MUL
(
g
)=='Y') {

222 
mu…ùÀ
 = 
wh©
 == 'U'? -1 : 0;

225 
mu…ùÀ
 = 1;

228 i‡(
P_FSELW
[0] ='Y' && (
wh©
 ='U' || 
P_ASKDNDIR
[0] == 'Y')) {

229 
s
 = 
	`fûedú
(
mu…ùÀ
, 
wh©
 == 'U'? 0 : 1);

230 i‡(
s
 =
NULL
)

233 i‡(
	`P_PNN
(
g
) == 'Y') {

234 
s
 = 
	`öput
(
	`_
("PÀa£É¡î fûê«mes"), 
buf
);

235 i‡(
s
 =
NULL
)

240 
	`¢¥ötf
(
cmdlöe
, (cmdlöe), "%†%s", 
	`P_PPROG
(
g
), 
mu…ùÀ
 =0? "" : 
s
);

244 i‡(
P_LOGXFER
[0] == 'Y')

245 
	`do_log
("%s", 
cmdlöe
);

247 i‡(
	`P_PFULL
(
g
) == 'N') {

248 
wö
 = 
	`w›í
(10, 7, 70, 13, 
BSINGLE
, 
°d©å
, 
mfcﬁ‹
, 
mbcﬁ‹
, 1, 0, 1);

249 
	`¢¥ötf
(
tôÀ
, —ôÀ), 
	`_
("%.30†%†- Pªs†CTRL-CÅÿquô"), 
	`P_PNAME
(
g
),

250 
wh©
 ='U' ? 
	`_
("upload") : _("download"));

251 
	`wtôÀ
(
wö
, 
TMID
, 
tôÀ
);

252 
	`pùe
(
pùefd
);

254 
	`wÀave
();

256 
udpid
 = 
	`f‹k
()) {

258 
	`wîr‹
(
	`_
("Out of memory: couldÇot fork()"));

259 i‡(
wö
) {

260 
	`˛o£
(
pùefd
[0]);

261 
	`˛o£
(
pùefd
[1]);

262 
	`w˛o£
(
wö
, 1);

264 
	`wªtu∫
();

265 (Ë
	`mcd
("");

268 i‡(
	`P_PIORED
(
g
) == 'Y') {

269 
	`dup2
(
p‹tfd
, 0);

270 
	`dup2
(
p‹tfd
, 1);

272 i‡(
wö
) {

273 
	`dup2
(
pùefd
[1], 2);

274 
	`˛o£
(
pùefd
[0]);

275 i‡(
pùefd
[1] !2Ë
	`˛o£
(pipefd[1]);

277 
n
 = 1;Ç < 
_NSIG
;Ç++Ë
	`sig«l
“, 
SIG_DFL
);

279 
	`£t_¥ivs
();

280 
	`£tgid
((
gid_t
)
ªÆ_gid
);

281 
	`£tuid
((
uid_t
)
ªÆ_uid
);

282 (Ë
	`Á°exec
(
	`å™¶©e
(
cmdlöe
));

283 
	`exô
(1);

287 i‡(
wö
) {

288 (Ë
	`£tcbªak
(1);

289 
	`íab_sig
(1, 0);

291 
	`sig«l
(
SIGINT
, 
udˇtch
);

292 i‡(
	`P_PIORED
(
g
) == 'Y') {

293 
	`˛o£
(
pùefd
[1]);

294 #ifde‡
LOG_XFER


295 
xÊ
=
	`f›í
("xfer.log","wb");

297 (
n
 = 
	`ªad
(
pùefd
[0], 
buf
, (buf))) > 0) {

298 
buf
[
n
] = '\0';

299 
	`wputs
(
wö
, 
buf
);

300 
	`timî_upd©e
();

302 i‡(
P_LOGXFER
[0] == 'Y') {

303 #ifde‡
LOG_XFER


304 i‡(
xÊ
)

305 
	`Ârötf
(
xÊ
,">%s<\n",
buf
);

307 i‡(
	`ssˇnf
(
buf
, "%19s", 
buffú°
)) {

308 i‡(!
	`°∫cmp
 (
buffú°
, "Receiving", 9) ||

309 !
	`°∫cmp
 (
buffú°
, "Sending", 7)) {

310 i‡(
x‰°r
[0]) {

311 
	`åim
 (
åimbuf
, 
x‰°r
, (trimbuf));

312 
	`do_log
 ("%s", 
åimbuf
);

313 
x‰°r
[0] = 0;

315 
	`åim
 (
åimbuf
, 
buf
, (trimbuf));

316 
	`do_log
("%s", 
åimbuf
);

317 } i‡(!
	`°∫cmp
 (
buffú°
, "Bytes", 5)) {

318 
	`°∫˝y
 (
x‰°r
, 
buf
, (xfrstr));

320 
buffú°
[0]=0;

321 
åimbuf
[0]=0;

325 #ifde‡
LOG_XFER


326 i‡(
xÊ
)

327 
	`f˛o£
(
xÊ
);

331 i‡(
P_LOGXFER
[0] ='Y' && 
x‰°r
[0]) {

332 
	`åim
 (
åimbuf
, 
x‰°r
, (trimbuf));

333 
	`do_log
 ("%s", 
åimbuf
);

334 
x‰°r
[0] = 0;

337  
udpid
 !
	`m_waô
(&
°©us
) );

338 i‡(
wö
) {

339 
	`íab_sig
(0, 0);

340 
	`sig«l
(
SIGINT
, 
SIG_IGN
);

343 i‡(
wö
 =(
WIN
 *)0Ë
	`wªtu∫
();

348 
	`m_Êush
(
p‹tfd
);

349 
	`p‹t_öô
();

350 (Ë
	`£tcbªak
(2);

351 i‡(
wö
Ë
	`˛o£
(
pùefd
[0]);

352 (Ë
	`mcd
("");

353 
	`timî_upd©e
();

356 i‡(
wö
 && (
°©us
 & 0xFF00) == 0) {

357 #i‡
VC_MUSIC


358 i‡(
P_SOUND
[0] == 'Y') {

359 
	`w¥ötf
(
wö
, 
	`_
("\n READY:Öressány keyÅo continue..."));

360 
	`music
();

362 
	`¶ìp
(1);

366 i‡(
P_SOUND
[0] ='Y'Ë
	`w¥ötf
(
wö
, "\007\007\007");

367 
	`¶ìp
(1);

370 i‡(
wö
Ë
	`w˛o£
(win, 1);

371 
	}
}

378 
	$kîmô
()

380 
°©us
;

381 
pid
, 
n
;

382 
buf
[81];

383 
fd
;

386 
	`wÀave
();

388 
pid
 = 
	`f‹k
()) {

390 
	`wªtu∫
();

391 
	`wîr‹
(
	`_
("Out of memory: couldÇot fork()"));

395 
	`£t_¥ivs
();

396 i‡(
lockfûe
[0]Ë
	`u∆ök
(lockfile);

397 
	`£tgid
((
gid_t
)
ªÆ_gid
);

398 
	`£tuid
((
uid_t
)
ªÆ_uid
);

400 
n
 = 0;Ç < 
_NSIG
;Ç++Ë
	`sig«l
“, 
SIG_DFL
);

402 (Ë
	`Á°exec
(
	`å™¶©e
(
P_KERMIT
));

403 
	`exô
(1);

408 (Ë
	`m_waô
(&
°©us
);

411 
	`wªtu∫
();

414 i‡(
lockfûe
[0]) {

415 
	`£t_¥ivs
();

416 
n
 = 
	`umask
(022);

418 i‡((
fd
 = 
	`›í
(
lockfûe
, 
O_WRONLY
 | 
O_CREAT
 | 
O_EXCL
, 0666)) < 0) {

419 
	`wîr‹
(
	`_
("CannotÑe-createÜockfile!"));

421 (Ë
	`chown
(
lockfûe
, (
uid_t
)
ªÆ_uid
, (
gid_t
)
ªÆ_gid
);

422 
	`¢¥ötf
(
buf
, (buf), "%05d möicom %.20s\n", ()
	`gëpid
(), 
u£∫ame
);

423 
	`wrôe
(
fd
, 
buf
, 
	`°æí
(buf));

424 
	`˛o£
(
fd
);

426 (Ë
	`umask
(
n
);

427 
	`dr›_¥ivs
();

429 
	`m_Êush
(
p‹tfd
);

430 
	`p‹t_öô
();

431 
	}
}

437 
	$v¨cmp
(
s1
, 
s2
)

438 *
s1
, *
s2
;

440 *
s1
 && *
s2
) {

441 i‡(*
s1
 ='=' && *
s2
 == '=') (1);

442 i‡(*
s1
++ !*
s2
++) (0);

445 
	}
}

450 *
	$makív
(
«me
, 
vÆue
)

451 *
«me
, *
vÆue
;

453 *
p
;

455 i‡((
p
 = (*)
	`mÆloc
(
	`°æí
(
«me
Ë+ såÀn(
vÆue
Ë+ 3)Ë=
CNULL
)

456 (
p
);

457 
	`•rötf
(
p
, "%s=%s", 
«me
, 
vÆue
);

458 (
p
);

459 
	}
}

464 
	$mc_£ãnv
(
«me
, 
vÆue
)

465 *
«me
, *
vÆue
;

467 
öô
 = 0;

468 **
ívú⁄
;

469 *
p
, **
e
, **
√we
;

470 
cou¡
 = 0;

472 i‡((
p
 = 
	`makív
(
«me
, 
vÆue
)Ë=
CNULL
) (-1);

474 
e
 = 
ívú⁄
; *e;É++) {

475 
cou¡
++;

476 if(
	`v¨cmp
(
«me
, *
e
)) {

477 *
e
 = 
p
;

481 
cou¡
 += 2;

482 i‡((
√we
 = (**)
	`mÆloc
((*Ë* 
cou¡
)) == (**)0) {

483 
	`‰ì
(
p
);

486 
	`mem˝y
((*)
√we
, (*)
ívú⁄
 , (Ë(
cou¡
 * (*)));

487 i‡(
öô
Ë
	`‰ì
((*)
ívú⁄
);

488 
öô
 = 1;

489 
ívú⁄
 = 
√we
;

490 
e
 = 
ívú⁄
; *e;É++)

492 *
e
++ = 
p
;

493 *
e
 = 
CNULL
;

495 
	}
}

504 
	$runs¸ùt
(
ask
, 
s
, 
l
, 
p
)

505 
ask
;

506 *
s
, *
l
, *
p
;

508 
°©us
;

509 
n
;

510 
pùefd
[2];

511 
buf
[81];

512 
s¸_löes
[5];

513 
cmdlöe
[128];

514 *
±r
;

515 
WIN
 *
w
;

516 
d⁄e
 = 0;

517 *
msg
 = 
	`_
("SameásÜast");

518 * 
u£∫ame
 = 
	`_
(" A - Username :"),

519 * 
∑ssw‹d
 = 
	`_
(" B - Password :"),

520 * 
«me_of_s¸ùt
 = 
	`_
(" C - Name of script :"),

521 * 
que°i⁄
 = 
	`_
("Change which setting? (ReturnÅoÑun, ESCÅo stop)");

524 i‡(
ask
) {

525 
w
 = 
	`w›í
(10, 5, 70, 10, 
BDOUBLE
, 
°d©å
, 
mfcﬁ‹
, 
mbcﬁ‹
, 0, 0, 1);

526 
	`wtôÀ
(
w
, 
TMID
, 
	`_
("Runá script"));

527 
	`wputs
(
w
, "\n");

528 
	`w¥ötf
(
w
, "%†%s\n", 
u£∫ame
, 
s¸_u£r
[0] ? 
msg
 : "");

529 
	`w¥ötf
(
w
, "%†%s\n", 
∑ssw‹d
, 
s¸_∑sswd
[0] ? 
msg
 : "");

530 
	`w¥ötf
(
w
, "%†%s\n", 
«me_of_s¸ùt
, 
s¸_«me
);

531 
	`wloˇã
(
w
, 4, 5);

532 
	`wputs
(
w
, 
que°i⁄
);

533 
	`wªdøw
(
w
, 1);

535 !
d⁄e
) {

536 
	`wloˇã
(
w
, 
	`°æí
 (
que°i⁄
) + 5, 5);

537 
n
 = 
	`wxgëch
();

538 i‡(
	`i¶owî
(
n
)Ë¿
	`touµî
(n);

539 
n
) {

542 i‡(
s¸_«me
[0] == '\0') {

543 
	`wbñl
();

546 
	`w˛o£
(
w
, 1);

547 
d⁄e
 = 1;

550 
	`w˛o£
(
w
, 1);

553 
	`wloˇã
(
w
, 
	`°æí
 (
u£∫ame
) + 1, 1);

554 
	`w˛ªﬁ
(
w
);

555 
s¸_u£r
[0] = 0;

556 
	`wgës
(
w
, 
s¸_u£r
, 32, 32);

559 
	`wloˇã
(
w
, 
	`°æí
 (
∑ssw‹d
) + 1, 2);

560 
	`w˛ªﬁ
(
w
);

561 
s¸_∑sswd
[0] = 0;

562 
	`wgës
(
w
, 
s¸_∑sswd
, 32, 32);

565 
	`wloˇã
(
w
, 
	`°æí
 (
«me_of_s¸ùt
) + 1, 3);

566 
	`wgës
(
w
, 
s¸_«me
, 32, 32);

573 
	`°∫˝y
(
s¸_u£r
, 
l
, (scr_user));

574 
	`°∫˝y
(
s¸_«me
, 
s
, (scr_name));

575 
	`°∫˝y
(
s¸_∑sswd
, 
p
, (scr_passwd));

577 
	`•rötf
(
s¸_löes
, "%d", (Ë
löes
);

580 i‡(
ãmp°
) {

581 
	`w˛o£
(
°
, 1);

582 
ãmp°
 = 0;

583 
°
 = 
NIL_WIN
;

585 
	`s¸ùäame
(
s¸_«me
);

587 
	`pùe
(
pùefd
);

589 i‡(
	`mcd
(
P_SCRIPTDIR
) < 0) ;

591 
	`¢¥ötf
(
cmdlöe
, (cmdline), "%s %s %s %s",

592 
P_SCRIPTPROG
, 
s¸_«me
, 
log‚ame
,Üog‚ame[0]==0? "": 
homedú
);

594 
udpid
 = 
	`f‹k
()) {

596 
	`wîr‹
(
	`_
("Out of memory: couldÇot fork()"));

597 
	`˛o£
(
pùefd
[0]);

598 
	`˛o£
(
pùefd
[1]);

599 (Ë
	`mcd
("");

602 
	`dup2
(
p‹tfd
, 0);

603 
	`dup2
(
p‹tfd
, 1);

604 
	`dup2
(
pùefd
[1], 2);

605 
	`˛o£
(
pùefd
[0]);

606 
	`˛o£
(
pùefd
[1]);

608 
n
 = 1;Ç < 
_NSIG
;Ç++Ë
	`sig«l
“, 
SIG_DFL
);

610 
	`£t_¥ivs
();

611 
	`£tgid
((
gid_t
)
ªÆ_gid
);

612 
	`£tuid
((
uid_t
)
ªÆ_uid
);

613 
	`mc_£ãnv
("LOGIN", 
s¸_u£r
);

614 
	`mc_£ãnv
("PASS", 
s¸_∑sswd
);

615 
	`mc_£ãnv
("TERMLIN", 
s¸_löes
);

616 (Ë
	`Á°exec
(
	`å™¶©e
(
cmdlöe
));

617 
	`exô
(1);

621 (Ë
	`£tcbªak
(1);

622 
	`íab_sig
(1, 0);

623 
	`sig«l
(
SIGINT
, 
udˇtch
);

624 
	`˛o£
(
pùefd
[1]);

627 (
n
 = 
	`ªad
(
pùefd
[0], 
buf
, 80)) > 0) {

628 
±r
 = 
buf
;

629 
n
--)

630 
	`vt_out
(*
±r
++);

631 
	`timî_upd©e
();

632 
	`wÊush
();

636 (Ë
	`m_waô
(&
°©us
);

637 
	`íab_sig
(0, 0);

638 
	`sig«l
(
SIGINT
, 
SIG_IGN
);

639 (Ë
	`£tcbªak
(2);

640 
	`˛o£
(
pùefd
[0]);

641 
	`s¸ùäame
("");

642 (Ë
	`mcd
("");

643 
	}
}

	@util.c

15 #ifde‡
HAVE_CONFIG_H


16 
	~<c⁄fig.h
>

19 
	~"rcsid.h
"

20 
RCSID
("$Id: util.c,v 1.3 2000/01/27 11:25:31 misiek Exp $")

22 
	~"p‹t.h
"

23 
	~"möicom.h
"

24 
	~"öé.h
"

26 
	gnŸ_suid
 = -1;

31 
	$gë¨gs
(
s
, 
¨ps
, 
max¨gs
)

32 *
s
;

33 *
¨ps
[];

34 
max¨gs
;

36 
i
;

37 *
•
;

38 
qch¨
;

39 
lôîÆ
 = 0;

41 
i
 = 0;

42 
i
 < 
max¨gs
) {

43 *
s
 == ' ' || *s == '\t')

44 ++
s
;

45 i‡(*
s
 == '\n' || *s == '\0')

47 
¨ps
[
i
++] = 
•
 = 
s
;

48 
qch¨
 = 0;

49 *
s
 != '\0' && *s != '\n') {

50 i‡(
lôîÆ
) {

51 
lôîÆ
 = 0;

52 *
•
++ = *
s
++;

55 
lôîÆ
 = 0;

56 i‡(
qch¨
 =0 && (*
s
 == ' ' || *s == '\t')) {

57 ++
s
;

60 *
s
) {

62 *
•
++ = *
s
++;

65 
lôîÆ
 = 1;

66 
s
++;

70 if(
qch¨
 =*
s
) {

71 
qch¨
 = 0;

72 ++
s
;

75 if(
qch¨
)

76 *
•
++ = *
s
++;

78 
qch¨
 = *
s
++;

82 *
•
++ = 0;

84 i‡(
i
 >
max¨gs
)

86 
¨ps
[
i
] = (*)0;

87  
i
;

88 
	}
}

93 
	$™ys
(
s1
, 
s2
)

94 *
s1
, *
s2
;

96 *
s2
)

97 i‡(
	`°rchr
(
s1
, *
s2
++Ë!(*)
NULL
) (1);

99 
	}
}

105 
	$Á°exec
(
cmd
)

106 *
cmd
;

108 *
w‹ds
[128];

109 *
p
;

111 i‡(
	`™ys
(
cmd
, "~`$&*()=|{};?><"))

112 (
	`exe˛
("/bö/sh", "sh", "-c", 
cmd
, (*)0));

115 
p
 = 
cmd
;

116 (
p
 = 
	`°rchr
’, '\\')Ë!(*)
NULL
)

117 
	`°r˝y
(
p
,Ö + 1);

120 i‡(
	`gë¨gs
(
cmd
, 
w‹ds
, 127) < 0) {

123  (
	`execvp
(
w‹ds
[0], words));

124 
	}
}

133 
	$Á°sy°em
(
cmd
, 
ö
, 
out
, 
îr
)

134 *
cmd
, *
ö
, *
out
, *
îr
;

136 
pid
;

137 
°
;

138 
async
 = 0;

139 *
p
;

142 
p
 = 
	`°ºchr
(
cmd
, '&');

143 i‡(
p
 != (*)0 && !p[1]) {

144 *
p
 = 0;

145 
async
 = 1;

149 i‡((
pid
 = 
	`f‹k
()) == 0) {

150 i‡(
ö
 !(*)
NULL
) {

151 
	`˛o£
(0);

152 i‡(
	`›í
(
ö
, 
O_RDONLY
Ë< 0Ë
	`exô
(-1);

154 i‡(
out
 !(*)
NULL
) {

155 
	`˛o£
(1);

156 i‡(
	`›í
(
out
, 
O_WRONLY
Ë< 0Ë
	`exô
(-1);

158 i‡(
îr
 !(*)
NULL
) {

159 
	`˛o£
(2);

160 i‡(
	`›í
(
îr
, 
O_RDWR
Ë< 0Ë
	`exô
(-1);

162 
	`exô
(
	`Á°exec
(
cmd
));

163 } i‡(
pid
 > 0) {

164 i‡(
async
) (0);

165 
pid
 = 
	`m_waô
(&
°
);

166 i‡(
pid
 < 0) (-1);

167 (
°
);

170 
	}
}

173 
	$dr›_Æl_¥ivs
()

175 #ifde‡
HAS_REUID


177 
	`£åegid
(
ªÆ_gid
, 
eff_gid
);

178 
	`£åeuid
(
ªÆ_uid
, 
eff_uid
);

182 
	`£tgid
(
ªÆ_gid
);

183 
	`£tuid
(
ªÆ_uid
);

184 
eff_uid
 = 
ªÆ_uid
;

185 
eff_gid
 = 
ªÆ_gid
;

186 
nŸ_suid
 = 1;

187 
	}
}

190 
	$dr›_¥ivs
()

192 #ifde‡
HAS_REUID


193 
	`£åegid
(
eff_gid
, 
ªÆ_gid
);

194 i‡(
	`£åeuid
(
eff_uid
, 
ªÆ_uid
) < 0)

195 
	`Ârötf
(
°dîr
, 
	`_
("möicom: c™nŸ sëªuid(%d, %d)\n"), 
eff_uid
, 
ªÆ_uid
);

196 
nŸ_suid
 = 1;

198 
	}
}

201 
	$£t_¥ivs
()

203 #ifde‡
HAS_REUID


204 
	`£åegid
(
ªÆ_gid
, 
eff_gid
);

205 i‡(
	`£åeuid
(
ªÆ_uid
, 
eff_uid
) < 0)

206 
	`Ârötf
(
°dîr
, 
	`_
("möicom: c™nŸ sëªuid(%d, %d)\n"), 
ªÆ_uid
, 
eff_uid
);

207 
nŸ_suid
 = 0;

209 
	}
}

212 
FILE
 *
	$sf›í
(
fûe
, 
mode
)

213 *
fûe
;

214 *
mode
;

216 #ifde‡
HAS_REUID


217 
ßved_î∫o
;

219 *
p
, 
buf
[128];

220 
°©
 
°t
;

221 
do_chown
 = 0;

223 
FILE
 *
Â
;

226 i‡(
nŸ_suid
 < 0ËnŸ_suid = (
ªÆ_uid
 =
eff_uid
);

229 i‡(
nŸ_suid
Ë (
	`f›í
(
fûe
, 
mode
));

231 #ifde‡
HAS_REUID


233 
	`dr›_¥ivs
();

234 
Â
 = 
	`f›í
(
fûe
, 
mode
);

235 
ßved_î∫o
 = 
î∫o
;

236 
	`£t_¥ivs
();

237 
î∫o
 = 
ßved_î∫o
;

238 (
Â
);

242 i‡(
	`°rcmp
(
mode
, "r") == 0) {

243 i‡(
	`ac˚ss
(
fûe
, 
R_OK
Ë< 0Ë(
NULL
);

244 (
	`f›í
(
fûe
, 
mode
));

248 i‡(
	`°©
(
fûe
, &
°t
) == 0) {

249 i‡(
	`ac˚ss
(
fûe
, 
W_OK
Ë< 0Ë(
NULL
);

252 
	`°∫˝y
(
buf
, 
fûe
, (buf));

253 if((
p
 = 
	`°ºchr
(
buf
, '/')Ë=(*)
NULL
)

254 
	`°r˝y
(
buf
, ".");

256 *
p
 = '\0';

257 i‡(
	`ac˚ss
(
buf
, 
W_OK
Ë< 0Ë(
NULL
);

258 
do_chown
 = 1;

262 i‡((
Â
 = 
	`f›í
(
fûe
, 
mode
)Ë=
NULL
) (fp);

263 i‡(!
do_chown
Ë(
Â
);

265 #i‚de‡
HAS_FCHOWN


267 (Ë
	`chown
(
fûe
, (
uid_t
)
ªÆ_uid
, (
gid_t
)
ªÆ_gid
);

270 (Ë
	`fchown
(
	`fûío
(
Â
), (
uid_t
)
ªÆ_uid
, (
gid_t
)
ªÆ_gid
);

272 (
Â
);

274 
	}
}

288 
	$gë_p‹t
(*
p‹t_li°
)

290 
√xt_p‹t
[
PARS_VAL_LEN
];

291 
loc_p‹t_li°
[
PARS_VAL_LEN
];

292 *
•
 = 
NULL
;

293 *
ï
;

296 if(
•
 =
NULL
) {

297 
	`°∫˝y
(
loc_p‹t_li°
, 
p‹t_li°
, 
PARS_VAL_LEN
);

298 
loc_p‹t_li°
[
PARS_VAL_LEN
] = () 0;

299 
ï
 = &
loc_p‹t_li°
[
	`°æí
(loc_port_list)];

300 
•
 = 
	`°πok
(
loc_p‹t_li°
, ":;, ");

302 if(*
•
 != () 0) {

303 
•
 = 
	`°πok
(sp, ":;, ");

306 
•
 = 
NULL
;

308 if(
•
 !
NULL
) {

309 
	`°∫˝y
(
√xt_p‹t
, 
•
, 
PARS_VAL_LEN
);

310 
√xt_p‹t
[
PARS_VAL_LEN
] = () 0;

312 
•
 +
	`°æí
(
√xt_p‹t
); s∞!
ï
 && *sp != '/'; ++sp)

314 (
√xt_p‹t
);

317 (
NULL
);

319 
	}
}

	@vt100.c

21 #ifde‡
HAVE_CONFIG_H


22 
	~<c⁄fig.h
>

25 
	~"rcsid.h
"

26 
RCSID
("$Id: vt100.c,v 1.3 2000/02/09 08:34:57 misiek Exp $")

28 
	~"p‹t.h
"

29 
	~"wödow.h
"

30 
	~"vt100.h
"

31 
	~"c⁄fig.h
"

32 
	~"c⁄figsym.h
"

34 
	#OLD
 0

	)

47 
	gesc_s
 = 0;

49 
	#ESC
 27

	)

52 
	sesc£q
 {

53 
	mcode
;

54 *
	mvt100_°
;

55 *
	mvt100_≠p
;

56 *
	m™si
;

60 
esc£q
 
	gvt_keys
[] = {

61 #i‚de‡
_DGUX_SOURCE


62 { 
K_F1
, "OP", "OP", "OP" },

63 { 
K_F2
, "OQ", "OQ", "OQ" },

64 { 
K_F3
, "OR", "OR", "OR" },

65 { 
K_F4
, "OS", "OS", "OS" },

66 { 
K_F5
, "[16~", "[16~", "OT" },

67 { 
K_F6
, "[17~", "[17~", "OU" },

68 { 
K_F7
, "[18~", "[18~", "OV" },

69 { 
K_F8
, "[19~", "[19~", "OW" },

70 { 
K_F9
, "[20~", "[20~", "OX" },

71 { 
K_F10
, "[21~", "[21~", "OY" },

72 { 
K_F11
, "[23~", "[23~", "OY" },

73 { 
K_F12
, "[24~", "[24~", "OY" },

74 { 
K_HOME
, "[1~", "[1~", "[H" },

75 { 
K_PGUP
, "[5~", "[5~", "[V" },

76 { 
K_UP
, "[A", "OA", "[A" },

77 { 
K_LT
, "[D", "OD", "[D" },

78 { 
K_RT
, "[C", "OC", "[C" },

79 { 
K_DN
, "[B", "OB", "[B" },

80 { 
K_END
, "[4~", "[4~", "[Y" },

81 { 
K_PGDN
, "[6~", "[6~", "[U" },

82 { 
K_INS
, "[2~", "[2~", "[@" },

83 { 
K_DEL
, "[3~", "[3~", "\177" },

84 { 0, 
NULL
, NULL, NULL }

86 { 
K_F1
, "[17~", "[17~", "OP" },

87 { 
K_F2
, "[18~", "[18~", "OQ" },

88 { 
K_F3
, "[19~", "[19~", "OR" },

89 { 
K_F4
, "[20~", "[20~", "OS" },

90 { 
K_F5
, "[21~", "[21~", "OT" },

91 { 
K_F6
, "[23~", "[23~", "OU" },

92 { 
K_F7
, "[24~", "[24~", "OV" },

93 { 
K_F8
, "[25~", "[25~", "OW" },

94 { 
K_F9
, "[26~", "[26~", "OX" },

95 { 
K_F10
, "[28~", "[28~", "OY" },

96 { 
K_F11
, "[29~", "[29~", "OZ" },

97 { 
K_F12
, "[31~", "[31~", "OA" },

98 { 
K_HOME
, "OP", "OP", "[H" },

99 { 
K_PGUP
, "OQ", "OQ", "[V" },

100 { 
K_UP
, "[A", "OA", "[A" },

101 { 
K_LT
, "[D", "OD", "[D" },

102 { 
K_RT
, "[C", "OC", "[C" },

103 { 
K_DN
, "[B", "OB", "[B" },

104 { 
K_END
, "OR", "OR", "[Y" },

105 { 
K_PGDN
, "OS", "OS", "[U" },

106 { 
K_INS
, "[1~", "[1~", "[@" },

107 { 
K_DEL
, "[3~", "[3~", "\177" },

108 { 0, 
NULL
, NULL, NULL }

117 
	gvt_öm≠
[256] = {

118 
	~"defm≠.h
"

120 
	gvt_outm≠
[256] = {

121 
	~"defm≠.h
"

124 #i‡
TRANSLATE


126 * 
	gvt_m≠
[] = {

159 *
	gvt_å™s
[2];

160 
	gvt_ch¨£t
 = 0;

163 #ifde‡
HAVE_SELECT


164 
	gvt_echo
;

166 
	gvt_∆_dñay
;

167 
	gvt_ty≥
 = 
ANSI
;

168 
	gvt_wøp
 = 0;

169 
	gvt_addlf
 = 0;

170 
	gvt_fg
;

171 
	gvt_bg
;

172 
	gvt_key∑d
;

173 
	gvt_curs‹
;

174 
	gvt_asis
 = 0;

175 
	gvt_bs
 = 8;

176 
	gvt_ö£π
 = 0;

177 
	gvt_¸lf
 = 0;

178 
	gvt_om
;

179 
WIN
 *
	gvt_wö
 = 
NIL_WIN
;

180 
	gvt_doˇp
;

181 
FILE
 *
	gvt_ˇpÂ
;

182 (*
	gvt_keyb
)();

183 (*
	gãrmout
)();

185 
	ges˝¨ms
[8];

186 #i‡
OLD


187 
	g±r
 = -2;

189 
	g±r
 = 0;

191 
	gvt_èbs
[5];

193 
	g√wy1
 = 0;

194 
	g√wy2
 = 23;

197 
	gßvex
 = 0, 
	gßvey
 = 0, 
	gßvóâr
 = 
XA_NORMAL
, 
	gßvecﬁ
 = 112;

199 #i‡
TRANSLATE


200 
	gßvech¨£t
;

201 *
	gßvëøns
[2];

207 
	$vt_ö°Æl
(
fun1
, 
fun2
, 
wö
)

208 (*
fun1
)();

209 (*
fun2
)();

210 
WIN
 *
wö
;

212 
ãrmout
 = 
fun1
;

213 
vt_keyb
 = 
fun2
;

214 
vt_wö
 = 
wö
;

215 
	}
}

218 
	$vt_pöô
(
wö
, 
fg
, 
bg
)

219 
WIN
 *
wö
;

220 
fg
, 
bg
;

222 
vt_wö
 = 
wö
;

223 
√wy1
 = 0;

224 
√wy2
 = 
vt_wö
->
ys
 - 1;

225 
	`wª£åegi⁄
(
vt_wö
);

226 i‡(
fg
 > 0Ë
vt_fg
 = fg;

227 i‡(
bg
 > 0Ë
vt_bg
 = bg;

228 
	`w£tfgcﬁ
(
vt_wö
, 
vt_fg
);

229 
	`w£tbgcﬁ
(
vt_wö
, 
vt_bg
);

230 
	}
}

233 
	$vt_öô
(
ty≥
, 
fg
, 
bg
, 
wøp
, 
add
)

234 
ty≥
;

235 
fg
;

236 
bg
;

237 
wøp
;

238 
add
;

240 
vt_ty≥
 = 
ty≥
;

241 i‡(
vt_ty≥
 =
ANSI
) {

242 
vt_fg
 = 
WHITE
;

243 
vt_bg
 = 
BLACK
;

245 
vt_fg
 = 
fg
;

246 
vt_bg
 = 
bg
;

248 i‡(
wøp
 >0Ë
vt_wö
->wø∞
vt_wøp
 = wrap;

249 
vt_addlf
 = 
add
;

250 
vt_ö£π
 = 0;

251 
vt_¸lf
 = 0;

252 
vt_om
 = 0;

254 
√wy1
 = 0;

255 
√wy2
 = 
vt_wö
->
ys
 - 1;

256 
	`wª£åegi⁄
(
vt_wö
);

257 
vt_key∑d
 = 
NORMAL
;

258 
vt_curs‹
 = 
NORMAL
;

259 #ifde‡
HAVE_SELECT


260 
vt_echo
 = 0;

262 
vt_èbs
[0] = 0x01010100;

263 
vt_èbs
[1] =

264 
vt_èbs
[2] =

265 
vt_èbs
[3] =

266 
vt_èbs
[4] = 0x01010101;

267 #i‡
TRANSLATE


268 
vt_ch¨£t
 = 0;

269 
vt_å™s
[0] = 
vt_m≠
[0];

270 
vt_å™s
[1] = 
vt_m≠
[1];

272 #i‡
OLD


273 
±r
 = -2;

275 
±r
 = 0;

276 
	`mem£t
(
es˝¨ms
, 0, (escparms));

278 
esc_s
 = 0;

280 i‡(
vt_keyb
Ë(*vt_keyb)(
vt_key∑d
, 
vt_curs‹
);

281 
	`w£tfgcﬁ
(
vt_wö
, 
vt_fg
);

282 
	`w£tbgcﬁ
(
vt_wö
, 
vt_bg
);

283 
	}
}

286 
	$vt_£t
(
addlf
, 
wøp
, 
ˇpÂ
, 
doˇp
, 
bscode
, 
echo
, 
curs‹
, 
asis
)

287 
addlf
;

288 
wøp
;

289 
FILE
 *
ˇpÂ
;

290 
doˇp
;

291 
bscode
;

292 
echo
;

293 
curs‹
;

294 
asis
;

296 i‡(
addlf
 >0Ë
vt_addlf
 =áddlf;

297 i‡(
wøp
 >0Ë
vt_wö
->wø∞
vt_wøp
 = wrap;

298 i‡(
ˇpÂ
 !(
FILE
 *)0Ë
vt_ˇpÂ
 = capfp;

299 i‡(
doˇp
 >0Ë
vt_doˇp
 = docap;

300 i‡(
bscode
 >0Ë
vt_bs
 = bscode;

301 #ifde‡
HAVE_SELECT


302 i‡(
echo
 >0Ë
vt_echo
 =Écho;

304 i‡(
curs‹
 >0Ë
vt_curs‹
 = cursor;

305 i‡(
asis
 >=0Ë
vt_asis
 =ásis;

306 
	}
}

309 
	$v_ãrmout
(
s
, 
Àn
)

310 *
s
;

311 
Àn
;

313 #ifde‡
HAVE_SELECT


314 *
p
;

316 i‡(
vt_echo
) {

317 
p
 = 
s
; *p;Ö++) {

318 
	`vt_out
(*
p
);

319 i‡(!
vt_addlf
 && *
p
 ='\r'Ë
	`vt_out
('\n');

321 
	`wÊush
();

324 (*
ãrmout
)(
s
, 
Àn
);

325 
	}
}

334 
	$°©e1
(
c
)

335 
c
;

337 
x
, 
y
, 
f
;

339 
c
) {

341 
esc_s
 = 2;

344 
esc_s
 = 4;

347 
esc_s
 = 5;

350 
esc_s
 = 6;

353 
esc_s
 = 7;

357 
x
 = 
vt_wö
->
curx
;

358 i‡(
c
 == 'D') {

359 
y
 = 
vt_wö
->
cury
 + 1;

360 i‡(
y
 =
√wy2
 + 1)

361 
	`ws¸ﬁl
(
vt_wö
, 
S_UP
);

362 i‡(
vt_wö
->
cury
 < vt_wö->
ys
)

363 
	`wloˇã
(
vt_wö
, 
x
, 
y
);

365 i‡(
c
 == 'M') {

366 
y
 = 
vt_wö
->
cury
 - 1;

367 i‡(
y
 =
√wy1
 - 1)

368 
	`ws¸ﬁl
(
vt_wö
, 
S_DOWN
);

369 i‡(
y
 >= 0)

370 
	`wloˇã
(
vt_wö
, 
x
, 
y
);

374 
	`wputs
(
vt_wö
, "\r\n");

378 
ßvex
 = 
vt_wö
->
curx
;

379 
ßvey
 = 
vt_wö
->
cury
;

380 
ßvóâr
 = 
vt_wö
->
©å
;

381 
ßvecﬁ
 = 
vt_wö
->
cﬁ‹
;

382 #i‡
TRANSLATE


383 
ßvech¨£t
 = 
vt_ch¨£t
;

384 
ßvëøns
[0] = 
vt_å™s
[0];

385 
ßvëøns
[1] = 
vt_å™s
[1];

390 #i‡
TRANSLATE


391 
vt_ch¨£t
 = 
ßvech¨£t
;

392 
vt_å™s
[0] = 
ßvëøns
[0];

393 
vt_å™s
[1] = 
ßvëøns
[1];

395 
vt_wö
->
cﬁ‹
 = 
ßvecﬁ
;

396 
	`w£èâr
(
vt_wö
, 
ßvóâr
);

397 
	`wloˇã
(
vt_wö
, 
ßvex
, 
ßvey
);

400 
vt_key∑d
 = 
APPL
;

401 i‡(
vt_keyb
Ë(*vt_keyb)(
vt_key∑d
, 
vt_curs‹
);

404 
vt_key∑d
 = 
NORMAL
;

405 i‡(
vt_keyb
Ë(*vt_keyb)(
vt_key∑d
, 
vt_curs‹
);

408 i‡(
vt_ty≥
 =
VT100
)

409 
	`v_ãrmout
("\033[?1;0c", 0);

411 
	`v_ãrmout
("\033[?c", 0);

414 
f
 = 
XA_NORMAL
;

415 
	`w£èâr
(
vt_wö
, 
f
);

416 
vt_wö
->
wøp
 = (
vt_ty≥
 !
VT100
);

417 i‡(
vt_wøp
 !-1Ë
vt_wö
->
wøp
 = vt_wrap;

418 
vt_¸lf
 = 
vt_ö£π
 = 0;

419 
	`vt_öô
(
vt_ty≥
, 
vt_fg
, 
vt_bg
, 
vt_wö
->
wøp
, 0);

420 
	`wloˇã
(
vt_wö
, 0, 0);

423 
x
 = 
vt_wö
->
curx
;

424 i‡(
x
 > 159) x = 159;

425 
vt_èbs
[
x
 / 32] |= 1 << (x % 32);

434 
esc_s
 = 0;

436 
	}
}

439 
	$™si_mode
(
⁄_off
)

440 
⁄_off
;

442 
i
;

444 
i
 = 0; i <
±r
; i++) {

445 
es˝¨ms
[
i
]) {

447 
vt_ö£π
 = 
⁄_off
;

450 
vt_¸lf
 = 
⁄_off
;

454 
	}
}

459 
	$°©e2
(
c
)

460 
c
;

462 
x
, 
y
, 
©å
, 
f
;

463 
ãmp
[32];

466 i‡(
c
 >= '0' && c <= '9') {

467 #i‡
OLD


468 i‡(
±r
 < 0)Ötr = 0;

470 
es˝¨ms
[
±r
] = 10*”s˝¨ms[±r]Ë+ 
c
 - '0';

474 i‡(
c
 == ';') {

475 #i‡
OLD


476 i‡(
±r
 < 0)Ötr = 0;

477 i‡(
±r
 >= 0 &&Ötr < 15)Ötr++;

479 i‡(
±r
 < 15)Ötr++;

484 #i‡
OLD


485 i‡(
±r
 < 0 && 
c
 == '?') {

487 i‡(
es˝¨ms
[0] =0 && 
±r
 =0 && 
c
 == '?') {

489 
esc_s
 = 3;

494 
c
) {

499 i‡((
f
 = 
es˝¨ms
[0]) == 0) f = 1;

500 
x
 = 
vt_wö
->
curx
;

501 
y
 = 
vt_wö
->
cury
;

502 
x
 +
f
 * ((
c
 == 'C') - (c == 'D'));

503 i‡(
x
 < 0) x = 0;

504 i‡(
x
 >
vt_wö
->
xs
) x = vt_win->xs - 1;

505 i‡(
c
 == 'B') {

506 
y
 +
f
;

507 i‡(
y
 >
vt_wö
->
ys
) y = vt_win->ys - 1;

508 i‡(
y
 >
√wy2
 + 1) y =Çewy2;

510 i‡(
c
 == 'A') {

511 
y
 -
f
;

512 i‡(
y
 < 0) y = 0;

513 i‡(
y
 <
√wy1
 - 1) y =Çewy1;

515 
	`wloˇã
(
vt_wö
, 
x
, 
y
);

518 
es˝¨ms
[0]) {

520 
	`w˛ªﬁ
(
vt_wö
);

523 
	`w˛rbﬁ
(
vt_wö
);

526 
	`w˛ªl
(
vt_wö
);

531 
x
 = 
vt_wö
->
cﬁ‹
;

532 
y
 = 
vt_wö
->
©å
;

533 i‡(
vt_ty≥
 =
ANSI
) {

534 
	`w£èâr
(
vt_wö
, 
XA_NORMAL
);

535 
	`w£tfgcﬁ
(
vt_wö
, 
WHITE
);

536 
	`w£tbgcﬁ
(
vt_wö
, 
BLACK
);

538 
es˝¨ms
[0]) {

540 
	`w˛ªos
(
vt_wö
);

543 
	`w˛rbos
(
vt_wö
);

546 
	`wö˛r
(
vt_wö
);

549 i‡(
vt_ty≥
 =
ANSI
) {

550 
vt_wö
->
cﬁ‹
 = 
x
;

551 
vt_wö
->
©å
 = 
y
;

555 
es˝¨ms
[0]) {

557 
	`v_ãrmout
("\033[0n", 0);

560 
	`•rötf
(
ãmp
, "\033[%d;%dR",

561 
vt_wö
->
cury
 + 1, vt_wö->
curx
 + 1);

562 
	`v_ãrmout
(
ãmp
, 0);

567 i‡(
vt_ty≥
 =
VT100
) {

568 
	`v_ãrmout
("\033[?1;2c", 0);

571 
	`v_ãrmout
("\033[?c", 0);

575 
	`•rötf
(
ãmp
, "\033[%c;1;1;120;120;1;0x",

576 
es˝¨ms
[0] == 1 ? '3' : '2');

577 
	`v_ãrmout
(
ãmp
, 0);

580 
ßvex
 = 
vt_wö
->
curx
;

581 
ßvey
 = 
vt_wö
->
cury
;

582 
ßvóâr
 = 
vt_wö
->
©å
;

583 
ßvecﬁ
 = 
vt_wö
->
cﬁ‹
;

584 #i‡
TRANSLATE


585 
ßvech¨£t
 = 
vt_ch¨£t
;

586 
ßvëøns
[0] = 
vt_å™s
[0];

587 
ßvëøns
[1] = 
vt_å™s
[1];

591 #i‡
TRANSLATE


592 
vt_ch¨£t
 = 
ßvech¨£t
;

593 
vt_å™s
[0] = 
ßvëøns
[0];

594 
vt_å™s
[1] = 
ßvëøns
[1];

597 
vt_wö
->
cﬁ‹
 = 
ßvecﬁ
;

598 
	`w£èâr
(
vt_wö
, 
ßvóâr
);

599 
	`wloˇã
(
vt_wö
, 
ßvex
, 
ßvey
);

602 
	`™si_mode
(1);

605 
	`™si_mode
(0);

609 i‡((
y
 = 
es˝¨ms
[0]) == 0) y = 1;

610 i‡((
x
 = 
es˝¨ms
[1]) == 0) x = 1;

611 i‡(
vt_om
Ë
y
 +
√wy1
;

612 
	`wloˇã
(
vt_wö
, 
x
 - 1, 
y
 - 1);

615 i‡(
es˝¨ms
[0] == 0) {

616 
x
 = 
vt_wö
->
curx
;

617 i‡(
x
 > 159) x = 159;

618 
vt_èbs
[
x
 / 32] &= ~ (1 << x % 32);

620 i‡(
es˝¨ms
[0] == 3)

621 
x
 = 0; x < 5; x++Ë
vt_èbs
[x] = 0;

624 #i‡
OLD


626 i‡(
±r
 < 0)Ötr = 0;

628 
©å
 = 
	`wgë©å
((
vt_wö
));

629 
f
 = 0; f <
±r
; f++) {

630 i‡(
es˝¨ms
[
f
] >= 30 &&Éscparms[f] <= 37)

631 
	`w£tfgcﬁ
(
vt_wö
, 
es˝¨ms
[
f
] - 30);

632 i‡(
es˝¨ms
[
f
] >= 40 &&Éscparms[f] <= 47)

633 
	`w£tbgcﬁ
(
vt_wö
, 
es˝¨ms
[
f
] - 40);

634 
es˝¨ms
[
f
]) {

636 
©å
 = 
XA_NORMAL
;

637 
	`w£tfgcﬁ
(
vt_wö
, 
vt_fg
);

638 
	`w£tbgcﬁ
(
vt_wö
, 
vt_bg
);

641 
©å
 |
XA_UNDERLINE
;

644 
©å
 |
XA_REVERSE
;

647 
©å
 |
XA_BOLD
;

650 
©å
 |
XA_BLINK
;

653 
©å
 &~
XA_BOLD
;

656 
©å
 &=~
XA_UNDERLINE
;

659 
©å
 &~
XA_BLINK
;

662 
©å
 &~
XA_REVERSE
;

665 
	`w£tfgcﬁ
(
vt_wö
, 
vt_fg
);

668 
	`w£tbgcﬁ
(
vt_wö
, 
vt_bg
);

673 
	`w£èâr
(
vt_wö
, 
©å
);

676 i‡((
x
 = 
es˝¨ms
[0]) == 0) x = 1;

677 
f
 = 0; f < 
x
; f++)

678 
	`wö¶öe
(
vt_wö
);

681 i‡((
x
 = 
es˝¨ms
[0]) == 0) x = 1;

682 
f
 = 0; f < 
x
; f++)

683 
	`wdñlöe
(
vt_wö
);

686 i‡((
x
 = 
es˝¨ms
[0]) == 0) x = 1;

687 
f
 = 0; f < 
x
; f++)

688 
	`wdñch¨
(
vt_wö
);

691 i‡((
x
 = 
es˝¨ms
[0]) == 0) x = 1;

692 
f
 = 0; f < 
x
; f++)

693 
	`wösch¨
(
vt_wö
);

696 i‡((
√wy1
 = 
es˝¨ms
[0]) == 0)Çewy1 = 1;

697 i‡((
√wy2
 = 
es˝¨ms
[1]Ë=0Ë√wy2 = 
vt_wö
->
ys
;

698 
√wy1
-- ; 
√wy2
--;

699 i‡(
√wy1
 < 0)Çewy1 = 0;

700 i‡(
√wy2
 < 0)Çewy2 = 0;

701 i‡(
√wy1
 >
vt_wö
->
ys
)Çewy1 = vt_win->ys - 1;

702 i‡(
√wy2
 >
vt_wö
->
ys
)Çewy2 = vt_win->ys - 1;

703 i‡(
√wy1
 >
√wy2
) {

704 
√wy1
 = 0;

705 
√wy2
 = 
vt_wö
->
ys
 - 1;

707 
	`w£åegi⁄
(
vt_wö
, 
√wy1
, 
√wy2
);

708 
	`wloˇã
(
vt_wö
, 0, 
√wy1
);

717 
esc_s
 = 0;

718 #i‡
OLD


719 
±r
 = -2;

721 
±r
 = 0;

722 
	`mem£t
(
es˝¨ms
, 0, (escparms));

725 
	}
}

728 
	$dec_mode
(
⁄_off
)

729 
⁄_off
;

731 
i
;

733 
i
 = 0; i <
±r
; i++) {

734 
es˝¨ms
[
i
]) {

736 
vt_curs‹
 = 
⁄_off
 ? 
APPL
 : 
NORMAL
;

737 i‡(
vt_keyb
Ë(*vt_keyb)(
vt_key∑d
, 
vt_curs‹
);

740 
vt_om
 = 
⁄_off
;

741 
	`wloˇã
(
vt_wö
, 0, 
√wy1
);

744 
vt_wö
->
wøp
 = 
⁄_off
;

747 
	`wcurs‹
(
vt_wö
, 
⁄_off
 ? 
CNORMAL
 : 
CNONE
);

757 
	}
}

762 
	$°©e3
(
c
)

763 
c
;

766 i‡(
c
 >= '0' && c <= '9') {

767 #i‡
OLD


768 i‡(
±r
 < 0)Ötr = 0;

770 
es˝¨ms
[
±r
] = 10*”s˝¨ms[±r]Ë+ 
c
 - '0';

773 #i‡
OLD


775 i‡(
±r
 < 0) {

776 
esc_s
 = 0;

780 
c
) {

782 
	`dec_mode
(1);

785 
	`dec_mode
(0);

793 
esc_s
 = 0;

794 #i‡
OLD


795 
±r
 = -2;

797 
±r
 = 0;

798 
	`mem£t
(
es˝¨ms
, 0, (escparms));

801 
	}
}

807 
	$°©e4
(
c
)

808 
c
;

811 #i‡!
TRANSLATE


813 ()
c
;

815 
c
) {

818 
vt_å™s
[0] = 
vt_m≠
[0];

822 
vt_å™s
[0] = 
vt_m≠
[1];

826 
esc_s
 = 0;

827 
	}
}

833 
	$°©e5
(
c
)

834 
c
;

837 #i‡!
TRANSLATE


839 ()
c
;

841 
c
) {

844 
vt_å™s
[1] = 
vt_m≠
[0];

848 
vt_å™s
[1] = 
vt_m≠
[1];

852 
esc_s
 = 0;

853 
	}
}

859 
	$°©e6
(
c
)

860 
c
;

862 
x
, 
y
;

865 
c
) {

868 
vt_wö
->
dos¸ﬁl
 = 0;

869 
vt_wö
->
dúe˘
 = 0;

870 
	`wloˇã
(
vt_wö
, 0, 0);

871 
y
 = 0; y < 
vt_wö
->
ys
; y++) {

872 
	`wloˇã
(
vt_wö
, 0, 
y
);

873 
x
 = 0; x < 
vt_wö
->
xs
; x++)

874 
	`wputc
(
vt_wö
, 'E');

876 
	`wloˇã
(
vt_wö
, 0, 0);

877 
vt_wö
->
dos¸ﬁl
 = 1;

878 
	`wªdøw
(
vt_wö
, 1);

884 
esc_s
 = 0;

885 
	}
}

890 
	$°©e7
(
c
)

891 
c
;

898 
buf
[17];

899 
pos
 = 0;

900 
°©e
 = 0;

902 i‡(
c
 =
ESC
) {

903 
°©e
 = 1;

906 i‡(
°©e
 == 1) {

907 
buf
[
pos
] = 0;

908 
pos
 = 0;

909 
°©e
 = 0;

910 
esc_s
 = 0;

911 i‡(
c
 != '\\') ;

913 i‡(!
	`°rcmp
(
buf
, "curs‹.⁄")Ë
	`wcurs‹
(
vt_wö
, 
CNORMAL
);

914 i‡(!
	`°rcmp
(
buf
, "curs‹.off")Ë
	`wcurs‹
(
vt_wö
, 
CNONE
);

915 i‡(!
	`°rcmp
(
buf
, "linewrap.on")) {

916 
vt_wøp
 = -1;

917 
vt_wö
->
wøp
 = 1;

919 i‡(!
	`°rcmp
(
buf
, "linewrap.off")) {

920 
vt_wøp
 = -1;

921 
vt_wö
->
wøp
 = 0;

925 i‡(
pos
 > 15) ;

926 
buf
[
pos
++] = 
c
;

927 
	}
}

929 
	$vt_out
(
ch
)

930 
ch
;

932 
f
;

933 
c
;

934 
go_⁄
 = 0;

936 i‡(!
ch
) ;

938 #i‡
OLD


939 i‡(
±r
 == -2) {

940 
±r
 = -1;

941 
f
 = 0; f < 8; f++Ë
es˝¨ms
[f] = 0;

945 
c
 = ()
ch
;

947 i‡(
vt_doˇp
 == 2)

948 
	`Âutc
(
c
, 
vt_ˇpÂ
);

951 
c
) {

953 i‡(
vt_ty≥
 !
VT100
) {

954 
go_⁄
 = 1;

957 
	`v_ãrmout
("Möicom" 
VERSION
, 0);

960 
	`wputc
(
vt_wö
, 
c
);

961 i‡(
vt_addlf
) {

962 
	`wputc
(
vt_wö
, '\n');

963 i‡(
vt_doˇp
 == 1)

964 
	`Âutc
('\n', 
vt_ˇpÂ
);

969 
f
 = 
vt_wö
->
curx
 + 1; f < 160; f++)

970 i‡(
vt_èbs
[
f
 / 32] & (1 << f % 32)) ;

971 i‡(
f
 >
vt_wö
->
xs
) f = vt_win->xs - 1;

972 
	`wloˇã
(
vt_wö
, 
f
, vt_wö->
cury
);

973 i‡(
vt_doˇp
 =1Ë
	`Âutc
(
c
, 
vt_ˇpÂ
);

976 
	`wloˇã
(
vt_wö
, vt_wö->
curx
, vt_wö->
cury
 - 1);

979 
	`wö˛r
(
vt_wö
);

980 
	`wloˇã
(
vt_wö
, 0, 0);

982 #i‡!
TRANSLATE


988 
vt_ch¨£t
 = 1;

991 
vt_ch¨£t
 = 0;

996 
esc_s
 = 0;

998 
ESC
:

999 
esc_s
 = 1;

1001 128+
ESC
:

1002 
esc_s
 = 2;

1007 
	`wputc
(
vt_wö
, 
c
);

1008 i‡(
vt_doˇp
 == 1)

1009 
	`Âutc
(
c
, 
vt_ˇpÂ
);

1012 
go_⁄
 = 1;

1015 i‡(!
go_⁄
) ;

1018 
esc_s
) {

1020 i‡(
vt_doˇp
 == 1)

1021 
	`Âutc
(
P_CONVCAP
[0]=='Y'? 
vt_öm≠
[
c
]: c, 
vt_ˇpÂ
);

1022 
c
 = 
vt_öm≠
[c];

1023 #i‡
TRANSLATE


1024 i‡(
vt_ty≥
 =
VT100
 && 
vt_asis
 == 0) {

1025 i‡(
vt_ö£π
)

1026 
	`wösch¨2
(
vt_wö
, 
vt_å™s
[
vt_ch¨£t
][
c
], 1);

1028 
	`wputc
(
vt_wö
, 
vt_å™s
[
vt_ch¨£t
][
c
]);

1031 i‡(
vt_ö£π
)

1032 
	`wösch¨2
(
vt_wö
, 
c
, 1);

1034 
	`wputc
(
vt_wö
, 
c
);

1035 #i‡
TRANSLATE


1040 
	`°©e1
(
c
);

1043 
	`°©e2
(
c
);

1046 
	`°©e3
(
c
);

1049 
	`°©e4
(
c
);

1052 
	`°©e5
(
c
);

1055 
	`°©e6
(
c
);

1058 
	`°©e7
(
c
);

1061 
	}
}

1064 
	$vt_£nd
(
c
)

1065 
c
;

1067 
s
[3];

1068 
f
;

1069 
Àn
 = 1;

1072 i‡(
c
 < 256) {

1074 i‡(
c
 =
K_ERA
Ë¯
vt_bs
;

1075 
s
[0] = 
vt_outm≠
[(Ë
c
];

1076 
s
[1] = 0;

1078 i‡(
c
 ='\r' && 
vt_¸lf
) {

1079 
s
[1] = '\n';

1080 
s
[2] = 0;

1081 
Àn
 = 2;

1083 
	`v_ãrmout
(
s
, 
Àn
);

1084 i‡(
vt_∆_dñay
 > 0 && 
c
 == '\r')

1085 
	`u¶ìp
(1000 * 
vt_∆_dñay
);

1090 
f
 = 0; 
vt_keys
[f].
code
; f++)

1091 i‡(
vt_keys
[
f
].
code
 =
c
) ;

1092 i‡(
vt_keys
[
f
].
code
 == 0) ;

1095 
	`v_ãrmout
("\033", 0);

1096 i‡(
vt_ty≥
 =
VT100
) {

1097 i‡(
vt_curs‹
 =
NORMAL
)

1098 
	`v_ãrmout
(
vt_keys
[
f
].
vt100_°
, 0);

1100 
	`v_ãrmout
(
vt_keys
[
f
].
vt100_≠p
, 0);

1102 
	`v_ãrmout
(
vt_keys
[
f
].
™si
, 0);

1103 
	}
}

	@vt100.h

16 
	#NORMAL
 1

	)

17 
	#APPL
 2

	)

20 
	#VT100
 1

	)

21 
	#ANSI
 3

	)

24 
_PROTO
–
vt_ö°Æl
, ((*)(), (*)(), 
WIN
 *));

25 
_PROTO
–
vt_öô
, (, , , , ));

26 
_PROTO
–
vt_pöô
, (
WIN
 *, , ));

27 
_PROTO
–
vt_£t
, (, , 
FILE
 *, , , , , ));

28 
_PROTO
–
vt_out
, ());

29 
_PROTO
–
vt_£nd
, (
ch
));

	@wildmat.c

53 #ifde‡
HAVE_CONFIG_H


54 
	~<c⁄fig.h
>

57 
	~"rcsid.h
"

58 
RCSID
("$Id: wildmat.c,v 1.2 2000/01/27 11:25:31 misiek Exp $")

60 
	~"p‹t.h
"

62 #i‚de‡
TRUE


63 
	#TRUE
 1

	)

65 #i‚de‡
FALSE


66 
	#FALSE
 0

	)

68 
	#ABORT
 -1

	)

70 
_PROTO
(
Sèr
, (*, *));

71 
_PROTO
(
DoM©ch
, (*, *));

72 
_PROTO
(
wûdm©
, (*, *));

75 
	$Sèr
(
s
, 
p
)

76 *
s
;

77 *
p
;

79 
ªtvÆ
;

81 (
ªtvÆ
 = 
	`DoM©ch
(
s
, 
p
)Ë=
FALSE
)

82 i‡(*++
s
 == '\0')

83  
ABORT
;

84  
ªtvÆ
;

85 
	}
}

89 
	$DoM©ch
(
s
, 
p
)

90 *
s
;

91 *
p
;

93 
œ°
;

94 
m©ched
;

95 
ªvî£
;

96 *
ss
;

97 
esˇ≥d
;

99 ; *
p
; 
s
++,Ö++)

102 i‡(*
s
 == '\0')

103  *
p
 ='*' && *++∞='\0' ? 
TRUE
 : 
ABORT
;

105 *
p
)

110 
p
++;

114 i‡(*
s
 !*
p
)

115  
FALSE
;

124  (*++
p
 ? 
	`Sèr
(
s
,ÖË: 
TRUE
);

128 i‡((
ªvî£
 = (
p
[1] == '!')))

129 
p
++;

130 
ss
 = 
p
 + 1;

132 
œ°
 = 0400, 
esˇ≥d
 = 
m©ched
 = 
FALSE
; *++
p
;Üast = *p)

134 i‡(*
p
 =']' && !(
esˇ≥d
 ||Ö =
ss
))

136 i‡(
esˇ≥d
)

137 
esˇ≥d
 = 
FALSE
;

138 i‡(*
p
 == '\\')

140 
esˇ≥d
 = 
TRUE
;

146 i‡((*
p
 ='-'Ë? (*
s
 <*++∞&& *†>
œ°
) : (*s == *p))

147 
m©ched
 = 
TRUE
;

150 i‡(
m©ched
 =
ªvî£
)

151  
FALSE
;

157  *
s
 == '\0';

158 
	}
}

167 
	$wûdm©
(
s
, 
p
)

168 *
s
;

169 *
p
;

171 i‡((*
p
 ='?' || *∞='*'Ë&& *
s
 == '.')

173  
FALSE
;

177  
	`DoM©ch
(
s
, 
p
Ë=
TRUE
;

179 
	}
}

181 #ifde‡
STAND_ALONE_TEST


182 
	~<°dio.h
>

189 
	$maö
(
¨gc
, 
¨gv
)

190 
¨gc
;

191 *
¨gv
[];

193 
ödex
;

194 
°©us
 = 
FALSE
;

196 
ödex
 = 2; index < 
¨gc
; ++index)

198 i‡(
	`wûdm©
(
¨gv
[
ödex
],árgv[1]))

200 i‡(
°©us
)

201 
	`Âuts
(" ", 
°dout
);

202 
	`¥ötf
("%s", 
¨gv
[
ödex
]);

203 
°©us
 = 
TRUE
;

207 
	`¥ötf
("%s\n", 
°©us
 ? "" : 
¨gv
[1]);

208 
	}
}

	@windiv.c

15 #ifde‡
HAVE_CONFIG_H


16 
	~<c⁄fig.h
>

19 
	~"rcsid.h
"

20 
RCSID
("$Id: windiv.c,v 1.2 2000/01/27 11:25:31 misiek Exp $")

22 
	~<dúít.h
>

23 
	~<sys/°©.h
>

24 
	~"p‹t.h
"

25 
	~"möicom.h
"

26 
	~"öé.h
"

28 #i‚de‡
max


29 
	#max
(
a
,
b
Ë(◊)>(b)?◊):(b))

	)

32 #i‚de‡
mö


33 
	#mö
(
a
,
b
Ë(◊)<(b)?◊):(b))

	)

40 
WIN
 *
	$mc_ãŒ
(
s
, 
a1
, 
a2
, 
a3
, 
a4
)

41 *
s
, *
a1
, *
a2
, *
a3
, *
a4
;

43 
WIN
 *
w
;

44 
buf
[128];

46 i‡(
°dwö
 =
NIL_WIN
Ë(
NULL
);

48 
	`¢¥ötf
(
buf
, (buf), 
s
, 
a1
, 
a2
, 
a3
, 
a4
);

50 
w
 = 
	`w›í
((
COLS
 / 2Ë- 2 - 
	`°æí
(
buf
) / 2, 8,

51 (
COLS
 / 2Ë+ 2 + 
	`°æí
(
buf
) / 2, 10,

52 
BDOUBLE
, 
°d©å
, 
mfcﬁ‹
, 
mbcﬁ‹
, 0, 0, 1);

53 
	`wcurs‹
(
w
, 
CNONE
);

54 
	`wloˇã
(
w
, 2, 1);

55 
	`wputs
(
w
, 
buf
);

56 
	`wªdøw
(
w
, 1);

57 (
w
);

58 
	}
}

64 
	$wîr‹
(
s
, 
a1
, 
a2
, 
a3
, 
a4
)

65 *
s
, *
a1
, *
a2
, *
a3
, *
a4
;

67 
WIN
 *
ãŒwö
;

69 
ãŒwö
 = 
	`mc_ãŒ
(
s
, 
a1
, 
a2
, 
a3
, 
a4
);

70 
	`¶ìp
(2);

71 
	`w˛o£
(
ãŒwö
, 1);

72 
	}
}

77 
	$ask
(
wh©
, 
s
)

78 *
wh©
;

79 *
s
[];

81 
num
 = 0;

82 
cur
 = 0, 
ocur
 = 0;

83 
f
, 
c
;

84 
WIN
 *
w
;

85 
size
, 
offs
;

87 
f
 = 0; 
s
[f]; f++Ë
num
++;

89 
size
 = 5 * 
num
;

90 
offs
 = 0;

91 i‡(
	`°æí
(
wh©
Ë> 2 * 
size
 + 4) {

92 
size
 = 
	`°æí
(
wh©
) / 2 + 2;

93 
offs
 = 
size
 - 5*
num
;

95 
w
 = 
	`w›í
((
COLS
 / 2Ë- 
size
 , 8, (COLS / 2) + 1 + size, 9,

96 
BSINGLE
, 
°d©å
, 
mfcﬁ‹
, 
mbcﬁ‹
, 0, 0, 1);

98 
dúÊush
 = 0;

100 
	`wcurs‹
(
w
, 
CNONE
);

101 
	`wloˇã
(
w
, 1 + 
size
 - (
	`°æí
(
wh©
) / 2), 0);

102 
	`wputs
(
w
, 
wh©
);

104 
f
 = 1; f < 
num
; f++) {

105 
	`wloˇã
(
w
, 2 + 
offs
 + 10*
f
, 1);

106 
	`wputs
(
w
, 
	`_
(
s
[
f
]));

108 
	`wªdøw
(
w
, 1);

111 
	`wloˇã
(
w
, 2 + 
offs
 + 10*
cur
, 1);

112 i‡(!
u£©å
)

113 
	`w¥ötf
(
w
, ">%s", 
	`_
(
s
[
cur
]) + 1);

115 
	`w£èâr
(
w
, 
XA_REVERSE
 | 
°d©å
);

116 
	`wputs
(
w
, 
	`_
(
s
[
cur
]));

118 
ocur
 = 
cur
;

119 
	`wÊush
();

120 
c
 = 
	`wxgëch
()) {

124 
dúÊush
 = 1;

125 
	`w˛o£
(
w
, 1);

129 
dúÊush
 = 1;

130 
	`w˛o£
(
w
, 1);

131 (
cur
);

132 
K_LT
:

134 
cur
--;

135 i‡(
cur
 < 0Ëcu∏
num
 - 1;

138 
cur
 = (cu∏+ 1Ë% 
num
;

141 
	`wloˇã
(
w
, 2 + 
offs
 + 10*
ocur
, 1);

142 
	`w£èâr
(
w
, 
°d©å
);

143 i‡(!
u£©å
)

144 
	`wputs
(
w
, " ");

146 
	`wputs
(
w
, 
	`_
(
s
[
ocur
]));

148 
	}
}

150 
edôlöe
();

155 *
	$öput
(
s
, 
buf
)

156 *
s
;

157 *
buf
;

159 
WIN
 *
w
;

161 
w
 = 
	`w›í
((
COLS
 / 2) - 20, 11, (COLS / 2) + 20, 12,

162 
BDOUBLE
, 
°d©å
, 
mfcﬁ‹
, 
mbcﬁ‹
, 1, 0, 1);

163 
	`wputs
(
w
, 
s
);

164 
	`wloˇã
(
w
, 0, 1);

165 
	`w¥ötf
(
w
, "> %-38.38s", 
buf
);

166 
	`wloˇã
(
w
, 2, 1);

167 i‡(
	`wgës
(
w
, 
buf
, 38, 128Ë< 0Ëbu‡
CNULL
;

168 
	`w˛o£
(
w
, 1);

169 (
buf
);

170 
	}
}

180 
	$cmpdú
(
d1
, 
d2
)

181 
dúít
 *
d1
;

182 
dúít
 *
d2
;

184 (
	`°rcmp
(
d1
->
d_«me
, 
d2
->d_name));

185 
	}
}

188 
	$s‹tdú
–
ba£
, 
ñemíts
 )

189 *
ba£
;

190 
size_t
 
ñemíts
;

192 
	`qs‹t
 (
ba£
, 
ñemíts
, (
dúít
), 
cmpdú
);

193 
	}
}

195 *
	$f£À˘
(
fûe_dú
)

196 *
fûe_dú
;

198 
	#ESC
 0x1B

	)

199 
	#CR
 0xD

	)

200 
	#TRUE
 (1==1)

	)

201 
	#FALSE
 (1==0)

	)

202 * 
SELECTION_TITLE
 = 
	`_
("Select File(s)Åo Upload");

203 
‚ame
[2048];

204 
buf
[160];

205 
WIN
 *
w
;

206 
DIR
 *
dú
;

207 
dúít
 *dirent;

208 
dúít
 *
dúli°
;

209 *
£lÊag
;

210 
nMaxFûes
, 
nC¡
;

211 
nNrOfRows
, 
nMaxWidth
;

212 
°row
, 
nMaxRows
, 
nOldAâr
;

213 
nRunFœg
, 
hlight
;

214 
°©
 
°©Buf
;

219 *
‚ame
 = '\0';

220 i‡((
dú
 = 
	`›ídú
(
fûe_dú
)Ë=
NULL
) {

221 
	`wbñl
();

222 (
‚ame
);

224 
nMaxFûes
 = 0;

226 
dúít
 = 
	`ªaddú
 (
dú
);

227 i‡(
dúít
)

228 
nMaxFûes
++;

232 
	`˛o£dú
(
dú
);

237 
dúli°
 = (
dúít
 *)
	`mÆloc
–(dúítË* (
nMaxFûes
+1) );

238 
£lÊag
 = 
	`ˇŒoc
(
nMaxFûes
+1, ());

239 if–
dúli°
 ){

240 
dú
 = 
	`›ídú
 (
fûe_dú
);

241 
nC¡
 = 
nMaxWidth
 = 0;

242  (
dúít
 = 
	`ªaddú
–
dú
 )) ){

245 if((
	`°rcmp
(
dúít
->
d_«me
, ".") == 0 )

246 || (
	`°rcmp
–
dúít
->
d_«me
, ".." ) == 0))

248 
	`°©
(
dúít
->
d_«me
, &
°©Buf
);

249 i‡(!
	`S_ISREG
(
°©Buf
.
°_mode
))

253 
dúli°
[
nC¡
].
d_öo
 = 
dúít
->d_ino;

254 
dúli°
[
nC¡
].
d_off
 = 
dúít
->d_off;

255 
dúli°
[
nC¡
].
d_ª˛í
 = 
dúít
->d_reclen;

256 
	`°r˝y
(
dúli°
[
nC¡
].
d_«me
, 
dúít
->d_name );

257 
nMaxWidth
 = 
	`max
“MaxWidth, 
	`°æí
(
dúít
->
d_«me
));

258 
nC¡
++;

260 
	`s‹tdú
–
dúli°
, 
nMaxRows
=
nC¡
 );

261 
nNrOfRows
 = 
	`mö
–18, 
nC¡
 );

262 
nMaxWidth
 = 
	`max
(
	`mö
–
COLS
-4,ÇMaxWidth ), 
	`°æí
(
SELECTION_TITLE
)+5);

263 
nMaxWidth
 /= 2;ÇMaxWidth++;

265 
w
 = 
	`w›í
–(
COLS
 / 2)-
nMaxWidth
, 12-
nNrOfRows
/2,

266 (
COLS
 / 2)+
nMaxWidth
-1, 12+
nNrOfRows
/2-((nNrOfRows+1)&0x1),

267 
BDOUBLE
, 
°d©å
, 
mfcﬁ‹
, 
mbcﬁ‹
, 1, 0, 1);

268 
	`wcurs‹
(
w
, 
CNONE
);

269 
	`wtôÀ
–
w
, 
TMID
, 
SELECTION_TITLE
 );

271 
nRunFœg
 = 
TRUE
;

272 
hlight
 = 
°row
 = 0;

273 
buf
[0]='\0';

274  
nRunFœg
 ){

275 
	`wloˇã
(
w
, 1, 0);

276  
nC¡
=0;ÇC¡ < 
nNrOfRows
;ÇCnt++ ){

277 if–
	`°æí
(
dúli°
[
nC¡
+
°row
].
d_«me
) ){

278 
nOldAâr
 = 
w
->
©å
;

279 if–
nC¡
 =
hlight
 )

280 
w
->
©å
 = 
	`COLATTR
(
mfcﬁ‹
, 
mbcﬁ‹
);

281 if(
£lÊag
[
nC¡
+
°row
])

282 
w
->
©å
 = 
	`COLATTR
(
mbcﬁ‹
, 
mfcﬁ‹
);

283 
	`°∫˝y
(
‚ame
,
dúli°
[
nC¡
+
°row
].
d_«me
,

284 2*
nMaxWidth
-1);

285 *(
‚ame
+2*
nMaxWidth
-1) = '\0';

286 
	`wputs
(
w
, 
‚ame
 ); 
	`w˛ªﬁ
(w);

287 
	`wloˇã
(
w
, 1, 1+
nC¡
);

288 
w
->
©å
 = 
nOldAâr
;

290 
	`wÊush
();

293  
	`wxgëch
() ){

294 
K_UP
:

298 if–
hlight
 )

299 
hlight
--;

300 if–
°row
 )

301 
°row
--;

304 
K_DN
:

307 if–
hlight
 < 
nNrOfRows
-1 )

308 
hlight
++;

309 if–
nMaxRows
 - 
°row
 > 
nNrOfRows
 )

310 
°row
++;

312 
ESC
:

313 
nRunFœg
=
FALSE
;

315 
CR
:

316 
nRunFœg
 = 
FALSE
;

318 if(
	`°æí
(
buf
Ë+ såÀn(
dúli°
[
°row
+
hlight
].
d_«me
) <

319 (
buf
Ë+ 2 && 
£lÊag
[
°row
+
hlight
]==0) {

320 
	`°rˇt
(
buf
, 
dúli°
[
°row
+
hlight
].
d_«me
);

321 
	`°rˇt
(
buf
," ");

322 
£lÊag
[
°row
+
hlight
] = 1;

324 i‡(
hlight
 < 
nNrOfRows
-1)

325 
hlight
++;

329 
	`‰ì
–
dúli°
 );

330 
	`w˛o£
(
w
, 1);

337 –(*)
buf
);

338 
	}
}

344 
	sfûe
 {

345 *
	m«me
;

346 
	misdú
;

348 
fûñi°
 **
	gli°
;

349 
	gƒli°
;

352 
	$cmpdú
(
d1
, 
d2
)

353 
fûe
 *
d1
;

354 
fûe
 *
d2
;

356 i‡(
	`°rcmp
(
d1
->
«me
, "..")) (-1);

357 (
	`°rcmp
(
d1
->
«me
, 
d2
->name));

358 
	}
}

361 
	$s‹tdú
()

363 
	`qs‹t
(
li°
, 
ƒli°
, (
fûe
 *), 
cmpdú
);

364 
	}
}

367 
	$makñi°
()

369 
DIR
 *
dú
;

370 
dúít
 *
d
;

371 
fûe
 **
√w
;

372 
À·
 = 0;

373 
f
;

375 i‡((
dú
 = 
	`›ídú
(".")Ë=
NULL
) {

376 
	`wbñl
();

381 i‡(
li°
) {

382 
f
 = 0; f < 
ƒli°
; f++Ë
	`‰ì
(
li°
[f]);

383 
	`‰ì
(
li°
);

384 
li°
 = 
NULL
;

387 
d
 = 
	`ªaddú
(
dú
)) {

390 i‡(
	`°rcmp
(
d
->
d_«me
, ".") == 0) ;

393 i‡(
À·
 == 0) {

395 i‡((
√w
 = 
	`mÆloc
(
ƒíts
 + 10 * (*))Ë=
NULL
) {

396 
	`˛o£dú
(
dú
);

399 i‡(
li°
) {

400 
	`mem˝y
(
√w
, 
li°
, 
ƒli°
 * (
fûe
 **));

401 
	`‰ì
(
li°
);

403 
li°
 = 
√w
;

404 
À·
 = 10;

408 #ifde‡
S_IFLNK


409 (Ë
	`l°©
(
d
->
d_«me
, &
°
);

411 (Ë
	`°©
(
d
->
d_«me
, &
°
);

413 
li°
[
ƒli°
]->
isdú
 = 
	`S_ISDIR
(
°
.
°_mode
);

414 
f
 = 0;

415 i‡(
	`S_ISDIR
(
°
.
°_mode
)Ë
f
 = '/';

416 #ifde‡
S_ISLNK


417 i‡(
	`S_ISLNK
(
°
.
°_mode
)Ë
f
 = '@';

419 #ifde‡
S_ISFIFO


420 i‡(
	`S_ISFIFO
(
°
.
°_mode
)Ë
f
 = '|';

422 #ifde‡
S_ISSOCK


423 i‡(
	`S_ISSOCK
(
°
.
°_mode
)Ë
f
 = '=';

425 i‡(
	`S_ISREG
(
°
.
°_mode
Ë&& (°.°_modê& 0x111)Ë
f
 = '*';

428 i‡((
li°
[
ƒli°
]->
«me
 = 
	`mÆloc
(
	`°æí
(
d
->
d_«me
 + 2))Ë=
NULL
) {

429 
	`˛o£dú
(
dú
);

432 
	`•rötf
(
li°
[
ƒli°
]->
«me
, "%s%c", 
d
->
d_«me
, 
f
);

433 
ƒli°
++;

434 
À·
--;

436 
	`˛o£dú
(
dú
);

438 
	}
}

441 *
	$wfûe£l
()

443 
WIN
 *
w
;

444 
cwd
[64];

447 
w
 = 
	`w›í
((
COLS
 / 2) - 20, 5, (COLS / 2) + 20, 20,

448 
BDOUBLE
, 
°d©å
, 
mfcﬁ‹
, 
mbcﬁ‹
, 1, 0, 1);

449 
	`gëcwd
(
cwd
, 64);

452 
	`makñi°
();

453 
	`s‹tdú
();

	@window.c

17 #ifde‡
HAVE_CONFIG_H


18 
	~<c⁄fig.h
>

21 
	~"rcsid.h
"

22 
RCSID
("$Id: window.c,v 1.3 2000/01/27 11:25:31 misiek Exp $")

24 
	~"p‹t.h
"

25 
	~"wödow.h
"

26 
	~"ch¨m≠.h
"

27 
	~"öé.h
"

30 
	#ST_LINE
 1

	)

34 #i‚de‡
MAC_LEN


35 
	#MAC_LEN
 257

	)

39 #i‡
__STDC__


40 
£tcbªak
();

41 
wxgëch
();

42 
gërowcﬁs
(*
rows
, *
cﬁs
);

44 
£tcbªak
();

45 
wxgëch
();

46 
gërowcﬁs
();

49 #i‚de‡
BBS


50 
	~"c⁄fig.h
"

53 
	#BUFFERSIZE
 2048

	)

55 
	#sw≠
(
x
, 
y
Ë{ 
d
 = (x); (xË(y); (yËd; }

	)

58 *
	gCM
, *
	gIS
, *
	gRS
, *
	gAC
, *
	gEA
;

59 *
	gME
, *
	gSE
, *
	gUE
, *
	gAE
;

60 *
	gAS
, *
	gMB
, *
	gMD
, *
	gMR
, *
	gSO
, *
	gUS
;

61 *
	gCE
, *
	gAl
, *
	gDl
, *
	gAL
, *
	gDL
;

62 *
	gCS
, *
	gSF
, *
	gSR
, *
	gVB
, *
	gBL
;

63 *
	gVE
, *
	gVI
, *
	gKS
, *
	gKE
;

64 *
	gCD
, *
	gCL
, *
	gIC
, *
	gDC
;

65 *
	gBC
, *
	gCR
, *
	gNL
;

66 #i‡
ST_LINE


67 *
	gTS
, *
	gFS
, *
	gDS
;

71 
	gD_UL
;

72 
	gD_HOR
;

73 
	gD_UR
;

74 
	gD_LL
;

75 
	gD_VER
;

76 
	gD_LR
;

78 
	gS_UL
;

79 
	gS_HOR
;

80 
	gS_UR
;

81 
	gS_LL
;

82 
	gS_VER
;

83 
	gS_LR
;

85 
	g_buf°¨t
[
BUFFERSIZE
];

86 *
	g_buÂos
 = 
_buf°¨t
;

87 *
	g_buf„nd
;

88 
ELM
 *
	ggm≠
;

90 
	gcuøâr
 = -1;

91 
	gcurcﬁ‹
 = -1;

92 
	gcurx
 = -1;

93 
	gcury
 = -1;

94 
	g_öã∫
 = 0;

95 
	g_cur°y≥
 = 
CNORMAL
;

96 
	g_has_am
 = 0;

97 
	g_mv_°™dout
 = 0;

98 
ELM
 
	gﬁdc
;

99 
	gsÊag
 = 0;

106 #ifde‡
SMOOTH


107 
WIN
 *
	gcurwö
 = 
NIL_WIN
;

108 
WIN
 *
us
;

111 
	gu£©å
 = 1;

112 
	gdúÊush
 = 1;

113 
LINES
, 
COLS
;

114 
	gu£cﬁ‹
 = 0;

115 
WIN
 *
	g°dwö
;

116 *
	g_çå
 = 
CNULL
;

117 
	gs¸ìn_ibmpc
 = 0;

118 
	gs¸ìn_iso
 = 0;

119 
	gw_öô
 = 0;

120 #i‡
ST_LINE


121 
	gu£_°©us
 = 0;

123 
	gu£_°©us
 = 0;

127 *
	gdef_ac
 = "+\273,\253aaffggjjkkllmmnnooqqssttuuvvwwxx";

129 #i‡
DEBUG


134 
	$debug
(
s
, 
a1
, 
a2
, 
a3
, 
a4
)

135 *
s
;

136 
a1
, 
a2
, 
a3
, 
a4
;

138 
œœ
[80];

140 
	`¢¥ötf
(
œœ
, ÷Æa), 
s
, 
a1
, 
a2
, 
a3
, 
a4
);

141 
	`wrôe
(2, 
œœ
, 
	`°æí
(lala));

143 
	}
}

151 
	$wÊush
()

153 
todo
, 
d⁄e
;

155 
todo
 = 
_buÂos
 - 
_buf°¨t
;

156 
_buÂos
 = 
_buf°¨t
;

158 
todo
 > 0) {

159 
d⁄e
 = 
	`wrôe
(1, 
_buÂos
, 
todo
);

160 i‡(
d⁄e
 > 0) {

161 
todo
 -
d⁄e
;

162 
_buÂos
 +
d⁄e
;

164 i‡(
d⁄e
 < 0 && 
î∫o
 !
EINTR
) ;

166 
_buÂos
 = 
_buf°¨t
;

167 
	}
}

172 
	$outch¨
(
c
)

173 
c
;

175 *
_buÂos
++ = 
c
;

176 i‡(
_buÂos
 >
_buf„nd
Ë
	`wÊush
();

177 #i‡
	`deföed
(
SMOOTH
)

178 i‡(
curwö
 =
us
 && (
c
 ='\n' || c ='\r')Ë
	`wÊush
();

181 
	}
}

186 
	$out°r
(
s
)

187 *
s
;

189 
	`çuts
(
s
, 1, 
outch¨
);

190 
	}
}

196 
	$_©åoff
()

198 i‡(
ME
 !
CNULL
)

199 
	`out°r
(
ME
);

201 i‡(
SE
 !
CNULL
Ë
	`out°r
(SE);

202 i‡(
UE
 !
CNULL
Ë
	`out°r
(UE);

204 i‡(
AE
 !
CNULL
Ë
	`out°r
(AE);

205 
	}
}

210 
	$_©å⁄
(
©å
)

211 
©å
;

213 i‡(!
u£cﬁ‹
 || (
©å
 & 
XA_REVERSE
) == 0) {

215 i‡(
©å
 & 
XA_BOLD
 && 
MD
 !
CNULL
Ë
	`out°r
(MD);

216 i‡(
©å
 & 
XA_STANDOUT
 && 
SO
 !
CNULL
Ë
	`out°r
(SO);

217 i‡(
©å
 & 
XA_UNDERLINE
 && 
US
 !
CNULL
Ë
	`out°r
(US);

219 i‡(
©å
 & 
XA_REVERSE
 && 
MR
 !
CNULL
Ë
	`out°r
(MR);

220 i‡(
©å
 & 
XA_BLINK
 && 
MB
 !
CNULL
Ë
	`out°r
(MB);

221 i‡(
©å
 & 
XA_ALTCHARSET
 && 
AS
 !
CNULL
Ë
	`out°r
(AS);

222 
	}
}

227 
	$_cﬁs⁄
(
cﬁ‹
)

228 
cﬁ‹
;

230 
buf
[12];

231 
	`•rötf
(
buf
, "\033[%d;%dm", 
	`COLFG
(
cﬁ‹
Ë+ 30, 
	`COLBG
(color) + 40);

232 
	`out°r
(
buf
);

233 
	}
}

238 
	$_£èâr
(
©å
, 
cﬁ‹
)

239 
©å
, 
cﬁ‹
;

241 i‡(!
u£©å
) ;

243 i‡(!
u£cﬁ‹
) {

244 
curcﬁ‹
 = 
cﬁ‹
;

245 i‡(
©å
 =
cuøâr
) ;

246 
cuøâr
 = 
©å
;

247 
	`_©åoff
();

248 
	`_©å⁄
(
©å
);

251 i‡(
©å
 =
cuøâr
 && 
cﬁ‹
 =
curcﬁ‹
) ;

252 
	`_©åoff
();

253 
	`_cﬁs⁄
(
cﬁ‹
);

254 
	`_©å⁄
(
©å
);

255 
cuøâr
 = 
©å
;

256 
curcﬁ‹
 = 
cﬁ‹
;

257 
	}
}

262 
	$_gŸoxy
(
x
, 
y
)

263 
x
, 
y
;

265 
ﬁd©å
 = -1;

267 #i‡
ST_LINE


268 
tmp
;

271 i‡(
x
 >
COLS
 || 
y
 > 
LINES
 || (x =
curx
 && y =
cury
)) ;

273 i‡(
u£_°©us
) {

275 i‡(
cury
 =
LINES
 && 
y
 < cury) {

276 
	`out°r
(
FS
);

278 
tmp
 = 
cuøâr
;

279 
cuøâr
 = -1;

280 
	`_£èâr
(
tmp
, 
curcﬁ‹
);

281 
	`out°r
(
	`tgŸo
(
CM
, 
x
, 
y
));

282 
curx
 = 
x
; 
cury
 = 
y
;

286 i‡(
y
 =
LINES
) {

288 i‡(
cury
 < 
y
) {

289 
	`out°r
(
	`tgŸo
(
TS
, 
x
, x));

290 
curx
 = 
x
;

291 
cury
 = 
y
;

293 
tmp
 = 
cuøâr
;

294 
cuøâr
 = -1;

295 
	`_£èâr
(
tmp
, 
curcﬁ‹
);

302 i‡(
x
 >
COLS
 || 
y
 >
LINES
 || (x =
curx
 && y =
cury
)) {

304 i‡(
x
 >
COLS
 || 
y
 >
LINES
)

305 
	`Ârötf
(
°dîr
, "OOPS: (x, y) == (%d, %d)\n",

306 
COLS
, 
LINES
);

312 i‡(!
_mv_°™dout
 && 
cuøâr
 !
XA_NORMAL
) {

313 
ﬁd©å
 = 
cuøâr
;

314 
	`_£èâr
(
XA_NORMAL
, 
curcﬁ‹
);

316 i‡(
CR
 !
CNULL
 && 
y
 =
cury
 && 
x
 == 0)

317 
	`out°r
(
CR
);

319 i‡(
NL
 !
CNULL
 && 
x
 =
curx
 && 
y
 =
cury
 + 1)

320 
	`out°r
(
NL
);

322 i‡(
NL
 !
CNULL
 && 
x
 =0 && x =
curx
 && 
y
 =
cury
 + 1)

323 
	`out°r
(
NL
);

325 i‡(
BC
 !
CNULL
 && 
y
 =
cury
 && 
x
 =
curx
 - 1)

326 
	`out°r
(
BC
);

328 
	`out°r
(
	`tgŸo
(
CM
, 
x
, 
y
));

329 
curx
 = 
x
;

330 
cury
 = 
y
;

331 i‡(
ﬁd©å
 !-1Ë
	`_£èâr
(ﬁd©å, 
curcﬁ‹
);

332 
	}
}

340 
	$_wrôe
(
c
, 
doô
, 
x
, 
y
,
©å
, 
cﬁ‹
)

341 
c
, 
doô
;

342 
x
, 
y
;

343 
©å
, 
cﬁ‹
;

345 
ELM
 *
e
;

351 i‡(
_has_am
 && 
y
 >
LINES
 - 1 && 
x
 >
COLS
 - 1) {

352 
doô
 = 0;

353 
sÊag
 = 1;

354 
ﬁdc
.
vÆue
 = 
c
;

355 
ﬁdc
.
©å
 =áttr;

356 
ﬁdc
.
cﬁ‹
 = color;

358 #i‡
ST_LINE


359 i‡(
x
 < 
COLS
 && 
y
 <
LINES
) {

361 i‡(
x
 < 
COLS
 && 
y
 < 
LINES
) {

363 i‡(
doô
 != 0) {

364 
x0
=-1, 
y0
=-1, 
c0
=0;

365 
©å0
, 
cﬁ‹0
;

366 i‡(
x
!=
x0
+1 || 
y
!=
y0
 || 
©å
!=
©å0
 || 
cﬁ‹
!=
cﬁ‹0
 || !(
c0
&128)) {

367 
	`_gŸoxy
(
x
, 
y
);

368 
	`_£èâr
(
©å
, 
cﬁ‹
);

370 
x0
=
x
; 
y0
=
y
; 
©å0
=
©å
; 
cﬁ‹0
=
cﬁ‹
; 
c0
=
c
;

371 (Ë
	`outch¨
((
s¸ìn_ibmpc
 || 
s¸ìn_iso
 || (
©å
 & 
XA_ALTCHARSET
)Ë? 
c
 : 
wch¨m≠
[()c]);

375 
curx
++;

377 i‡(
doô
 >= 0) {

378 
e
 = &
gm≠
[
x
 + 
y
 * 
COLS
];

379 
e
->
vÆue
 = 
c
;

380 
e
->
©å
 =áttr;

381 
e
->
cﬁ‹
 = color;

384 
	}
}

389 
	$_curs‹
(
ty≥
)

390 
ty≥
;

392 
_cur°y≥
 = 
ty≥
;

394 i‡(
ty≥
 =
CNORMAL
 && 
VE
 !
CNULL
Ë
	`out°r
(VE);

395 i‡(
ty≥
 =
CNONE
 && 
VE
 !
CNULL
 && 
VI
 !CNULLË
	`out°r
(VI);

396 
	}
}

409 
	$wªsize
(
wö
, 
löes
, 
cﬁs
)

410 
WIN
 *
wö
;

411 
löes
, 
cﬁs
;

413 
x
, 
y
;

414 
ELM
 *
ﬁdm≠
, *
√wm≠
, *
e
, *
n
;

416 i‡((
√wm≠
 = (
ELM
 *)
	`mÆloc
((
löes
 + 1Ë* 
cﬁs
 * (ELM))Ë=(ELM *)
NULL
)

418 i‡(
wö
 =
°dwö
)

419 
ﬁdm≠
 = 
gm≠
;

421 
ﬁdm≠
 = 
wö
->
m≠
;

423 
y
 = 0; y < 
löes
; y++)

424 
x
 = 0; x < 
cﬁs
; x++) {

425 
n
 = &
√wm≠
[
y
 + 
x
 * 
cﬁs
];

426 i‡(
x
 < 
wö
->
xs
 && 
y
 < wö->
ys
) {

427 
e
 = &
ﬁdm≠
[
y
 + 
x
 * 
COLS
];

428 
n
->
vÆue
 = 
e
->value;

429 
n
->
cﬁ‹
 = 
e
->color;

430 
n
->
©å
 = 
e
->attr;

432 
n
->
vÆue
 = ' ';

433 
n
->
cﬁ‹
 = 
wö
->color;

434 
n
->
©å
 = 
wö
->attr;

437 i‡(
wö
->
sy2
 =wö->
y2
Ëwö->sy2 = wö->
y1
 + 
löes
 - 1;

438 
wö
->
y2
 = wö->
y1
 + 
löes
 - 1;

439 
wö
->
ys
 = 
löes
;

440 
wö
->
xs
 = 
cﬁs
;

441 
	`‰ì
(
ﬁdm≠
);

442 i‡(
wö
 =
°dwö
) {

443 
gm≠
 = 
√wm≠
;

444 
LINES
 = 
löes
;

445 
COLS
 = 
cﬁs
;

447 
wö
->
m≠
 = 
√wm≠
;

448 
	}
}

455 
WIN
 *
	$w›í
(
x1
, 
y1
, 
x2
, 
y2
, 
b‹dî
, 
©å
, 
fg
, 
bg
, 
dúe˘
, 
hi°löes
, 
do˛r
)

456 
x1
, 
y1
, 
x2
, 
y2
;

457 
b‹dî
;

458 
©å
, 
fg
, 
bg
, 
dúe˘
;

459 
hi°löes
;

460 
do˛r
;

462 
WIN
 *
w
;

463 
ELM
 *
e
;

464 
byãs
;

465 
x
, 
y
;

466 
cﬁ‹
;

467 
offs
;

468 
x©å
;

469 #ifde‡
SMOOTH


470 
curwö
 = 
NIL_WIN
;

473 i‡((
w
 = (
WIN
 *)
	`mÆloc
((WIN))) == (WIN *)0) (w);

475 
offs
 = (
b‹dî
 !
BNONE
);

476 i‡(!
s¸ìn_ibmpc
 && 
AS
)

477 
x©å
 = 
©å
 | 
XA_ALTCHARSET
;

479 
x©å
 = 
©å
;

481 i‡(
x1
 < 
offs
) x1 = offs;

482 i‡(
y1
 < 
offs
) y1 = offs;

484 i‡(
x2
 >
COLS
 - 
offs
) x2 = COLS - offs - 1;

485 i‡(
y2
 >
LINES
 - 
offs
) y2 = LINES - offs - 1;

487 i‡(
x1
 > 
x2
Ë
	`sw≠
(x1, x2);

488 i‡(
y1
 > 
y2
Ë
	`sw≠
(y1, y2);

490 
w
->
xs
 = 
x2
 - 
x1
 + 1;

491 
w
->
ys
 = 
y2
 - 
y1
 + 1;

492 
w
->
x1
 = x1;

493 
w
->
x2
 = x2;

494 
w
->
y1
 = w->
sy1
 = y1;

495 
w
->
y2
 = w->
sy2
 = y2;

496 
w
->
dos¸ﬁl
 = 1;

497 
w
->
b‹dî
 = border;

498 
w
->
curs‹
 = 
CNORMAL
;

499 
w
->
©å
 =áttr;

500 
w
->
auto¸
 = 1;

501 
w
->
wøp
 = 1;

502 
cﬁ‹
 = 
w
->cﬁ‹ = 
	`COLATTR
(
fg
, 
bg
);

503 
w
->
curx
 = 0;

504 
w
->
cury
 = 0;

506 
w
->
o_curx
 = 
curx
;

507 
w
->
o_cury
 = 
cury
;

508 
w
->
o_©å
 = 
cuøâr
;

509 
w
->
o_cﬁ‹
 = 
curcﬁ‹
;

510 
w
->
o_curs‹
 = 
_cur°y≥
;

511 
w
->
dúe˘
 = direct;

513 i‡(
b‹dî
 !
BNONE
) {

514 
x1
--; 
x2
++;

515 
y1
--; 
y2
++;

518 
byãs
 = (
y2
 - 
y1
 + 1Ë* (
x2
 - 
x1
 + 1Ë* (
ELM
) + 100;

519 i‡((
e
 = (
ELM
 *)
	`mÆloc
(
byãs
)) == (ELM *)0) {

520 
	`‰ì
(
w
);

521 ((
WIN
 *)0);

523 
w
->
m≠
 = 
e
;

525 
byãs
 = (
x2
 - 
x1
 + 1Ë* (
ELM
);

527 
y
 = 
y1
; y <
y2
; y++) {

528 
	`mem˝y
(
e
, 
gm≠
 + 
COLS
 * 
y
 + 
x1
, 
byãs
);

529 
e
 +(
x2
 - 
x1
 + 1);

532 #i‡
HISTORY


534 
w
->
hi°löe
 = w->
hi°löes
 = 0;

535 
w
->
hi°buf
 = (
ELM
 *)0;

536 i‡(
hi°löes
) {

538 
byãs
 = 
w
->
xs
 * 
hi°löes
 * (
ELM
);

539 i‡((
w
->
hi°buf
 = (
ELM
 *)
	`mÆloc
(
byãs
)Ë=
NULL
) {

540 
	`‰ì
(
w
->
m≠
);

541 
	`‰ì
(
w
);

542 ((
WIN
 *)0);

544 
w
->
hi°löes
 = histlines;

547 
e
 = 
w
->
hi°buf
;

548 
y
 = 0; y < 
w
->
xs
 * 
hi°löes
; y++) {

549 
e
->
vÆue
 = ' ';

550 
e
->
©å
 =áttr;

551 
e
->
cﬁ‹
 = color;

552 
e
++;

558 i‡(
b‹dî
) {

559 
	`_wrôe
(
b‹dî
 =
BSINGLE
 ? 
S_UL
 : 
D_UL
, 
w
->
dúe˘
, 
x1
, 
y1
,

560 
x©å
, 
cﬁ‹
);

561 
x
 = 
x1
 + 1; x < 
x2
; x++)

562 
	`_wrôe
(
b‹dî
 =
BSINGLE
 ? 
S_HOR
 : 
D_HOR
, 
w
->
dúe˘
, 
x
, 
y1
,

563 
x©å
, 
cﬁ‹
);

564 
	`_wrôe
(
b‹dî
 =
BSINGLE
 ? 
S_UR
 : 
D_UR
, 
w
->
dúe˘
, 
x2
, 
y1
,

565 
x©å
, 
cﬁ‹
);

566 
y
 = 
y1
 + 1; y < 
y2
; y++) {

567 
	`_wrôe
(
b‹dî
 =
BSINGLE
 ? 
S_VER
 : 
D_VER
, 
w
->
dúe˘
, 
x1
, 
y
,

568 
x©å
, 
cﬁ‹
);

569 
x
 = 
x1
 + 1; x < 
x2
; x++)

570 
	`_wrôe
(' ', 
w
->
dúe˘
, 
x
, 
y
, 
©å
, 
cﬁ‹
);

571 
	`_wrôe
(
b‹dî
 =
BSINGLE
 ? 
S_VER
 : 
D_VER
, 
w
->
dúe˘
, 
x2
, 
y
,

572 
x©å
, 
cﬁ‹
);

574 
	`_wrôe
(
b‹dî
 =
BSINGLE
 ? 
S_LL
 : 
D_LL
, 
w
->
dúe˘
, 
x1
, 
y2
,

575 
x©å
, 
cﬁ‹
);

576 
x
 = 
x1
 + 1; x < 
x2
; x++)

577 
	`_wrôe
(
b‹dî
 =
BSINGLE
 ? 
S_HOR
 : 
D_HOR
, 
w
->
dúe˘
,

578 
x
, 
y2
, 
x©å
, 
cﬁ‹
);

579 
	`_wrôe
(
b‹dî
 =
BSINGLE
 ? 
S_LR
 : 
D_LR
, 
w
->
dúe˘
, 
x2
, 
y2
,

580 
x©å
, 
cﬁ‹
);

581 i‡(
w
->
dúe˘
Ë
	`_gŸoxy
(
x1
 + 1, 
y1
 + 1);

583 i‡(
do˛r
Ë
	`wö˛r
(
w
);

584 
	`wcurs‹
(
w
, 
CNORMAL
);

586 i‡(
w
->
dúe˘
Ë
	`wÊush
();

587 (
w
);

588 
	}
}

593 
	$w˛o£
(
wö
, 
ª∂a˚
)

594 
WIN
 *
wö
;

595 
ª∂a˚
;

597 
ELM
 *
e
;

598 
x
, 
y
;

600 #ifde‡
SMOOTH


601 
curwö
 = 
NIL_WIN
;

604 i‡(!
wö
) ;

606 i‡(
wö
 =
°dwö
) {

607 
	`wö_íd
();

610 
e
 = 
wö
->
m≠
;

612 i‡(
wö
->
b‹dî
) {

613 
wö
->
x1
--; wö->
x2
++;

614 
wö
->
y1
--; wö->
y2
++;

616 
	`wcurs‹
(
wö
, wö->
o_curs‹
);

617 i‡(
ª∂a˚
) {

618 
y
 = 
wö
->
y1
; y <wö->
y2
; y++) {

621 
ELM
 *
g
;

622 
g
 = 
gm≠
 + (
y
 * 
°dwö
->
xs
);

623 
x
 = 0 ; x < 
wö
->
x1
; x++) {

624 
	`_wrôe
(
g
->
vÆue
, 1, 
x
, 
y
, g->
©å
, g->
cﬁ‹
);

625 
g
++;

628 
x
 = 
wö
->
x1
; x <wö->
x2
; x++) {

629 
	`_wrôe
(
e
->
vÆue
, 1, 
x
, 
y
,É->
©å
,É->
cﬁ‹
);

630 
e
++;

633 
	`_gŸoxy
(
wö
->
o_curx
, wö->
o_cury
);

634 
	`_£èâr
(
wö
->
o_©å
, wö->
o_cﬁ‹
);

636 
	`‰ì
(
wö
->
m≠
);

637 #i‡
HISTORY


638 i‡(
wö
->
hi°buf
Ë
	`‰ì
(win->histbuf);

640 
	`‰ì
(
wö
);

641 
	`wÊush
();

642 
	}
}

644 
	gﬁdx
, 
	gﬁdy
;

645 
	gocurs‹
;

650 
	$wÀave
()

652 
ﬁdx
 = 
curx
;

653 
ﬁdy
 = 
cury
;

654 
ocurs‹
 = 
_cur°y≥
;

656 (Ë
	`£tcbªak
(0);

657 
	`_gŸoxy
(0, 
LINES
 - 1);

658 
	`_£èâr
(
XA_NORMAL
, 
	`COLATTR
(
WHITE
, 
BLACK
));

659 
	`_curs‹
(
CNORMAL
);

660 i‡(
CL
 !
CNULL
)

661 
	`out°r
(
CL
);

663 
	`out°r
("\n");

664 #i‡
ST_LINE


665 i‡(
DS
Ë
	`out°r
(DS);

667 i‡(
KE
 !
CNULL
Ë
	`out°r
(KE);

668 i‡(
RS
 !
CNULL
Ë
	`out°r
(RS);

669 
	`wÊush
();

670 
	}
}

672 
	$wªtu∫
()

674 
x
, 
y
;

675 
ELM
 *
e
;

677 #ifde‡
SMOOTH


678 
curwö
 = 
NIL_WIN
;

681 
cuøâr
 = -1;

682 
curcﬁ‹
 = -1;

684 (Ë
	`£tcbªak
(1);

686 i‡(
IS
 !
CNULL
Ë
	`out°r
(IS);

687 i‡(
EA
 !
CNULL
Ë
	`out°r
(EA);

688 i‡(
KS
 !
CNULL
Ë
	`out°r
(KS);

690 
	`_gŸoxy
(0, 0);

691 
	`_curs‹
(
ocurs‹
);

693 
e
 = 
gm≠
;

694 
y
 = 0; y <
LINES
; y++) {

695 
x
 = 0; x < 
COLS
; x++) {

696 
	`_wrôe
(
e
->
vÆue
, -1, 
x
, 
y
,É->
©å
,É->
cﬁ‹
);

697 
e
++;

700 
	`_gŸoxy
(
ﬁdx
, 
ﬁdy
);

701 
	`wÊush
();

702 
	}
}

707 
	$wªdøw
(
w
, 
√wdúe˘
)

708 
WIN
 *
w
;

709 
√wdúe˘
;

711 
möx
, 
maxx
, 
möy
, 
maxy
;

712 
ELM
 *
e
;

713 
x
, 
y
;

714 
add˙t
;

716 
möx
 = 
w
->
x1
;

717 
maxx
 = 
w
->
x2
;

718 
möy
 = 
w
->
y1
;

719 
maxy
 = 
w
->
y2
;

720 
add˙t
 = 
°dwö
->
xs
 - 
w
->xs;

722 i‡(
w
->
b‹dî
) {

723 
möx
--;

724 
maxx
++;

725 
möy
--;

726 
maxy
++;

727 
add˙t
 -= 2;

730 
	`_gŸoxy
(
möx
, 
möy
);

731 
	`_curs‹
(
CNONE
);

732 
e
 = 
gm≠
 + (
möy
 * 
°dwö
->
xs
Ë+ 
möx
;

734 
y
 = 
möy
; y <
maxy
; y++) {

735 
x
 = 
möx
; x <
maxx
; x++) {

736 
	`_wrôe
(
e
->
vÆue
, -1, 
x
, 
y
,É->
©å
,É->
cﬁ‹
);

737 
e
++;

739 
e
 +
add˙t
;

741 
	`_gŸoxy
(
w
->
x1
 + w->
curx
, w->
y1
 + w->
cury
);

742 
	`_curs‹
(
w
->
curs‹
);

743 
	`wÊush
();

744 
w
->
dúe˘
 = 
√wdúe˘
;

745 
	}
}

750 
	$_w˛ªﬁ
(
w
)

751 
WIN
 *
w
;

753 
x
;

754 
doô
 = 1;

755 
y
;

757 #ifde‡
SMOOTH


758 
curwö
 = 
w
;

760 
y
 = 
w
->
cury
 + w->
y1
;

762 i‡(
w
->
dúe˘
 && (w->
x2
 =
COLS
 - 1Ë&& 
CE
) {

763 
	`_gŸoxy
(
w
->
curx
 + w->
x1
, 
y
);

764 
	`_£èâr
(
w
->
©å
, w->
cﬁ‹
);

765 
	`out°r
(
CE
);

766 
doô
 = 0;

768 
x
 = 
w
->
curx
 + w->
x1
; x <w->
x2
; x++) {

769 
	`_wrôe
(' ', (
w
->
dúe˘
 && 
doô
Ë? 1 : 0, 
x
, 
y
, w->
©å
, w->
cﬁ‹
);

771 (
doô
);

772 
	}
}

777 
	$ws¸ﬁl
(
wö
, 
dú
)

778 
WIN
 *
wö
;

779 
dú
;

781 
ELM
 *
e
, *
f
;

782 *
§c
, *
d°
;

783 
x
, 
y
;

784 
doô
 = 1;

785 
ocurx
, 
fs
 = 0, 
Àn
;

786 
phys_s¸
 = 0;

788 #ifde‡
SMOOTH


789 
curwö
 = 
wö
;

796 i‡(
wö
->
dúe˘
 && 
SF
 !
CNULL
 &&

797 (
dú
 =
S_UP
 || 
SR
 !
CNULL
Ë&& (
LINES
 =
wö
->
sy2
 - wö->
sy1
 + 1)) {

798 
doô
 = 0;

799 
phys_s¸
 = 1;

800 
	`_£èâr
(
wö
->
©å
, wö->
cﬁ‹
);

801 i‡(
dú
 =
S_UP
) {

802 
	`_gŸoxy
(0, 
LINES
 - 1);

803 
	`out°r
(
SF
);

805 
	`_gŸoxy
(0, 0);

806 
	`out°r
(
SR
);

813 i‡(
wö
->
dúe˘
 && wö->
xs
 =
COLS
 &&

814 ((
CS
 !
CNULL
 && 
SF
 !CNULL && 
SR
 != CNULL)

815 || (
Dl
 !
CNULL
 && 
Al
 != CNULL))) {

816 
doô
 = 0;

817 
phys_s¸
 = 1;

818 
	`_£èâr
(
wö
->
©å
, wö->
cﬁ‹
);

819 i‡(
CS
 !
CNULL
 && 
SF
 !CNULL && 
SR
 != CNULL) {

824 i‡(
wö
->
sy2
 =
LINES
 - 1 && wö->
sy1
 =0Ë
fs
 = 1;

825 i‡(!
fs
) {

826 
	`out°r
(
	`tgŸo
(
CS
, 
wö
->
sy2
, wö->
sy1
));

827 
cury
 = 0;

829 i‡(
dú
 =
S_UP
) {

830 
	`_gŸoxy
(0, 
wö
->
sy2
);

831 
	`out°r
(
SF
);

833 
	`_gŸoxy
(0, 
wö
->
sy1
);

834 
	`out°r
(
SR
);

836 i‡(!
fs
) {

837 
	`out°r
(
	`tgŸo
(
CS
, 
LINES
 - 1, 0));

838 
cury
 = 0;

840 
	`_gŸoxy
(0, 
wö
->
sy2
);

842 i‡(
dú
 =
S_UP
) {

843 
	`_gŸoxy
(0, 
wö
->
sy1
);

844 
	`out°r
(
Dl
);

845 
	`_gŸoxy
(0, 
wö
->
sy2
);

846 
	`out°r
(
Al
);

848 
	`_gŸoxy
(0, 
wö
->
sy2
);

849 
	`out°r
(
Dl
);

850 
	`_gŸoxy
(0, 
wö
->
sy1
);

851 
	`out°r
(
Al
);

860 i‡(
sÊag
 && 
wö
->
sy2
 =(
LINES
 - 1Ë&& wö->
sy1
 != win->sy2) {

861 i‡(
dú
 =
S_UP
) {

862 
	`_wrôe
(
ﬁdc
.
vÆue
, 1, 
COLS
 - 1, 
LINES
 - 2,

863 
ﬁdc
.
©å
, oldc.
cﬁ‹
);

865 
sÊag
 = 0;

868 
ocurx
 = 
wö
->
curx
;

870 #i‡
HISTORY


872 i‡(
wö
->
hi°buf
 && 
dú
 =
S_UP
 &&

873 
wö
->
sy2
 =wö->
y2
 && wö->
sy1
 =wö->
y1
) {

876 
e
 = 
gm≠
 + 
wö
->
y1
 * 
COLS
 + wö->
x1
;

879 
f
 = 
wö
->
hi°buf
 + (wö->
xs
 * wö->
hi°löe
);

882 
	`mem˝y
((*)
f
, (*)
e
, 
wö
->
xs
 * (
ELM
));

885 
wö
->
hi°löe
++;

886 i‡(
wö
->
hi°löe
 >wö->
hi°löes
) win->histline = 0;

893 i‡(
phys_s¸
) {

894 
Àn
 = (
wö
->
sy2
 - wö->
sy1
Ë* wö->
xs
 * (
ELM
);

895 i‡(
dú
 =
S_UP
) {

896 
d°
 = (*)&
gm≠
[0];

897 
§c
 = (*)&
gm≠
[
wö
->
xs
];

898 
wö
->
cury
 = wö->
sy2
 - wö->
y1
;

900 
§c
 = (*)&
gm≠
[0];

901 
d°
 = (*)&
gm≠
[
wö
->
xs
];

902 
wö
->
cury
 = wö->
sy1
 - wö->
y1
;

907 
	`fÊush
(
°dout
);

908 #ifde‡
_SYSV


909 
	`mem˝y
((*)
d°
, (*)
§c
, 
Àn
);

911 #ifde‡
_BSD43


912 
	`bc›y
((*)
§c
, (*)
d°
, 
Àn
);

914 
	`memmove
((*)
d°
, (*)
§c
, 
Àn
);

919 i‡(
dú
 =
S_UP
) {

920 
y
 = 
wö
->
sy1
 + 1; y <wö->
sy2
; y++) {

921 
e
 = 
gm≠
 + 
y
 * 
COLS
 + 
wö
->
x1
;

922 
x
 = 
wö
->
x1
; x <wö->
x2
; x++) {

923 
	`_wrôe
(
e
->
vÆue
, 
wö
->
dúe˘
 && 
doô
,

924 
x
, 
y
 - 1, 
e
->
©å
,É->
cﬁ‹
);

925 
e
++;

928 
wö
->
curx
 = 0;

929 
wö
->
cury
 = wö->
sy2
 - wö->
y1
;

930 i‡(
doô
Ë(Ë
	`_w˛ªﬁ
(
wö
);

932 
y
 = 
wö
->
sy2
 - 1; y >wö->
sy1
; y--) {

933 
e
 = 
gm≠
 + 
y
 * 
COLS
 + 
wö
->
x1
;

934 
x
 = 
wö
->
x1
; x <wö->
x2
; x++) {

935 
	`_wrôe
(
e
->
vÆue
, 
wö
->
dúe˘
 && 
doô
,

936 
x
, 
y
 + 1, 
e
->
©å
,É->
cﬁ‹
);

937 
e
++;

940 
wö
->
curx
 = 0;

941 
wö
->
cury
 = wö->
sy1
 - wö->
y1
;

942 i‡(
doô
Ë(Ë
	`_w˛ªﬁ
(
wö
);

946 
wö
->
curx
 = 
ocurx
;

948 i‡(!
doô
Ë
x
 = 
wö
->
x1
; x <wö->
x2
; x++)

949 
	`_wrôe
(' ', 0, 
x
, 
wö
->
y1
 + wö->
cury
, wö->
©å
, wö->
cﬁ‹
);

950 i‡(!
_öã∫
 && 
wö
->
dúe˘
)

951 
	`_gŸoxy
(
wö
->
x1
 + wö->
curx
, wö->
y1
 + wö->
cury
);

952 i‡(
dúÊush
 && !
_öã∫
 && 
wö
->
dúe˘
Ë
	`wÊush
();

953 
	}
}

958 
	$wloˇã
(
wö
, 
x
, 
y
)

959 
WIN
 *
wö
;

960 
x
, 
y
;

962 i‡(
x
 < 0) x = 0;

963 i‡(
y
 < 0) y = 0;

964 i‡(
x
 >
wö
->
xs
) x = win->xs - 1;

965 i‡(
y
 >
wö
->
ys
) y = win->ys - 1;

967 
wö
->
curx
 = 
x
;

968 
wö
->
cury
 = 
y
;

969 i‡(
wö
->
dúe˘
Ë
	`_gŸoxy
(wö->
x1
 + 
x
, wö->
y1
 + 
y
);

971 i‡(
dúÊush
Ë
	`wÊush
();

972 
	}
}

977 
	$wputc
(
wö
, 
c
)

978 
WIN
 *
wö
;

979 
c
;

981 
mv
 = 0;

983 #ifde‡
SMOOTH


984 
curwö
 = 
wö
;

987 
c
) {

989 
wö
->
curx
 = 0;

990 
mv
++;

993 i‡(
wö
->
curx
 == 0) ;

994 
wö
->
curx
--;

995 
mv
++;

998 
	`wbñl
();

1002 
	`wputc
(
wö
, ' ');

1003 } 
wö
->
curx
 % 8);

1006 i‡(
wö
->
auto¸
Ëwö->
curx
 = 0;

1010 i‡(
c
 ='\n' || (
wö
->
curx
 >wö->
xs
 && wö->
wøp
)) {

1011 i‡(
c
 !'\n'Ë
wö
->
curx
 = 0;

1012 
wö
->
cury
++;

1013 
mv
++;

1014 i‡(
wö
->
cury
 =wö->
sy2
 - wö->
y1
 + 1) {

1015 i‡(
wö
->
dos¸ﬁl
)

1016 
	`ws¸ﬁl
(
wö
, 
S_UP
);

1018 
wö
->
cury
 = wö->
sy1
 - wö->
y1
;

1020 i‡(
wö
->
cury
 >wö->
ys
) win->cury = win->ys - 1;

1023 i‡(
c
 != '\n') {

1024 
	`_wrôe
(
c
, 
wö
->
dúe˘
, wö->
curx
 + wö->
x1
,

1025 
wö
->
cury
 + wö->
y1
, wö->
©å
, wö->
cﬁ‹
);

1026 i‡(++
wö
->
curx
 >wö->
xs
 && !wö->
wøp
) {

1027 
wö
->
curx
--;

1028 
curx
 = 0;

1029 
mv
++;

1034 i‡(
mv
 && 
wö
->
dúe˘
)

1035 
	`_gŸoxy
(
wö
->
x1
 + wö->
curx
, wö->
y1
 + wö->
cury
);

1037 i‡(
wö
->
dúe˘
 && 
dúÊush
 && !
_öã∫
Ë
	`wÊush
();

1038 
	}
}

1041 
	$wdøwñm
(
w
, 
y
, 
e
)

1042 
WIN
 *
w
;

1043 
y
;

1044 
ELM
 *
e
;

1046 
x
;

1049 
x
 = 
w
->
x1
; x <w->
x2
; x++)

1051 
	`_wrôe
(
e
->
vÆue
, 
w
->
dúe˘
, 
x
, 
y
 + w->
y1
,É->
©å
,É->
cﬁ‹
);

1053 
e
++;

1055 
	}
}

1057 #i‡
_SEARCH_HISTORY


1063 
	$wdøwñm_v¨
(
w
, 
y
, 
e
, 
buf
)

1064 
WIN
 *
w
;

1065 
y
;

1066 
ELM
 *
e
;

1067 *
buf
;

1069 
x
,
c
=0;

1072 
x
 = 
w
->
x1
; x <w->
x2
; x++)

1074 
buf
[
c
++]=
e
->
vÆue
;

1075 
e
++;

1077 
	}
}

1085 
	$wdøwñm_övî£
(
w
, 
y
, 
e
)

1086 
WIN
 *
w
;

1087 
y
;

1088 
ELM
 *
e
;

1090 
x
;

1095 
x
 = 
w
->
x1
;

1096 
	`_wrôe
(
e
->
vÆue
, 
w
->
dúe˘
, 
x
, 
y
 + w->
y1
, 
XA_NORMAL
,É->
cﬁ‹
);

1098 
e
++;

1101 
x
 = (
w
->
x1
+1); x <(w->
x2
-1); x++)

1103 
	`_wrôe
(
e
->
vÆue
, 
w
->
dúe˘
, 
x
, 
y
 + w->
y1
, 
XA_BOLD
, 
WHITE
);

1104 
e
++;

1108 
x
 = 
w
->
x2
;

1109 
	`_wrôe
(
e
->
vÆue
, 
w
->
dúe˘
, 
x
, 
y
 + w->
y1
, 
XA_NORMAL
,É->
cﬁ‹
);

1110 
	}
}

1115 
	$wputs
(
wö
, 
s
)

1116 
WIN
 *
wö
;

1117 *
s
;

1119 
_öã∫
 = 1;

1121 *
s
Ë
	`wputc
(
wö
, *s++);

1122 i‡(
dúÊush
 && 
wö
->
dúe˘
Ë
	`wÊush
();

1123 
_öã∫
 = 0;

1124 
	}
}

1131 
	$w¥ötf
(
wö
, 
s
, 
a1
, 
a2
, 
a3
, 
a4
, 
a5
, 
a6
, 
a7
, 
a8
, 
a9
, 
a10
)

1132 
WIN
 *
wö
;

1133 *
s
, *
a1
, *
a2
, *
a3
, *
a4
, *
a5
, *
a6
, *
a7
, *
a8
, *
a9
, *
a10
;

1135 
buf
[160];

1136 *
t
;

1138 
t
 = 
buf
;

1140 
_öã∫
 = 1;

1141 
	`¢¥ötf
(
buf
, (buf), 
s
, 
a1
, 
a2
, 
a3
, 
a4
, 
a5
, 
a6
, 
a7
, 
a8
, 
a9
, 
a10
);

1142 *
t
Ë
	`wputc
(
wö
, *t++);

1143 
_öã∫
 = 0;

1144 i‡(
dúÊush
 && 
wö
->
dúe˘
Ë
	`wÊush
();

1147 
	}
}

1152 
	$wbñl
()

1154 i‡(
BL
 !
CNULL
)

1155 
	`out°r
(
BL
);

1156 i‡(
VB
 !
CNULL
)

1157 
	`out°r
(
VB
);

1159 (Ë
	`outch¨
('\007');

1160 
	`wÊush
();

1161 
	}
}

1166 
	$wcurs‹
(
wö
, 
ty≥
)

1167 
WIN
 *
wö
;

1168 
ty≥
;

1170 
wö
->
curs‹
 = 
ty≥
;

1171 i‡(
wö
->
dúe˘
) {

1172 
	`_curs‹
(
ty≥
);

1173 i‡(
dúÊush
Ë
	`wÊush
();

1175 
	}
}

1177 
	$wtôÀ
(
w
, 
pos
, 
s
)

1178 
WIN
 *
w
;

1179 
pos
;

1180 *
s
;

1182 
x
 = 0;

1184 #ifde‡
SMOOTH


1185 
curwö
 = 
NIL_WIN
;

1188 i‡(
w
->
b‹dî
 =
BNONE
) ;

1190 i‡(
pos
 =
TLEFT
Ë
x
 = 
w
->
x1
;

1191 i‡(
pos
 =
TRIGHT
Ë
x
 = 
w
->
x2
 - 
	`°æí
(
s
) - 1;

1192 i‡(
pos
 =
TMID
Ë
x
 = 
w
->
x1
 + (w->
xs
 - 
	`°æí
(
s
)) / 2 - 1;

1193 i‡(
x
 < 
w
->
x1
) x = w->x1;

1195 i‡(
x
 < 
w
->
x2
Ë
	`_wrôe
('[', w->
dúe˘
, x++, w->
y1
 - 1, w->
©å
, w->
cﬁ‹
);

1196 *
s
 && 
x
 <
w
->
x2
Ë
	`_wrôe
(*s++, w->
dúe˘
, x++, w->
y1
 - 1,

1197 
w
->
©å
, w->
cﬁ‹
);

1198 i‡(
x
 <
w
->
x2
Ë
	`_wrôe
(']', w->
dúe˘
, x++, w->
y1
 - 1, w->
©å
, w->
cﬁ‹
);

1200 i‡(
w
->
dúe˘
) {

1201 
	`_gŸoxy
(
w
->
x1
 + w->
curx
, w->
y1
 + w->
cury
);

1202 i‡(
dúÊush
Ë
	`wÊush
();

1204 
	}
}

1212 
	$wcurb¨
(
w
, 
y
, 
©å
)

1213 
WIN
 *
w
;

1214 
y
;

1215 
©å
;

1217 
ELM
 *
e
;

1218 
x
;

1220 #ifde‡
SMOOTH


1221 
curwö
 = 
w
;

1224 
y
 +
w
->
y1
;

1226 
e
 = 
gm≠
 + 
y
 * 
COLS
 + 
w
->
x1
;

1231 i‡(!
u£©å
 || 
MR
 =
CNULL
) {

1232 i‡(
©å
 & 
XA_REVERSE
)

1233 
x
 = '>';

1235 
x
 = ' ';

1236 
	`_wrôe
(
x
, 
w
->
dúe˘
, w->
x1
, 
y
, 
©å
, 
e
->
cﬁ‹
);

1238 
x
 = 
w
->
x1
; x <w->
x2
; x++) {

1239 
	`_wrôe
(
e
->
vÆue
, 
w
->
dúe˘
, 
x
, 
y
, 
©å
,É->
cﬁ‹
);

1240 
e
++;

1243 i‡((
VI
 =
CNULL
 || 
_cur°y≥
 =
CNORMAL
Ë&& 
w
->
dúe˘
)

1244 
	`_gŸoxy
(
w
->
x1
, 
y
);

1245 i‡(
w
->
dúe˘
Ë
	`wÊush
();

1246 
	}
}

1251 
	$w£À˘
(
x
, 
y
, 
choi˚s
, 
fu∆i°
, 
tôÀ
, 
©å
, 
fg
, 
bg
)

1252 
x
, 
y
;

1253 **
choi˚s
;

1254 (**
fu∆i°
)();

1255 *
tôÀ
;

1256 
©å
, 
fg
, 
bg
;

1258 **
a
 = 
choi˚s
;

1259 
Àn
 = 0;

1260 
cou¡
 = 0;

1261 
cur
 = 0;

1262 
c
;

1263 
WIN
 *
w
;

1264 
high_⁄
 = 
XA_REVERSE
 | 
©å
;

1265 
high_off
 = 
©å
;

1269 *
a
 !
CNULL
) {

1270 
cou¡
++;

1271 i‡(
	`°æí
(
	`_
(*
a
)Ë> 
Àn
)Üen = strlen(_(*a));

1272 
a
++;

1274 i‡(
tôÀ
 !
CNULL
 && 
	`°æí
—ôÀË+ 2 > 
Àn
)Üen = strlen(title) + 2;

1275 i‡(
©å
 & 
XA_REVERSE
) {

1276 
high_⁄
 = 
©å
 & ~
XA_REVERSE
;

1277 
high_off
 = 
©å
;

1280 i‡((
w
 = 
	`w›í
(
x
, 
y
, x + 
Àn
 + 2, y + 
cou¡
 - 1, 
BDOUBLE
,

1281 
©å
, 
fg
, 
bg
, 0, 0, 0)Ë=(
WIN
 *)0) (-1);

1282 
	`wcurs‹
(
w
, 
CNONE
);

1284 i‡(
tôÀ
 !
CNULL
Ë
	`wtôÀ
(
w
, 
TMID
,Åitle);

1286 
c
 = 0; c < 
cou¡
; c++) {

1287 
	`w¥ötf
(
w
, " %s%s", 
	`_
(
choi˚s
[
c
]), c =
cou¡
 - 1 ? "" : "\n");

1290 
	`wcurb¨
(
w
, 
cur
, 
high_⁄
);

1291 
	`wªdøw
(
w
, 1);

1294 (
c
 = 
	`wxgëch
()) != 27 && c != '\n' && c!= '\r' && c != ' ') {

1295 i‡(
c
 =
K_UP
 || c =
K_DN
 || c == 'j' || c == 'k' ||

1296 
c
 =
K_HOME
 || c =
K_END
)

1297 
	`wcurb¨
(
w
, 
cur
, 
high_off
);

1298 
c
) {

1299 
K_UP
:

1301 
cur
--;

1302 i‡(
cur
 < 0Ëcu∏
cou¡
 - 1;

1304 
K_DN
:

1306 
cur
++;

1307 i‡(
cur
 >
cou¡
) cur = 0;

1309 
K_HOME
:

1310 
cur
 = 0;

1312 
K_END
:

1313 
cur
 = 
cou¡
 - 1;

1316 i‡(
c
 =
K_UP
 || c =
K_DN
 || c == 'j' || c == 'k' ||

1317 
c
 =
K_HOME
 || c =
K_END
)

1318 
	`wcurb¨
(
w
, 
cur
, 
high_⁄
);

1320 
	`wcurs‹
(
w
, 
CNORMAL
);

1321 i‡(
c
 == ' ' || c == 27) {

1322 
	`w˛o£
(
w
, 1);

1325 i‡(
fu∆i°
 =
NIL_FUNLIST
 || fu∆i°[
cur
] =
NIL_FUN
) {

1326 
	`w˛o£
(
w
, 1);

1327 (
cur
 + 1);

1329 (*
fu∆i°
[
cur
])();

1330 
	`wcurs‹
(
w
, 
CNONE
);

1332 
	}
}

1340 
	$w˛ªl
(
w
)

1341 
WIN
 *
w
;

1343 
ocurx
 = 
w
->
curx
;

1345 
w
->
curx
 = 0;

1346 (Ë
	`_w˛ªﬁ
(
w
);

1347 
w
->
curx
 = 
ocurx
;

1348 
	`wloˇã
(
w
, 
ocurx
, w->
cury
);

1349 
	}
}

1354 
	$w˛ªﬁ
(
w
)

1355 
WIN
 *
w
;

1357 i‡(
	`_w˛ªﬁ
(
w
Ë&& w->
dúe˘
Ë
	`_gŸoxy
(w->
x1
 + w->
curx
, w->
y1
 + w->
cury
);

1358 i‡(
dúÊush
Ë
	`wÊush
();

1359 
	}
}

1364 
	$w˛rbﬁ
(
w
)

1365 
WIN
 *
w
;

1367 
x
, 
y
, 
n
;

1369 #ifde‡
SMOOTH


1370 
curwö
 = 
w
;

1373 
y
 = 
w
->
cury
 + w->
y1
;

1375 i‡(
w
->
dúe˘
Ë
	`_gŸoxy
(w->
x1
, 
y
);

1377 
n
 = 
w
->
x1
 + w->
curx
;

1378 if–
n
 > 
w
->
x2
)Ç = w->x2;

1379 
x
 = 
w
->
x1
; x <
n
; x++Ë
	`_wrôe
(' ', w->
dúe˘
, x, 
y
,

1380 
w
->
©å
, w->
cﬁ‹
);

1381 i‡(
w
->
dúe˘
) {

1382 
	`_gŸoxy
(
n
, 
y
);

1383 i‡(
dúÊush
Ë
	`wÊush
();

1385 
	}
}

1390 
	$w˛ªos
(
w
)

1391 
WIN
 *
w
;

1393 
y
;

1394 
ocurx
, 
ocury
;

1396 
ocurx
 = 
w
->
curx
;

1397 
ocury
 = 
w
->
cury
;

1399 
w
->
curx
 = 0;

1401 
y
 = 
w
->
cury
 + 1; y <w->
y2
 - w->
y1
; y++) {

1402 
w
->
cury
 = 
y
;

1403 (Ë
	`_w˛ªﬁ
(
w
);

1405 
w
->
curx
 = 
ocurx
;

1406 
w
->
cury
 = 
ocury
;

1407 i‡(
	`_w˛ªﬁ
(
w
Ë&& w->
dúe˘
Ë
	`_gŸoxy
(w->
x1
 + w->
curx
, w->
y1
 + w->
cury
);

1408 i‡(
dúÊush
 && 
w
->
dúe˘
Ë
	`wÊush
();

1409 
	}
}

1414 
	$w˛rbos
(
w
)

1415 
WIN
 *
w
;

1417 
ocurx
, 
ocury
;

1418 
y
;

1420 
ocurx
 = 
w
->
curx
;

1421 
ocury
 = 
w
->
cury
;

1423 
w
->
curx
 = 0;

1425 
y
 = 0; y < 
ocury
; y++) {

1426 
w
->
cury
 = 
y
;

1427 (Ë
	`_w˛ªﬁ
(
w
);

1429 
w
->
curx
 = 
ocurx
;

1430 
w
->
cury
 = 
ocury
;

1431 
	`w˛rbﬁ
(
w
);

1432 
	}
}

1437 
	$wö˛r
(
w
)

1438 
WIN
 *
w
;

1440 
y
;

1441 
ﬁddú
 = 
w
->
dúe˘
;

1442 #i‡
HISTORY


1443 
ELM
 *
e
, *
f
;

1444 
i
;

1445 
m
;

1448 i‡(
w
->
hi°buf
) {

1454 
m
 = 
w
->
y2
; m >w->
y1
; m--) {

1456 
e
 = 
gm≠
 + 
m
 * 
COLS
 + 
w
->
x1
;

1459 
i
 = 0; i < 
w
->
xs
; i++)

1460 i‡(
e
[
i
].
vÆue
 != ' ') ;

1462 i‡(
i
 !
w
->
xs
) ;

1466 
y
 = 
w
->
y1
; y <
m
; y++) {

1468 
e
 = 
gm≠
 + 
y
 * 
COLS
 + 
w
->
x1
;

1471 
f
 = 
w
->
hi°buf
 + (w->
xs
 * w->
hi°löe
);

1472 
	`mem˝y
((*)
f
, (*)
e
, 
w
->
xs
 * (
ELM
));

1473 
w
->
hi°löe
++;

1474 i‡(
w
->
hi°löe
 >w->
hi°löes
) w->histline = 0;

1479 
	`_£èâr
(
w
->
©å
, w->
cﬁ‹
);

1480 
w
->
curx
 = 0;

1482 i‡(
CL
 && 
w
->
y1
 =0 && w->
y2
 =
LINES
-1 &&

1483 
w
->
x1
 =0 && w->
x2
 =
COLS
-1) {

1484 
w
->
dúe˘
 = 0;

1485 
curx
 = 0;

1486 
cury
 = 0;

1487 
	`out°r
(
CL
);

1489 
y
 = 
w
->
ys
 - 1; y >= 0; y--) {

1490 
w
->
cury
 = 
y
;

1491 (Ë
	`_w˛ªﬁ
(
w
);

1493 
w
->
dúe˘
 = 
ﬁddú
;

1494 
	`_gŸoxy
(
w
->
x1
, w->
y1
);

1495 i‡(
dúÊush
Ë
	`wÊush
();

1496 
	}
}

1500 
	$wö¶öe
(
w
)

1501 
WIN
 *
w
;

1503 
osy1
, 
osy2
;

1505 
osy1
 = 
w
->
sy1
;

1506 
osy2
 = 
w
->
sy2
;

1508 
w
->
sy1
 = w->
y1
 + w->
cury
;

1509 
w
->
sy2
 = w->
y2
;

1510 i‡(
w
->
sy1
 < 
osy1
) w->sy1 = osy1;

1511 i‡(
w
->
sy2
 > 
osy2
) w->sy2 = osy2;

1512 
	`ws¸ﬁl
(
w
, 
S_DOWN
);

1514 
w
->
sy1
 = 
osy1
;

1515 
w
->
sy2
 = 
osy2
;

1516 
	}
}

1518 
	$wdñlöe
(
w
)

1519 
WIN
 *
w
;

1521 
osy1
, 
osy2
;

1522 
ocury
;

1524 
ocury
 = 
w
->
cury
;

1525 
osy1
 = 
w
->
sy1
;

1526 
osy2
 = 
w
->
sy2
;

1528 
w
->
sy1
 = w->
y1
 + w->
cury
;

1529 
w
->
sy2
 = w->
y2
;

1530 i‡(
w
->
sy1
 < 
osy1
) w->sy1 = osy1;

1531 i‡(
w
->
sy2
 > 
osy2
) w->sy2 = osy2;

1533 
_öã∫
 = 1;

1534 
	`ws¸ﬁl
(
w
, 
S_UP
);

1535 
_öã∫
 = 0;

1536 
	`wloˇã
(
w
, 0, 
ocury
);

1538 
w
->
sy1
 = 
osy1
;

1539 
w
->
sy2
 = 
osy2
;

1540 
	}
}

1545 
	$wösch¨2
(
w
, 
c
, 
move
)

1546 
WIN
 *
w
;

1547 
c
;

1548 
move
;

1550 
y
;

1551 
x
;

1552 
doô
 = 1;

1553 
ELM
 
buf
[160];

1554 
ELM
 *
e
;

1555 
Àn
, 
odú
;

1556 
ﬁdx
;

1558 #ifde‡
SMOOTH


1559 
curwö
 = 
w
;

1563 i‡(
c
 =0 || 
	`°rchr
("\r\n\t\b\007", cË|| 
w
->
curx
 >w->
xs
 - 1) {

1564 
	`wputc
(
w
, 
c
);

1568 
odú
 = 
w
->
dúe˘
;

1569 i‡(
w
->
xs
 =
COLS
 && 
IC
 !
CNULL
) {

1571 i‡(
w
->
dúe˘
Ë
	`out°r
(
IC
);

1574 i‡(
c
 =' 'Ë
w
->
dúe˘
 = 0;

1577 
doô
 = 0;

1581 
y
 = 
w
->
y1
 + w->
cury
;

1582 
x
 = 
w
->
x1
 + w->
curx
;

1583 
ﬁdx
 = 
w
->
curx
;

1584 
Àn
 = 
w
->
xs
 - w->
curx
;

1585 
	`mem˝y
(
buf
, 
gm≠
 + 
COLS
 * 
y
 + 
x
, (
ELM
Ë* 
Àn
);

1588 
	`wputc
(
w
, 
c
);

1589 i‡(!
move
Ë
w
->
curx
 = 
ﬁdx
;

1592 
e
 = 
buf
;

1593 ++
x
; x <
w
->
x2
; x++) {

1594 
	`_wrôe
(
e
->
vÆue
, 
doô
 && 
w
->
dúe˘
, 
x
, 
y
,É->
©å
,É->
cﬁ‹
);

1595 
e
++;

1597 
w
->
dúe˘
 = 
odú
;

1598 
	`wloˇã
(
w
, w->
curx
, w->
cury
);

1599 
	}
}

1601 
	$wösch¨
(
w
)

1602 
WIN
 *
w
;

1604 
	`wösch¨2
(
w
, ' ', 0);

1605 
	}
}

1610 
	$wdñch¨
(
w
)

1611 
WIN
 *
w
;

1613 
x
, 
y
;

1614 
doô
 = 1;

1615 
ELM
 *
e
;

1617 #ifde‡
SMOOTH


1618 
curwö
 = 
w
;

1621 
x
 = 
w
->
x1
 + w->
curx
;

1622 
y
 = 
w
->
y1
 + w->
cury
;

1624 i‡(
w
->
dúe˘
 && w->
xs
 =
COLS
 && 
DC
 !
CNULL
) {

1626 
	`_gŸoxy
(
x
, 
y
);

1627 
	`out°r
(
DC
);

1628 
doô
 = 0;

1631 
e
 = 
gm≠
 + 
y
 * 
COLS
 + 
x
 + 1;

1633 ; 
x
 < 
w
->
x2
; x++) {

1634 
	`_wrôe
(
e
->
vÆue
, 
doô
 && 
w
->
dúe˘
, 
x
, 
y
,É->
©å
,É->
cﬁ‹
);

1635 
e
++;

1637 
	`_wrôe
(' ', 
doô
 && 
w
->
dúe˘
, 
x
, 
y
, w->
©å
, w->
cﬁ‹
);

1638 
	`wloˇã
(
w
, w->
curx
, w->
cury
);

1639 
	}
}

1644 
	$Ãedøw
(
w
, 
x
, 
y
, 
s
, 
Àn
)

1645 
WIN
 *
w
;

1646 
x
;

1647 
y
;

1648 *
s
;

1649 
Àn
;

1651 
i
, 
f
;

1653 
i
 = 0;

1654 
	`wloˇã
(
w
, 
x
, 
y
);

1655 
f
 = 0; f < 
Àn
; f++) {

1656 i‡(
s
[
f
] =0Ë
i
++;

1657 
	`wputc
(
w
, 
i
 ? ' ' : 
s
[
f
]);

1659 
	}
}

1661 #i‡
MAC_LEN
 > 256

1662 
	#BUFLEN
 
MAC_LEN


	)

1664 
	#BUFLEN
 256

	)

1668 
	$wgës
(
w
, 
s
, 
löñí
, 
maxÀn
)

1669 
WIN
 *
w
;

1670 *
s
;

1671 
löñí
;

1672 
maxÀn
;

1674 
c
;

1675 
idx
;

1676 
offs
 = 0;

1677 
f
, 
°
 = 0, 
i
;

1678 
buf
[
BUFLEN
];

1679 
quô
 = 0;

1680 
⁄˚
 = 1;

1681 
x
, 
y
, 
r
;

1682 
dúe˘
 = 
dúÊush
;

1683 
dñëe
 = 1;

1685 
x
 = 
w
->
curx
;

1686 
y
 = 
w
->
cury
;

1688 
i
 = 
w
->
xs
 - 
x
;

1689 i‡(
löñí
 >
i
 - 1)Üinelen = i - 1;

1692 i‡((
idx
 = 
	`°æí
(
s
)Ë> 
löñí
)

1693 
idx
 = 
löñí
;

1694 
	`°∫˝y
(
buf
, 
s
, (buf));

1695 
	`wloˇã
(
w
, 
x
 + 
idx
, 
y
);

1696 
dúÊush
 = 0;

1697 
	`wÊush
();

1699 !
quô
) {

1700 i‡(
⁄˚
) {

1701 
c
 = 
K_END
;

1702 
⁄˚
--;

1704 
c
 = 
	`wxgëch
();

1705 i‡(
c
 > 255 || c =
K_BS
 || c =
K_DEL
Ë
dñëe
 = 0;

1707 
c
) {

1710 
°
 = 0;

1711 
quô
 = 1;

1713 
K_ESC
:

1714 
	`wloˇã
(
w
, 
x
, 
y
);

1715 
	`Ãedøw
(
w
, 
x
, 
y
, 
s
, 
löñí
);

1716 
	`wÊush
();

1717 
°
 = -1;

1718 
quô
 = 1;

1720 
K_HOME
:

1721 
r
 = (
offs
 > 0);

1722 
offs
 = 0;

1723 
idx
 = 0;

1724 i‡(
r
Ë
	`Ãedøw
(
w
, 
x
, 
y
, 
buf
, 
löñí
);

1725 
	`wloˇã
(
w
, 
x
, 
y
);

1726 
	`wÊush
();

1728 
K_END
:

1729 
idx
 = 
	`°æí
(
buf
);

1730 
r
 = 0;

1731 
idx
 - 
offs
 > 
löñí
) {

1732 
r
 = 1;

1733 
offs
 += 4;

1735 i‡(
r
Ë
	`Ãedøw
(
w
, 
x
, 
y
, 
buf
 + 
offs
, 
löñí
);

1736 
	`wloˇã
(
w
, 
x
 + 
idx
 - 
offs
, 
y
);

1737 
	`wÊush
();

1739 
K_LT
:

1740 
K_BS
:

1741 i‡(
idx
 == 0) ;

1742 
idx
--;

1743 i‡(
idx
 < 
offs
) {

1744 
offs
 -= 4;

1746 
	`Ãedøw
(
w
, 
x
, 
y
, 
buf
 + 
offs
, 
löñí
);

1748 if(
c
 =
K_LT
) {

1749 
	`wloˇã
(
w
, 
x
 + 
idx
 - 
offs
, 
y
);

1750 
	`wÊush
();

1754 
K_DEL
:

1755 i‡(
buf
[
idx
] == 0) ;

1756 
f
 = 
idx
; 
buf
[f]; f++)

1757 
buf
[
f
] = buf[f+1];

1758 
	`Ãedøw
(
w
, 
x
 + 
idx
 - 
offs
, 
y
, 
buf
 + idx,

1759 
löñí
 - (
idx
 - 
offs
));

1760 
	`wloˇã
(
w
, 
x
 + 
idx
 - 
offs
, 
y
);

1761 
	`wÊush
();

1763 
K_RT
:

1764 i‡(
buf
[
idx
] == 0) ;

1765 
idx
++;

1766 i‡(
idx
 - 
offs
 > 
löñí
) {

1767 
offs
 += 4;

1768 
	`Ãedøw
(
w
, 
x
, 
y
, 
buf
 + 
offs
, 
löñí
);

1770 
	`wloˇã
(
w
, 
x
 + 
idx
 - 
offs
, 
y
);

1771 
	`wÊush
();

1775 i‡(
dñëe
) {

1776 i‡((
i
 = 
	`°æí
(
buf
)Ë> 
löñí
)

1777 
i
 = 
löñí
;

1778 
buf
[0] = 0;

1779 
idx
 = 0;

1780 
offs
 = 0;

1781 
	`wloˇã
(
w
, 
x
, 
y
);

1782 
f
 = 0; f < 
i
; f++Ë
	`wputc
(
w
, ' ');

1783 
dñëe
 = 0;

1787 i‡(
c
 < 32 || c > 127) ;

1788 i‡(
idx
 + 1 >
maxÀn
) ;

1789 
f
 = 
	`°æí
(
buf
Ë+ 1; f > 
idx
; f--)

1790 
buf
[
f
] = buf[f-1];

1791 
i
 = 
buf
[
idx
];

1792 
buf
[
idx
] = 
c
;

1793 i‡(
i
 =0Ë
buf
[
idx
+1] = i;

1794 i‡(
idx
 - 
offs
 >
löñí
) {

1795 
offs
 += 4;

1796 
	`Ãedøw
(
w
, 
x
, 
y
, 
buf
 + 
offs
, 
löñí
);

1798 
	`Ãedøw
(
w
, 
x
 + 
idx
 - 
offs
, 
y
, 
buf
 + idx,

1799 
löñí
 - (
idx
 - 
offs
));

1800 
idx
++;

1801 
	`wloˇã
(
w
, 
x
 + 
idx
 - 
offs
, 
y
);

1802 
	`wÊush
();

1806 i‡(
°
 =0Ë
	`°r˝y
(
s
, 
buf
);

1807 
dúÊush
 = 
dúe˘
;

1808 (
°
);

1809 
	}
}

1813 
	gtbuf
[1024];

1814 
	gcbuf
[2048];

1817 
	$acm≠
(
c
)

1818 
c
;

1820 *
p
;

1822 
p
 = 
AC
; *p;Ö += 2)

1823 i‡(*
p
 =
c
) (*++p);

1825 
	}
}

1830 #ifde‡
BBS


1832 
	$wö_öô
(
ãrm
, 
löes
)

1833 *
ãrm
;

1834 
löes
;

1836 
fg
 = 
WHITE
;

1837 
bg
 = 
BLACK
;

1838 
©å
 = 
XA_NORMAL
;

1841 
	$wö_öô
(
fg
, 
bg
, 
©å
)

1842 
fg
;

1843 
bg
;

1844 
©å
;

1846 *
ãrm
;

1848 
WIN
 
_°dwö
;

1849 
f
, 
ﬁdu£©å
;

1851 i‡(
w_öô
) (0);

1853 #i‚de‡
BBS


1854 i‡((
ãrm
 = 
	`gëív
("TERM")Ë=
CNULL
) {

1855 
	`Ârötf
(
°dîr
, 
	`_
("Environment variable TERMÇot set\n"));

1859 (
f
 = 
	`tgëít
(
cbuf
, 
ãrm
))) {

1861 
	`Ârötf
(
°dîr
, 
	`_
("Nÿãrmˇ∞íåy f‹ %s\n"), 
ãrm
);

1864 
	`Ârötf
(
°dîr
, 
	`_
("NoÅermcap databaseÖresent!\n"));

1869 
_çå
 = 
tbuf
;

1871 i‡((
CM
 = 
	`tgë°r
("cm", &
_çå
)Ë=
CNULL
) {

1872 
	`Ârötf
(
°dîr
, 
	`_
("No cursor motion capability (cm)\n"));

1875 
LINES
 = 
COLS
 = 0;

1876 
	`gërowcﬁs
(&
LINES
, &
COLS
);

1877 #ifde‡
BBS


1878 
LINES
 = 
löes
;

1880 i‡(
LINES
 =0 && (LINES = 
	`tgënum
("li")) <= 0) {

1881 
	`Ârötf
(
°dîr
, 
	`_
("Number ofÅerminalÜines unknown\n"));

1884 i‡(
COLS
 =0 && (COLS = 
	`tgënum
("co")) <= 0) {

1885 
	`Ârötf
(
°dîr
, 
	`_
("Number ofÅerminal columns unknown\n"));

1890 
ME
 = 
	`tgë°r
("me", &
_çå
);

1891 
SE
 = 
	`tgë°r
("£", &
_çå
);

1892 
UE
 = 
	`tgë°r
("ue", &
_çå
);

1893 
AS
 = 
	`tgë°r
("as", &
_çå
);

1894 
AE
 = 
	`tgë°r
("´", &
_çå
);

1895 
MB
 = 
	`tgë°r
("mb", &
_çå
);

1896 
MD
 = 
	`tgë°r
("md", &
_çå
);

1897 
MR
 = 
	`tgë°r
("mr", &
_çå
);

1898 
SO
 = 
	`tgë°r
("so", &
_çå
);

1899 
US
 = 
	`tgë°r
("us", &
_çå
);

1900 
CE
 = 
	`tgë°r
("˚", &
_çå
);

1901 
Al
 = 
	`tgë°r
("Æ", &
_çå
);

1902 
Dl
 = 
	`tgë°r
("dl", &
_çå
);

1903 
AL
 = 
	`tgë°r
("AL", &
_çå
);

1904 
DL
 = 
	`tgë°r
("DL", &
_çå
);

1905 
CS
 = 
	`tgë°r
("cs", &
_çå
);

1906 
SF
 = 
	`tgë°r
("sf", &
_çå
);

1907 
SR
 = 
	`tgë°r
("§", &
_çå
);

1908 
VB
 = 
	`tgë°r
("vb", &
_çå
);

1909 
BL
 = 
	`tgë°r
("bl", &
_çå
);

1910 
VE
 = 
	`tgë°r
("ve", &
_çå
);

1911 
VI
 = 
	`tgë°r
("vi", &
_çå
);

1912 
IS
 = 
	`tgë°r
("is", &
_çå
);

1913 
RS
 = 
	`tgë°r
("rs", &
_çå
);

1914 
KS
 = 
	`tgë°r
("ks", &
_çå
);

1915 
KE
 = 
	`tgë°r
("ke", &
_çå
);

1916 
CD
 = 
	`tgë°r
("cd", &
_çå
);

1917 
CL
 = 
	`tgë°r
("˛", &
_çå
);

1918 
IC
 = 
	`tgë°r
("ic", &
_çå
);

1919 
DC
 = 
	`tgë°r
("dc", &
_çå
);

1920 
BC
 = 
	`tgë°r
("bc", &
_çå
);

1921 
CR
 = 
	`tgë°r
("¸", &
_çå
);

1922 
NL
 = 
	`tgë°r
("∆", &
_çå
);

1923 
AC
 = 
	`tgë°r
("ac", &
_çå
);

1924 
EA
 = 
	`tgë°r
("eA", &
_çå
);

1925 #i‡
ST_LINE


1926 
TS
 = 
	`tgë°r
("ts", &
_çå
);

1927 
FS
 = 
	`tgë°r
("fs", &
_çå
);

1928 
DS
 = 
	`tgë°r
("ds", &
_çå
);

1931 i‡(
MR
 =
CNULL
ËMR = 
SO
;

1932 i‡(
MR
 =
CNULL
ËMR = 
US
;

1933 i‡(
MR
 =
CNULL
ËMR = 
MD
;

1934 i‡(
SF
 =
CNULL
) SF = "\n";

1935 i‡(
AC
 =
NULL
 || *AC =0ËAC = 
def_ac
;

1941 i‡(
CR
 =
CNULL
) CR = "\r";

1942 i‡(
NL
 =
CNULL
) NL = "\n";

1944 #i‡
ST_LINE


1946 i‡(!
	`tgëÊag
("hs"Ë|| !tgëÊag("es"Ë|| !
TS
 || !
FS
)

1947 
u£_°©us
 = 0;

1949 
u£_°©us
 = 0;

1952 i‡(
IS
 !
CNULL
Ë
	`out°r
(IS);

1955 
ﬁdu£©å
 = 
u£©å
;

1956 
u£©å
 = 1;

1957 
	`_£èâr
(
XA_NORMAL
, 
	`COLATTR
(
WHITE
, 
BLACK
));

1958 
u£©å
 = 
ﬁdu£©å
;

1961 i‡(
MR
 =
CNULL
Ë
u£©å
 = 0;

1964 i‡(
	`tgënum
("ug"Ë> 0Ë
u£©å
 = 0;

1966 
_has_am
 = 
	`tgëÊag
("am");

1967 
_mv_°™dout
 = 
	`tgëÊag
("ms");

1968 i‡(
	`tgëÊag
("bs")) {

1969 i‡(
BC
 =
CNULL
) BC = "\b";

1972 
BC
 = 
CNULL
;

1975 
D_UL
 = 201;

1976 
D_HOR
 = 205;

1977 
D_UR
 = 187;

1978 
D_LL
 = 200;

1979 
D_VER
 = 186;

1980 
D_LR
 = 188;

1982 
S_UL
 = 218;

1983 
S_HOR
 = 240;

1984 
S_UR
 = 191;

1985 
S_LL
 = 192;

1986 
S_VER
 = 179;

1987 
S_LR
 = 217;

1989 i‡(
AS
 !
NULL
 && !
s¸ìn_ibmpc
) {

1991 
D_UL
 = 
S_UL
 = 
	`acm≠
('l');

1992 
D_HOR
 = 
S_HOR
 = 
	`acm≠
('q');

1993 
D_UR
 = 
S_UR
 = 
	`acm≠
('k');

1994 
D_LL
 = 
S_LL
 = 
	`acm≠
('m');

1995 
D_VER
 = 
S_VER
 = 
	`acm≠
('x');

1996 
D_LR
 = 
S_LR
 = 
	`acm≠
('j');

1999 i‡(
s¸ìn_iso
) {

2001 
D_UL
 = 
S_UL
 = '+';

2002 
D_HOR
 = 
S_HOR
 = '-';

2003 
D_UR
 = 
S_UR
 = '+';

2004 
D_LL
 = 
S_LL
 = '+';

2005 
D_VER
 = 
S_VER
 = '|';

2006 
D_LR
 = 
S_LR
 = '+';

2010 #i‡
VERY_OLD


2011 i‡((
p
 = 
	`tgë°r
("gA", &
_çå
)Ë!
CNULL
Ë
wch¨m≠
[201] = *p;

2012 i‡((
p
 = 
	`tgë°r
("gB", &
_çå
)Ë!
CNULL
Ë
wch¨m≠
[205] = *p;

2013 i‡((
p
 = 
	`tgë°r
("gC", &
_çå
)Ë!
CNULL
Ë
wch¨m≠
[187] = *p;

2014 i‡((
p
 = 
	`tgë°r
("gD", &
_çå
)Ë!
CNULL
Ë
wch¨m≠
[200] = *p;

2015 i‡((
p
 = 
	`tgë°r
("gE", &
_çå
)Ë!
CNULL
Ë
wch¨m≠
[186] = *p;

2016 i‡((
p
 = 
	`tgë°r
("gF", &
_çå
)Ë!
CNULL
Ë
wch¨m≠
[188] = *p;

2017 i‡((
p
 = 
	`tgë°r
("gG", &
_çå
)Ë!
CNULL
Ë
wch¨m≠
[218] = *p;

2018 i‡((
p
 = 
	`tgë°r
("gH", &
_çå
)Ë!
CNULL
Ë
wch¨m≠
[240] = *p;

2019 i‡((
p
 = 
	`tgë°r
("gI", &
_çå
)Ë!
CNULL
Ë
wch¨m≠
[191] = *p;

2020 i‡((
p
 = 
	`tgë°r
("gJ", &
_çå
)Ë!
CNULL
Ë
wch¨m≠
[192] = *p;

2021 i‡((
p
 = 
	`tgë°r
("gK", &
_çå
)Ë!
CNULL
Ë
wch¨m≠
[179] = *p;

2022 i‡((
p
 = 
	`tgë°r
("gL", &
_çå
)Ë!
CNULL
Ë
wch¨m≠
[217] = *p;

2026 i‡((
gm≠
 = (
ELM
 *)
	`mÆloc
((ELMË* (
LINES
 + 1Ë* 
COLS
)) == (ELM *)0) {

2027 
	`Ârötf
(
°dîr
, "NotÉnough memory\n");

2030 
_buf„nd
 = 
_buf°¨t
 + 
BUFFERSIZE
;

2033 
°dwö
 = &
_°dwö
;

2035 
°dwö
->
wøp
 = 1;

2036 
°dwö
->
curs‹
 = 
CNORMAL
;

2037 
°dwö
->
auto¸
 = 1;

2038 
°dwö
->
dos¸ﬁl
 = 1;

2039 
°dwö
->
x1
 = 0;

2040 
°dwö
->
sy1
 = stdwö->
y1
 = 0;

2041 
°dwö
->
x2
 = 
COLS
 - 1;

2042 
°dwö
->
sy2
 = stdwö->
y2
 = 
LINES
 - 1;

2043 
°dwö
->
xs
 = 
COLS
;

2044 
°dwö
->
ys
 = 
LINES
;

2045 
°dwö
->
©å
 =áttr;

2046 
°dwö
->
cﬁ‹
 = 
	`COLATTR
(
fg
, 
bg
);

2047 
°dwö
->
dúe˘
 = 1;

2048 #i‡
HISTORY


2049 
°dwö
->
hi°buf
 = (
ELM
 *)0;

2052 i‡(
EA
 !
CNULL
Ë
	`out°r
(EA);

2053 i‡(
KS
 !
CNULL
Ë
	`out°r
(KS);

2055 (Ë
	`£tcbªak
(1);

2057 
	`wö˛r
(
°dwö
);

2058 
w_öô
 = 1;

2060 
	}
}

2062 
	$wö_íd
()

2064 i‡(
gm≠
 =(
ELM
 *)0 || 
w_öô
 == 0) ;

2065 (Ë
	`£tcbªak
(0);

2066 
°dwö
->
©å
 = 
XA_NORMAL
;

2067 
°dwö
->
cﬁ‹
 = 
	`COLATTR
(
WHITE
, 
BLACK
);

2068 
	`_£èâr
(
°dwö
->
©å
, stdwö->
cﬁ‹
);

2069 
	`wö˛r
(
°dwö
);

2070 #i‡
ST_LINE


2071 i‡(
DS
Ë
	`out°r
(DS);

2073 
	`wcurs‹
(
°dwö
, 
CNORMAL
);

2074 i‡(
KE
 !
CNULL
Ë
	`out°r
(KE);

2075 i‡(
RS
 !
CNULL
Ë
	`out°r
(RS);

2076 i‡(
IS
 !
CNULL
Ë
	`out°r
(IS);

2078 
	`wÊush
();

2079 
	`‰ì
(
gm≠
);

2080 
gm≠
 = (
ELM
 *)0;

2081 
°dwö
 = 
NIL_WIN
;

2082 
w_öô
 = 0;

2083 
	}
}

	@window.h

22 
	s_ñm
 {

23 
	mvÆue
;

24 
	m©å
;

25 
	mcﬁ‹
;

26 } 
	tELM
;

31 
	s_wö
 {

32 
	mx1
, 
	my1
, 
	mx2
, 
	my2
;

33 
	msy1
, 
	msy2
;

34 
	mxs
, 
	mys
;

35 
	mb‹dî
;

36 
	mcurs‹
;

37 
	m©å
;

38 
	mcﬁ‹
;

39 
	mauto¸
;

40 
	mdos¸ﬁl
;

41 
	mwøp
;

42 
	mdúe˘
;

43 
	mcurx
, 
	mcury
;

44 
	mo_curs‹
;

45 
	mo_curx
;

46 
	mo_cury
;

47 
	mo_©å
;

48 
	mo_cﬁ‹
;

49 
ELM
 *
	mm≠
;

50 
ELM
 *
	mhi°buf
;

51 
	mhi°löes
;

52 
	mhi°löe
;

53 } 
	tWIN
;

58 
WIN
 *
°dwö
;

59 
LINES
, 
COLS
;

60 
u£cﬁ‹
;

61 
u£©å
;

62 
dúÊush
;

63 
s¸ìn_ibmpc
;

64 
s¸ìn_iso
;

65 
w_öô
;

69 
mfcﬁ‹
;

70 
mbcﬁ‹
;

71 
tfcﬁ‹
;

72 
tbcﬁ‹
;

73 
sfcﬁ‹
;

74 
sbcﬁ‹
;

75 *
J_cﬁ
[];

80 
	#XA_NORMAL
 0

	)

81 
	#XA_BLINK
 1

	)

82 
	#XA_BOLD
 2

	)

83 
	#XA_REVERSE
 4

	)

84 
	#XA_STANDOUT
 8

	)

85 
	#XA_UNDERLINE
 16

	)

86 
	#XA_ALTCHARSET
 32

	)

87 
	#XA_BLANK
 64

	)

92 
	#BLACK
 0

	)

93 
	#RED
 1

	)

94 
	#GREEN
 2

	)

95 
	#YELLOW
 3

	)

96 
	#BLUE
 4

	)

97 
	#MAGENTA
 5

	)

98 
	#CYAN
 6

	)

99 
	#WHITE
 7

	)

101 
	#COLATTR
(
fg
, 
bg
Ë(((fgË<< 4Ë+ (bg))

	)

102 
	#COLFG
(
ˇ
Ë((ˇË>> 4)

	)

103 
	#COLBG
(
ˇ
Ë((ˇË% 16)

	)

108 
	#BNONE
 0

	)

109 
	#BSINGLE
 1

	)

110 
	#BDOUBLE
 2

	)

115 
	#S_UP
 1

	)

116 
	#S_DOWN
 2

	)

121 
	#CNONE
 0

	)

122 
	#CNORMAL
 1

	)

127 
	#TLEFT
 0

	)

128 
	#TMID
 1

	)

129 
	#TRIGHT
 2

	)

134 
	#NIL_FUNLIST
 (((**)()Ë0)

	)

135 
	#NIL_FUN
 (((*)()Ë0)

	)

136 
	#MENU_END
 ((*Ë0)

	)

138 
	#CNULL
 ((*)0)

	)

139 
	#NIL_WIN
 (
WIN
 *Ë0

	)

145 #i‚de‡
_PROTO


146 #i‡
__STDC__


147 
	#_PROTO
(
fun
, 
¨gs
Ëfu¿
	)
args

149 
	#_PROTO
(
fun
, 
¨gs
Ë
	`fun
()

	)

153 
_PROTO
–
wxgëch
, ( ));

155 
_PROTO
(
wÊush
, ( ));

156 
_PROTO
(
WIN
 *
w›í
, ( 
x1
 , 
y1
 , 
x2
 , 
y2
 , 
b‹dî
 ,

157 
©å
 , 
fg
 , 
bg
 , 
dúe˘
 , 
hl
 , 
ªl
 ));

158 
_PROTO
(
w˛o£
, ( 
WIN
 *
wö
 , 
ª∂a˚
 ));

159 
_PROTO
(
wÀave
, ( ));

160 
_PROTO
(
wªtu∫
, ( ));

161 
_PROTO
(
wªsize
, (
WIN
 *
w
, 
x
, 
y
 ));

162 
_PROTO
(
wªdøw
, ( 
WIN
 *
w
 , 
√wdúe˘
 ));

163 
_PROTO
(
ws¸ﬁl
, ( 
WIN
 *
wö
 , 
dú
 ));

164 
_PROTO
(
wloˇã
, ( 
WIN
 *
wö
 , 
x
 , 
y
 ));

165 
_PROTO
(
wputc
, ( 
WIN
 *
wö
 , 
c
 ));

166 
_PROTO
(
wdøwñm
, ( 
WIN
 *
wö
, 
y
, 
ELM
 *
e
 ));

167 
_PROTO
(
wputs
, ( 
WIN
 *
wö
 , *
s
 ));

169 
w¥ötf
();

170 
_PROTO
(
wbñl
, ( ));

171 
_PROTO
(
wcurs‹
, ( 
WIN
 *
wö
 , 
ty≥
 ));

172 
_PROTO
(
wtôÀ
, ( 
WIN
 *
w
 , 
pos
 , *
s
 ));

173 
_PROTO
(
wcurb¨
, ( 
WIN
 *
w
 , 
y
 , 
©å
 ));

174 
_PROTO
(
w£À˘
, ( 
x
 , 
y
 , **
choi˚s
 , (**
fu∆i°
)() ,

175 *
tôÀ
 , 
©å
 , 
fg
 , 
bg
 ));

176 
_PROTO
(
w˛ªl
, ( 
WIN
 *
w
 ));

177 
_PROTO
(
w˛ªﬁ
, ( 
WIN
 *
w
 ));

178 
_PROTO
(
w˛rbﬁ
, ( 
WIN
 *
w
 ));

179 
_PROTO
(
w˛ªos
, ( 
WIN
 *
w
 ));

180 
_PROTO
(
w˛rbos
, ( 
WIN
 *
w
 ));

181 
_PROTO
(
wö˛r
, ( 
WIN
 *
w
 ));

182 
_PROTO
(
wö¶öe
, ( 
WIN
 *
w
 ));

183 
_PROTO
(
wdñlöe
, ( 
WIN
 *
w
 ));

184 
_PROTO
(
wösch¨
, ( 
WIN
 *
w
 ));

185 
_PROTO
(
wösch¨2
, ( 
WIN
 *
w
 , 
c
 , 
move
 ));

186 
_PROTO
(
wdñch¨
, ( 
WIN
 *
w
 ));

187 
_PROTO
(
wgës
, ( 
WIN
 *
wö
 , *
s
 , 
löemax
, 
tŸmax
 ));

188 
_PROTO
(
wö_íd
, ( ));

189 #ifde‡
BBS


190 
_PROTO
(
wö_öô
, ( *
ãrm
, 
löes
 ));

192 
_PROTO
(
wö_öô
, ( 
fg
 , 
bg
 , 
©å
 ));

195 #ifde‡
HISTORY


196 
_PROTO
(
wdøwñm_övî£
, ( 
WIN
 *
w
, 
y
, 
ELM
 *
e
 ));

197 
_PROTO
(
wdøwñm_v¨
, (
WIN
 *
w
, 
y
, 
ELM
 *
e
, *
buf
 ));

198 
_PROTO
(*
SåSå
, (*
°r1
, *
°r2
, 
ˇ£_m©ãrs
 ));

204 
	#w£åegi⁄
(
w
, 
z1
, 
z2
Ë(((w)->
sy1
=(w)->
y1
+(z1)),((w)->
sy2
=(w)->y1+(z2)))

	)

205 
	#wª£åegi⁄
(
w
Ë–(w)->
sy1
 = (w)->
y1
, (w)->
sy2
 = (w)->
y2
 )

	)

206 
	#wgë©å
(
w
Ë–(w)->
©å
 )

	)

207 
	#w£èâr
(
w
, 
a
Ë–(w)->
©å
 = (aË)

	)

208 
	#w£tfgcﬁ
(
w
, 
fg
Ë–(w)->
cﬁ‹
 = ((w)->cﬁ‹ & 15Ë+ ((fgË<< 4))

	)

209 
	#w£tbgcﬁ
(
w
, 
bg
Ë–(w)->
cﬁ‹
 = ((w)->cﬁ‹ & 240Ë+ (bgË)

	)

210 
	#w£èm
(
w
Ë–(w)->
wøp
 = 1 )

	)

211 
	#wª£èm
(
w
Ë–(w)->
wøp
 = 0 )

	)

217 
	#K_BS
 8

	)

218 
	#K_ESC
 27

	)

219 
	#K_STOP
 256

	)

220 #i‡
_RH_FIX


221 
	#K_F1
 173

	)

222 
	#K_F2
 174

	)

223 
	#K_F3
 175

	)

224 
	#K_F4
 176

	)

225 
	#K_F5
 177

	)

226 
	#K_F6
 178

	)

227 
	#K_F7
 179

	)

228 
	#K_F8
 180

	)

229 
	#K_F9
 181

	)

230 
	#K_F10
 182

	)

231 
	#K_F11
 183

	)

232 
	#K_F12
 278

	)

234 
	#K_F1
 257

	)

235 
	#K_F2
 258

	)

236 
	#K_F3
 259

	)

237 
	#K_F4
 260

	)

238 
	#K_F5
 261

	)

239 
	#K_F6
 262

	)

240 
	#K_F7
 263

	)

241 
	#K_F8
 264

	)

242 
	#K_F9
 265

	)

243 
	#K_F10
 266

	)

244 
	#K_F11
 277

	)

245 
	#K_F12
 278

	)

248 
	#K_HOME
 267

	)

249 
	#K_PGUP
 268

	)

250 
	#K_UP
 269

	)

251 
	#K_LT
 270

	)

252 
	#K_RT
 271

	)

253 
	#K_DN
 272

	)

254 
	#K_END
 273

	)

255 
	#K_PGDN
 274

	)

256 
	#K_INS
 275

	)

257 
	#K_DEL
 276

	)

259 
	#NUM_KEYS
 23

	)

260 
	#KEY_OFFS
 256

	)

263 
	#K_META
 512

	)

265 #i‚de‡
EOF


266 
	#EOF
 ((Ë-1)

	)

268 
	#K_ERA
 '\b'

	)

269 
	#K_KILL
 ((Ë-2)

	)

272 
	skey
 {

273 *
	mˇp
;

274 
	mÀn
;

	@wkeys.c

15 #ifde‡
HAVE_CONFIG_H


16 
	~<c⁄fig.h
>

19 
	~"rcsid.h
"

20 
RCSID
("$Id: wkeys.c,v 1.4 2000/02/09 08:34:57 misiek Exp $")

22 
	~"p‹t.h
"

23 
	~"möicom.h
"

24 
	~"öé.h
"

26 #i‡
KEY_KLUDGE
 && 
deföed
(
löux
)

27 
	~<sys/kd.h
>

28 
	~<sys/io˘l.h
>

34 
	#VT_KLUDGE
 0

	)

36 
key
 
	g_keys
[
NUM_KEYS
];

37 
	gkeys_ö_buf
;

38 
£tcbªak
();

45 *
_çå
;

47 
	gîa£ch¨
;

48 
	ggŸÆrm
;

49 
î∫o
;

50 
	g≥ndögkeys
 = 0;

51 
	gio_≥ndög
 = 0;

53 *
	gfunc_key
[] = {

56 #ifde‡
_DGUX_SOURCE


61 #i‡
KEY_KLUDGE


69 
	gisc⁄sﬁe
;

71 
	$ã°c⁄sﬁe
()

74 
öfo
;

76 –
	`io˘l
(0, 
KDGETLED
, &
öfo
) == 0);

77 
	}
}

83 
	$¸ód
(
c
)

84 *
c
;

86 
buf
[32];

87 
idx
 = 0;

88 
œ°ªad
 = 0;

90 i‡(
idx
 > 0 && idx < 
œ°ªad
) {

91 *
c
 = 
buf
[
idx
++];

92 
keys_ö_buf
--;

93 i‡(
keys_ö_buf
 =0 && 
≥ndögkeys
 =0Ë
io_≥ndög
 = 0;

94 (
œ°ªad
);

96 
idx
 = 0;

98 
œ°ªad
 = 
	`ªad
(0, 
buf
, 32);

99 
keys_ö_buf
 = 
œ°ªad
 - 1;

100 } 
œ°ªad
 < 0 && 
î∫o
 =
EINTR
);

102 *
c
 = 
buf
[0];

103 i‡(
œ°ªad
 > 1) {

104 
idx
 = 1;

105 
io_≥ndög
++;

107 (
œ°ªad
);

108 
	}
}

111 
	$_öôkeys
()

113 
i
;

114 *
cbuf
, *
tbuf
;

115 *
ãrm
;

117 i‡(
_çå
 =
CNULL
) {

118 i‡((
tbuf
 = (*)
	`mÆloc
(512)Ë=
CNULL
 ||

119 (
cbuf
 = (*)
	`mÆloc
(2048)Ë=
CNULL
) {

120 
	`wrôe
(2, 
	`_
("Out of memory.\n"), 15);

121 
	`exô
(1);

123 
ãrm
 = 
	`gëív
("TERM");

124 
	`tgëít
(
cbuf
, 
ãrm
)) {

126 
	`wrôe
(2, 
	`_
("NoÅermcapÉntry.\n"), 18);

127 
	`exô
(1);

129 
	`wrôe
(2, 
	`_
("No /etc/termcapÖresent!\n"), 25);

130 
	`exô
(1);

134 
_çå
 = 
tbuf
;

137 
i
 = 0; 
func_key
[i]; i++) {

138 i‡((
_keys
[
i
].
ˇp
 = 
	`tgë°r
(
func_key
[i], &
_çå
)Ë=
CNULL
)

139 
_keys
[
i
].
ˇp
 = "";

140 
_keys
[
i
].
Àn
 = 
	`°æí
(_keys[i].
ˇp
);

142 #i‡
KEY_KLUDGE


143 
isc⁄sﬁe
 = 
	`ã°c⁄sﬁe
();

145 
	}
}

150 #i‚de‡
HAVE_SELECT


151 
	$dummy
()

153 
gŸÆrm
 = 1;

154 
	}
}

161 
	$wxgëch
()

163 
f
, 
g
;

164 
m©ch
 = 1;

165 
Àn
;

166 
c
;

167 
mem
[8];

168 
À·mem
 = 0;

169 
öô
 = 0;

170 
nfound
 = 0;

171 
°¨t_m©ch
;

172 #i‡
VT_KLUDGE


173 
ãmp
[8];

175 #ifde‡
HAVE_SELECT


176 
timevÆ
 
timeout
;

177 
fd_£t
 
ªadfds
;

178 
fd_£t
 *
nofds
 = (fd_set *)0;

181 i‡(
öô
 == 0) {

182 
	`_öôkeys
();

183 
öô
++;

184 
îa£ch¨
 = 
	`£tcbªak
(3);

188 i‡(
À·mem
) {

189 
À·mem
--;

190 i‡(
À·mem
 =0Ë
≥ndögkeys
 = 0;

191 i‡(
≥ndögkeys
 =0 && 
keys_ö_buf
 =0Ë
io_≥ndög
 = 0;

192 (
mem
[
À·mem
]);

194 
gŸÆrm
 = 0;

195 
≥ndögkeys
 = 0;

197 
Àn
 = 1;Üí < 8 && 
m©ch
;Üen++) {

198 #ifde‡
HAVE_SELECT


199 #i‡
KEY_KLUDGE


200 i‡(
Àn
 > 1 && 
keys_ö_buf
 == 0) {

202 i‡(
Àn
 > 1) {

204 
timeout
.
tv_£c
 = 0;

205 
timeout
.
tv_u£c
 = 400000;

206 #ifde‡
FD_SET


207 
	`FD_ZERO
(&
ªadfds
);

208 
	`FD_SET
(0, &
ªadfds
);

210 
ªadfs
 = 1;

212 #ifde‡
_HPUX_SOURCE


214 
nfound
 = 
	`£À˘
(1, (*)&
ªadfds
,

215 (*)
nofds
, (*Íofds, &
timeout
);

217 
nfound
 = 
	`£À˘
(1, &
ªadfds
, 
nofds
,Çofds, &
timeout
);

219 i‡(
nfound
 == 0) {

224 i‡(
Àn
 > 1) {

225 
	`sig«l
(
SIGALRM
, 
dummy
);

226 
	`Æ¨m
(1);

230 #i‡
KEY_KLUDGE


231 (
nfound
 = 
	`¸ód
(&
c
)Ë< 0 && (
î∫o
 =
EINTR
 && !
gŸÆrm
))

234 (
nfound
 = 
	`ªad
(0, &
c
, 1)Ë< 0 && (
î∫o
 =
EINTR
 && !
gŸÆrm
))

238 #i‚de‡
HAVE_SELECT


239 i‡(
Àn
 > 1Ë
	`Æ¨m
(0);

241 i‡(
nfound
 < 1) ;

243 i‡(
Àn
 == 1) {

245 i‡(
c
 == ()'\n')

246  
c
;

247 i‡(
c
 =()
îa£ch¨
)

248  
K_ERA
;

250 #i‡
KEY_KLUDGE


252 i‡(
isc⁄sﬁe
 && 
nfound
 =1 && 
Àn
 =1Ë(
c
);

255 i‡(
isc⁄sﬁe
 && 
nfound
 =2 && 
Àn
 == 1 &&

256 
c
 =27 && 
esˇ≥
 == 27) {

257 
	`¸ód
(&
c
);

258 (
c
 + 
K_META
);

261 
mem
[
Àn
 - 1] = 
c
;

262 
m©ch
 = 0;

263 #i‡
VT_KLUDGE


265 
	`°∫˝y
(
ãmp
, 
mem
, 
Àn
);

266 i‡(
Àn
 > 1 && 
ãmp
[0] == 27) {

267 i‡(
ãmp
[1] == '[')

268 
ãmp
[1] = 'O';

269 i‡(
ãmp
[1] == 'O')

270 
ãmp
[1] = '[';

274 
°¨t_m©ch
 = 0;

275 
f
 = 0; f < 
NUM_KEYS
; f++) {

276 #i‡
VT_KLUDGE


277 i‡(
_keys
[
f
].
Àn
 >=Üen &&

278 (
	`°∫cmp
(
_keys
[
f
].
ˇp
, (*)
mem
, 
Àn
) == 0 ||

279 
	`°∫cmp
(
_keys
[
f
].
ˇp
, (*)
ãmp
, 
Àn
) == 0)) {

281 i‡(
_keys
[
f
].
Àn
 >À¿&& 
	`°∫cmp
(_keys[f].
ˇp
, (*)
mem
,Üen) == 0){

283 
m©ch
++;

284 i‡(
_keys
[
f
].
Àn
 ==Üen) {

285 (
f
 + 
KEY_OFFS
);

289 i‡(
_keys
[
f
].
Àn
 > 1 &&Üen == 2 &&

290 
	`°∫cmp
(
_keys
[
f
].
ˇp
, (*)
mem
, 2Ë=0Ë
°¨t_m©ch
++;

292 #i‡
KEY_KLUDGE


293 i‡(!
isc⁄sﬁe
)

295 #i‚de‡
_MINIX


297 i‡(
esˇ≥
 =27 && !
°¨t_m©ch
 && 
Àn
 =2 && 
mem
[0] == 27)

298 (
c
 + 
K_META
);

302 
Àn
--;

303 i‡(
Àn
 =1Ë(
mem
[0]);

305 
≥ndögkeys
++;

306 
io_≥ndög
++;

308 #i‚de‡
HAVE_SELECT


310 i‡(
Àn
 =2 && 
mem
[0] == mem[1]) (mem[0]);

314 
f
 = 0; f < 
Àn
 / 2; f++) {

315 
g
 = 
mem
[
f
];

316 
mem
[
f
] = mem[
Àn
 - f - 1];

317 
mem
[
Àn
 - 
f
 - 1] = 
g
;

319 
À·mem
 = 
Àn
 - 1;

320 (
mem
[
À·mem
]);

321 
	}
}

	@xminicom

1 #!/
bö
/
sh


3 #
#xmöicom 
Run
 
möicom
 
ö
 
™
 
xãrm
. 
This
 
s¸ùt
 
looks
 

4 #cﬁ‹_xãrm, 
rxvt
 
™d
 
xãrm
 (
ö
 
th©
 
‹dî
)ánd

5 #°¨t†
ô
 
up
 
wôh
 
möicom
 
öside
 it.

6 #
#vîsi⁄ 
$Id
: 
xmöicom
,
v
 1.2 1999/12/20 09:09:47 
misõk
 
Exp
 
$


8 
	$födcmd
()

10 
IFS
=:

11 
i
 
ö
 
$PATH


13 [ -
x
 
$i
\/
$1
 ]

14 
thí


15 
ªsu…
=
$i
\/
$1


16 
IFS
=

18 
fi


19 
d⁄e


20 
ªsu…
=

21 
IFS
=

23 
	}
}

25 
födcmd
 
cﬁ‹_xãrm


26 
thí


27 
exec
 
$ªsu…
 -
bg
 
bœck
 -
fg
 
gªy
 -
n
 
möicom
 -
geomëry
 80x25 -
e
 möicom -
m
 -
c
 
⁄
 
$
*

28 
exô
 1

29 
fi


31 
födcmd
 
rxvt


32 
thí


33 
exec
 
$ªsu…
 -
bg
 
bœck
 -
fg
 
gªy
 -
n
 
möicom
 -
T
 möicom -
¶
 0 -
geomëry
 80x25 -
e
 möicom -
c
 
⁄
 -
m
 
$
*

34 
exô
 1

35 
fi


37 
födcmd
 
kãrm


38 
thí


39 
exec
 
$ªsu…
 -
n
 
möicom
 -
geomëry
 80x25 -
e
 möicom -
m
 
$
*

40 
exô
 1

41 
fi


43 
födcmd
 
xãrm


44 
thí


45 [ -
f
 /
ëc
/
debün_vîsi⁄
 ]

46 
thí


47 
exec
 
$ªsu…
 -
bg
 
bœck
 -
fg
 
gªy
 -
n
 
möicom
 -
geomëry
 80x25 -
e
 möicom -
m
 -
c
 
⁄
 
$
*

49 
exec
 
$ªsu…
 -
n
 
möicom
 -
geomëry
 80x25 -
e
 möicom -
m
 
$
*

50 
fi


51 
exô
 1

52 
fi


54 
echo
 "xminicom:Ñxvt, color_xterm or xterm NOT found!" 1>&2

55 
exô
 1

	@/usr/include/ctype.h

24 #i‚def 
_CTYPE_H


25 
	#_CTYPE_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 
	g__BEGIN_DECLS


32 #i‚de‡
_ISbô


41 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

45 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

50 
	m_ISuµî
 = 
_ISbô
 (0),

51 
	m_ISlowî
 = 
_ISbô
 (1),

52 
	m_ISÆpha
 = 
_ISbô
 (2),

53 
	m_ISdigô
 = 
_ISbô
 (3),

54 
	m_ISxdigô
 = 
_ISbô
 (4),

55 
	m_IS•a˚
 = 
_ISbô
 (5),

56 
	m_IS¥öt
 = 
_ISbô
 (6),

57 
	m_ISgøph
 = 
_ISbô
 (7),

58 
	m_ISbœnk
 = 
_ISbô
 (8),

59 
	m_IS˙ål
 = 
_ISbô
 (9),

60 
	m_ISpun˘
 = 
_ISbô
 (10),

61 
	m_ISÆnum
 = 
_ISbô
 (11)

81 
__c⁄°
 **
	$__˘y≥_b_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

83 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

85 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

86 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

89 #i‚de‡
__˝lu•lus


90 
	#__is˘y≥
(
c
, 
ty≥
) \

91 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

92 #ñi‡
deföed
 
__USE_EXTERN_INLINES


93 
	#__is˘y≥_f
(
ty≥
) \

94 
__exã∫_ölöe
 \

95 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

97  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

98 
	}

	)
}

101 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

102 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

104 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

106 
__BEGIN_NAMESPACE_STD


112 
__ex˘y≥
 (
iß um
);

113 
__ex˘y≥
 (
ißÕha
);

114 
__ex˘y≥
 (
is˙ål
);

115 
__ex˘y≥
 (
isdigô
);

116 
__ex˘y≥
 (
i¶owî
);

117 
__ex˘y≥
 (
isgøph
);

118 
__ex˘y≥
 (
i•röt
);

119 
__ex˘y≥
 (
i•un˘
);

120 
__ex˘y≥
 (
is•a˚
);

121 
__ex˘y≥
 (
isuµî
);

122 
__ex˘y≥
 (
isxdigô
);

126 
	$tﬁowî
 (
__c
Ë
__THROW
;

129 
	$touµî
 (
__c
Ë
__THROW
;

131 
__END_NAMESPACE_STD


135 #ifdef 
__USE_ISOC99


136 
__BEGIN_NAMESPACE_C99


138 
	`__ex˘y≥
 (
isbœnk
);

140 
__END_NAMESPACE_C99


143 #ifde‡
__USE_GNU


145 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

148 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


152 
	$ißscii
 (
__c
Ë
__THROW
;

156 
	$tﬂscii
 (
__c
Ë
__THROW
;

160 
	`__ex˘y≥
 (
_touµî
);

161 
	`__ex˘y≥
 (
_tﬁowî
);

165 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

166 (
__exãnsi⁄__
 \

167 ({ 
__ªs
; \

168 i‡( (
c
) > 1) \

170 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

172 
__c
 = (
c
); \

173 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

176 
__ªs
 = 
f
 
¨gs
; \

179 
__ªs
 = (
a
)[(Ë(
c
)]; \

180 
__ªs
; 
	}
}))

	)

182 #i‡!
deföed
 
__NO_CTYPE


183 #ifde‡
__is˘y≥_f


184 
	$__is˘y≥_f
 (
Ænum
)

185 
	$__is˘y≥_f
 (
Æpha
)

186 
	$__is˘y≥_f
 (
˙ål
)

187 
	$__is˘y≥_f
 (
digô
)

188 
	$__is˘y≥_f
 (
lowî
)

189 
	$__is˘y≥_f
 (
gøph
)

190 
	$__is˘y≥_f
 (
¥öt
)

191 
	$__is˘y≥_f
 (
pun˘
)

192 
	$__is˘y≥_f
 (
•a˚
)

193 
	$__is˘y≥_f
 (
uµî
)

194 
	$__is˘y≥_f
 (
xdigô
)

195 #ifde‡
__USE_ISOC99


196 
	$__is˘y≥_f
 (
bœnk
)

198 #ñi‡
deföed
 
__is˘y≥


199 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

200 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

201 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

202 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

203 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

204 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

205 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

206 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

207 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

208 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

209 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

210 #ifde‡
__USE_ISOC99


211 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

215 #ifde‡
__USE_EXTERN_INLINES


216 
__exã∫_ölöe
 

217 
	`__NTH
 (
	$tﬁowî
 (
__c
))

219  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

220 
	}
}

222 
__exã∫_ölöe
 

223 
__NTH
 (
	$touµî
 (
__c
))

225  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

226 
	}
}

229 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


230 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

231 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

234 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


235 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

236 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

238 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

239 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

245 #ifde‡
__USE_XOPEN2K8


259 
	~<xloˇÀ.h
>

263 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

264 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

266 
	#__ex˘y≥_l
(
«me
) \

267 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

273 
__ex˘y≥_l
 (
iß um_l
);

274 
__ex˘y≥_l
 (
ißÕha_l
);

275 
__ex˘y≥_l
 (
is˙ål_l
);

276 
__ex˘y≥_l
 (
isdigô_l
);

277 
__ex˘y≥_l
 (
i¶owî_l
);

278 
__ex˘y≥_l
 (
isgøph_l
);

279 
__ex˘y≥_l
 (
i•röt_l
);

280 
__ex˘y≥_l
 (
i•un˘_l
);

281 
__ex˘y≥_l
 (
is•a˚_l
);

282 
__ex˘y≥_l
 (
isuµî_l
);

283 
__ex˘y≥_l
 (
isxdigô_l
);

285 
__ex˘y≥_l
 (
isbœnk_l
);

289 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

290 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

293 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

294 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

296 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


297 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

298 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

299 
	#__touµî_l
(
c
, 
loˇÀ
) \

300 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

301 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

302 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

306 #i‚de‡
__NO_CTYPE


307 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

308 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

309 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

310 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

311 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

312 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

313 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

314 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

315 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

316 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

317 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

319 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

321 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


322 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

323 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

326 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

327 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

328 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

329 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

330 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

331 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

332 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

333 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

334 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

335 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

336 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

338 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

340 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


341 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

342 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

349 
__END_DECLS


	@/usr/include/dirent.h

24 #i‚def 
_DIRENT_H


25 
	#_DIRENT_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

33 #ifde‡
__USE_XOPEN


34 #i‚de‡
__öo_t_deföed


35 #i‚de‡
__USE_FILE_OFFSET64


36 
__öo_t
 
	töo_t
;

38 
__öo64_t
 
	töo_t
;

40 
	#__öo_t_deföed


	)

42 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


43 
__öo64_t
 
	töo64_t
;

44 
	#__öo64_t_deföed


	)

63 
	~<bôs/dúít.h
>

65 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
Ë&& !deföed 
d_fûío


66 
	#d_öo
 
d_fûío


	)

83 #ifde‡
_DIRENT_HAVE_D_NAMLEN


84 
	#_D_EXACT_NAMLEN
(
d
Ë((d)->
d_«mÀn
)

	)

85 
	#_D_ALLOC_NAMLEN
(
d
Ë(
	`_D_EXACT_NAMLEN
 (dË+ 1)

	)

87 
	#_D_EXACT_NAMLEN
(
d
Ë(
	`°æí
 ((d)->
d_«me
))

	)

88 #ifde‡
_DIRENT_HAVE_D_RECLEN


89 
	#_D_ALLOC_NAMLEN
(
d
Ë(((*Ë(dË+ (d)->
d_ª˛í
Ë- &(d)->
d_«me
[0])

	)

91 
	#_D_ALLOC_NAMLEN
(
d
Ë( (d)->
d_«me
 > 1 ?  (d)->d_name : \

92 
	`_D_EXACT_NAMLEN
 (
d
Ë+ 1)

	)

97 #ifde‡
__USE_BSD


101 
	mDT_UNKNOWN
 = 0,

102 
	#DT_UNKNOWN
 
DT_UNKNOWN


	)

103 
	mDT_FIFO
 = 1,

104 
	#DT_FIFO
 
DT_FIFO


	)

105 
	mDT_CHR
 = 2,

106 
	#DT_CHR
 
DT_CHR


	)

107 
	mDT_DIR
 = 4,

108 
	#DT_DIR
 
DT_DIR


	)

109 
	mDT_BLK
 = 6,

110 
	#DT_BLK
 
DT_BLK


	)

111 
	mDT_REG
 = 8,

112 
	#DT_REG
 
DT_REG


	)

113 
	mDT_LNK
 = 10,

114 
	#DT_LNK
 
DT_LNK


	)

115 
	mDT_SOCK
 = 12,

116 
	#DT_SOCK
 
DT_SOCK


	)

117 
	mDT_WHT
 = 14

118 
	#DT_WHT
 
DT_WHT


	)

122 
	#IFTODT
(
mode
Ë(((modeË& 0170000Ë>> 12)

	)

123 
	#DTTOIF
(
dúty≥
Ë((dúty≥Ë<< 12)

	)

129 
__dú°ªam
 
	tDIR
;

136 
DIR
 *
	$›ídú
 (
__c⁄°
 *
__«me
Ë
	`__n⁄nuŒ
 ((1));

138 #ifde‡
__USE_XOPEN2K8


143 
DIR
 *
	`fd›ídú
 (
__fd
);

151 
	$˛o£dú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

163 #i‚de‡
__USE_FILE_OFFSET64


164 
dúít
 *
	$ªaddú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

166 #ifde‡
__REDIRECT


167 
dúít
 *
	`__REDIRECT
 (
ªaddú
, (
DIR
 *
__dúp
), 
ªaddú64
)

168 
	`__n⁄nuŒ
 ((1));

170 
	#ªaddú
 
ªaddú64


	)

174 #ifde‡
__USE_LARGEFILE64


175 
dúít64
 *
	$ªaddú64
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

178 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


184 #i‚de‡
__USE_FILE_OFFSET64


185 
	$ªaddú_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

186 
dúít
 *
__ª°ri˘
 
__íåy
,

187 
dúít
 **
__ª°ri˘
 
__ªsu…
)

188 
	`__n⁄nuŒ
 ((1, 2, 3));

190 #ifde‡
__REDIRECT


191 
	`__REDIRECT
 (
ªaddú_r
,

192 (
DIR
 *
__ª°ri˘
 
__dúp
,

193 
dúít
 *
__ª°ri˘
 
__íåy
,

194 
dúít
 **
__ª°ri˘
 
__ªsu…
),

195 
ªaddú64_r
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

197 
	#ªaddú_r
 
ªaddú64_r


	)

201 #ifde‡
__USE_LARGEFILE64


202 
	$ªaddú64_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

203 
dúít64
 *
__ª°ri˘
 
__íåy
,

204 
dúít64
 **
__ª°ri˘
 
__ªsu…
)

205 
	`__n⁄nuŒ
 ((1, 2, 3));

210 
	$ªwöddú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

212 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


213 
	~<bôs/ty≥s.h
>

216 
	$£ekdú
 (
DIR
 *
__dúp
, 
__pos
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

219 
	$ãŒdú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

222 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


225 
	$dúfd
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

227 #i‡
deföed
 
__OPTIMIZE__
 && deföed 
_DIR_dúfd


228 
	#dúfd
(
dúp
Ë
	`_DIR_dúfd
 (dúp)

	)

231 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC


232 #i‚de‡
MAXNAMLEN


234 
	~<bôs/posix1_lim.h
>

237 #ifde‡
NAME_MAX


238 
	#MAXNAMLEN
 
NAME_MAX


	)

240 
	#MAXNAMLEN
 255

	)

245 
	#__√ed_size_t


	)

246 
	~<°ddef.h
>

255 #i‚de‡
__USE_FILE_OFFSET64


256 
	`sˇndú
 (
__c⁄°
 *
__ª°ri˘
 
__dú
,

257 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

258 (*
__£À˘‹
Ë(
__c⁄°
 
dúít
 *),

259 (*
__cmp
Ë(
__c⁄°
 
dúít
 **,

260 
__c⁄°
 
dúít
 **))

261 
	`__n⁄nuŒ
 ((1, 2));

263 #ifde‡
__REDIRECT


264 
	`__REDIRECT
 (
sˇndú
,

265 (
__c⁄°
 *
__ª°ri˘
 
__dú
,

266 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

267 (*
__£À˘‹
Ë(
__c⁄°
 
dúít
 *),

268 (*
__cmp
Ë(
__c⁄°
 
dúít
 **,

269 
__c⁄°
 
dúít
 **)),

270 
sˇndú64
Ë
	`__n⁄nuŒ
 ((1, 2));

272 
	#sˇndú
 
sˇndú64


	)

276 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


279 
	`sˇndú64
 (
__c⁄°
 *
__ª°ri˘
 
__dú
,

280 
dúít64
 ***
__ª°ri˘
 
__«mñi°
,

281 (*
__£À˘‹
Ë(
__c⁄°
 
dúít64
 *),

282 (*
__cmp
Ë(
__c⁄°
 
dúít64
 **,

283 
__c⁄°
 
dúít64
 **))

284 
	`__n⁄nuŒ
 ((1, 2));

287 #ifde‡
__USE_GNU


293 #i‚de‡
__USE_FILE_OFFSET64


294 
	`sˇndú©
 (
__dfd
, 
__c⁄°
 *
__ª°ri˘
 
__dú
,

295 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

296 (*
__£À˘‹
Ë(
__c⁄°
 
dúít
 *),

297 (*
__cmp
Ë(
__c⁄°
 
dúít
 **,

298 
__c⁄°
 
dúít
 **))

299 
	`__n⁄nuŒ
 ((2, 3));

301 #ifde‡
__REDIRECT


302 
	`__REDIRECT
 (
sˇndú©
,

303 (
__dfd
, 
__c⁄°
 *
__ª°ri˘
 
__dú
,

304 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

305 (*
__£À˘‹
Ë(
__c⁄°
 
dúít
 *),

306 (*
__cmp
Ë(
__c⁄°
 
dúít
 **,

307 
__c⁄°
 
dúít
 **)),

308 
sˇndú©64
Ë
	`__n⁄nuŒ
 ((2, 3));

310 
	#sˇndú©
 
sˇndú©64


	)

316 
	`sˇndú©64
 (
__dfd
, 
__c⁄°
 *
__ª°ri˘
 
__dú
,

317 
dúít64
 ***
__ª°ri˘
 
__«mñi°
,

318 (*
__£À˘‹
Ë(
__c⁄°
 
dúít64
 *),

319 (*
__cmp
Ë(
__c⁄°
 
dúít64
 **,

320 
__c⁄°
 
dúít64
 **))

321 
	`__n⁄nuŒ
 ((2, 3));

325 #i‚de‡
__USE_FILE_OFFSET64


326 
	$Æphas‹t
 (
__c⁄°
 
dúít
 **
__e1
,

327 
__c⁄°
 
dúít
 **
__e2
)

328 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

330 #ifde‡
__REDIRECT


331 
	`__REDIRECT_NTH
 (
Æphas‹t
,

332 (
__c⁄°
 
dúít
 **
__e1
,

333 
__c⁄°
 
dúít
 **
__e2
),

334 
Æphas‹t64
Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

336 
	#Æphas‹t
 
Æphas‹t64


	)

340 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


341 
	$Æphas‹t64
 (
__c⁄°
 
dúít64
 **
__e1
,

342 
__c⁄°
 
dúít64
 **
__e2
)

343 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

348 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC


353 #i‚de‡
__USE_FILE_OFFSET64


354 
__ssize_t
 
	$gëdúíåõs
 (
__fd
, *
__ª°ri˘
 
__buf
,

355 
size_t
 
__nbyãs
,

356 
__off_t
 *
__ª°ri˘
 
__ba£p
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

359 #ifde‡
__REDIRECT


360 
__ssize_t
 
	`__REDIRECT_NTH
 (
gëdúíåõs
,

361 (
__fd
, *
__ª°ri˘
 
__buf
,

362 
size_t
 
__nbyãs
,

363 
__off64_t
 *
__ª°ri˘
 
__ba£p
),

364 
gëdúíåõs64
Ë
	`__n⁄nuŒ
 ((2, 4));

366 
	#gëdúíåõs
 
gëdúíåõs64


	)

370 #ifde‡
__USE_LARGEFILE64


371 
__ssize_t
 
	$gëdúíåõs64
 (
__fd
, *
__ª°ri˘
 
__buf
,

372 
size_t
 
__nbyãs
,

373 
__off64_t
 *
__ª°ri˘
 
__ba£p
)

374 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

378 #ifde‡
__USE_GNU


380 #i‚de‡
__USE_FILE_OFFSET64


381 
	$vîsi⁄s‹t
 (
__c⁄°
 
dúít
 **
__e1
,

382 
__c⁄°
 
dúít
 **
__e2
)

383 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

385 #ifde‡
__REDIRECT


386 
	`__REDIRECT_NTH
 (
vîsi⁄s‹t
,

387 (
__c⁄°
 
dúít
 **
__e1
,

388 
__c⁄°
 
dúít
 **
__e2
),

389 
vîsi⁄s‹t64
)

390 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

392 
	#vîsi⁄s‹t
 
vîsi⁄s‹t64


	)

396 #ifde‡
__USE_LARGEFILE64


397 
	$vîsi⁄s‹t64
 (
__c⁄°
 
dúít64
 **
__e1
,

398 
__c⁄°
 
dúít64
 **
__e2
)

399 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

403 
__END_DECLS


	@/usr/include/errno.h

23 #i‚def 
_ERRNO_H


27 #i‚def 
__√ed_Em©h


28 
	#_ERRNO_H
 1

	)

29 
	~<„©uªs.h
>

32 
	g__BEGIN_DECLS


36 
	~<bôs/î∫o.h
>

37 #unde‡
__√ed_Em©h


39 #ifdef 
_ERRNO_H


46 #i‚def 
î∫o


47 
î∫o
;

50 #ifde‡
__USE_GNU


55 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

59 
	g__END_DECLS


67 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


68 #i‚de‡
__îr‹_t_deföed


69 
	tîr‹_t
;

70 
	#__îr‹_t_deföed
 1

	)

72 #unde‡
__√ed_îr‹_t


	@/usr/include/fcntl.h

24 #i‚def 
_FCNTL_H


25 
	#_FCNTL_H
 1

	)

27 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 
	~<bôs/f˙é.h
>

37 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


38 
	~<bôs/ty≥s.h
>

39 
	#__√ed_time•ec


	)

40 
	~<time.h
>

41 
	~<bôs/°©.h
>

43 
	#S_IFMT
 
__S_IFMT


	)

44 
	#S_IFDIR
 
__S_IFDIR


	)

45 
	#S_IFCHR
 
__S_IFCHR


	)

46 
	#S_IFBLK
 
__S_IFBLK


	)

47 
	#S_IFREG
 
__S_IFREG


	)

48 #ifde‡
__S_IFIFO


49 
	#S_IFIFO
 
__S_IFIFO


	)

51 #ifde‡
__S_IFLNK


52 
	#S_IFLNK
 
__S_IFLNK


	)

54 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
Ë&& deföed 
__S_IFSOCK


55 
	#S_IFSOCK
 
__S_IFSOCK


	)

60 
	#S_ISUID
 
__S_ISUID


	)

61 
	#S_ISGID
 
__S_ISGID


	)

63 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


65 
	#S_ISVTX
 
__S_ISVTX


	)

68 
	#S_IRUSR
 
__S_IREAD


	)

69 
	#S_IWUSR
 
__S_IWRITE


	)

70 
	#S_IXUSR
 
__S_IEXEC


	)

72 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

74 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

75 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

76 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

78 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

80 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

81 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

82 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

84 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

87 #ifdef 
__USE_MISC


88 #i‚de‡
R_OK


91 
	#R_OK
 4

	)

92 
	#W_OK
 2

	)

93 
	#X_OK
 1

	)

94 
	#F_OK
 0

	)

99 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


100 
	#SEEK_SET
 0

	)

101 
	#SEEK_CUR
 1

	)

102 
	#SEEK_END
 2

	)

105 #ifde‡
__USE_ATFILE


106 
	#AT_FDCWD
 -100

	)

109 
	#AT_SYMLINK_NOFOLLOW
 0x100

	)

110 
	#AT_REMOVEDIR
 0x200

	)

112 
	#AT_SYMLINK_FOLLOW
 0x400

	)

113 
	#AT_NO_AUTOMOUNT
 0x800

	)

115 
	#AT_EMPTY_PATH
 0x1000

	)

116 
	#AT_EACCESS
 0x200

	)

125 
f˙é
 (
__fd
, 
__cmd
, ...);

133 #i‚de‡
__USE_FILE_OFFSET64


134 
	$›í
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

136 #ifde‡
__REDIRECT


137 
	`__REDIRECT
 (
›í
, (
__c⁄°
 *
__fûe
, 
__oÊag
, ...), 
›í64
)

138 
	`__n⁄nuŒ
 ((1));

140 
	#›í
 
›í64


	)

143 #ifde‡
__USE_LARGEFILE64


144 
	$›í64
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

147 #ifde‡
__USE_ATFILE


157 #i‚de‡
__USE_FILE_OFFSET64


158 
	$›í©
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
, ...)

159 
	`__n⁄nuŒ
 ((2));

161 #ifde‡
__REDIRECT


162 
	`__REDIRECT
 (
›í©
, (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
,

163 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

165 
	#›í©
 
›í©64


	)

168 #ifde‡
__USE_LARGEFILE64


169 
	$›í©64
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
, ...)

170 
	`__n⁄nuŒ
 ((2));

179 #i‚de‡
__USE_FILE_OFFSET64


180 
	$¸ót
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

182 #ifde‡
__REDIRECT


183 
	`__REDIRECT
 (
¸ót
, (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
),

184 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

186 
	#¸ót
 
¸ót64


	)

189 #ifde‡
__USE_LARGEFILE64


190 
	$¸ót64
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

193 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

194 && !
deföed
 
__USE_POSIX
))

203 
	#F_ULOCK
 0

	)

204 
	#F_LOCK
 1

	)

205 
	#F_TLOCK
 2

	)

206 
	#F_TEST
 3

	)

208 #i‚de‡
__USE_FILE_OFFSET64


209 
	`lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
);

211 #ifde‡
__REDIRECT


212 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

214 
	#lockf
 
lockf64


	)

217 #ifde‡
__USE_LARGEFILE64


218 
	`lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
);

222 #ifde‡
__USE_XOPEN2K


225 #i‚de‡
__USE_FILE_OFFSET64


226 
	$posix_Ádvi£
 (
__fd
, 
__off_t
 
__off£t
, __off_à
__Àn
,

227 
__advi£
Ë
__THROW
;

229 #ifde‡
__REDIRECT_NTH


230 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

231 
__off64_t
 
__Àn
, 
__advi£
),

232 
posix_Ádvi£64
);

234 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

237 #ifde‡
__USE_LARGEFILE64


238 
	$posix_Ádvi£64
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__Àn
,

239 
__advi£
Ë
__THROW
;

247 #i‚de‡
__USE_FILE_OFFSET64


248 
	`posix_ÁŒoˇã
 (
__fd
, 
__off_t
 
__off£t
, __off_à
__Àn
);

250 #ifde‡
__REDIRECT


251 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

252 
__off64_t
 
__Àn
),

253 
posix_ÁŒoˇã64
);

255 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

258 #ifde‡
__USE_LARGEFILE64


259 
	`posix_ÁŒoˇã64
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__Àn
);

265 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe
 \

266 && 
deföed
 
__va_¨g_∑ck_Àn


267 
	~<bôs/f˙é2.h
>

270 
__END_DECLS


	@/usr/include/features.h

20 #i‚def 
_FEATURES_H


21 
	#_FEATURES_H
 1

	)

98 #unde‡
__USE_ISOC99


99 #unde‡
__USE_ISOC95


100 #unde‡
__USE_POSIX


101 #unde‡
__USE_POSIX2


102 #unde‡
__USE_POSIX199309


103 #unde‡
__USE_POSIX199506


104 #unde‡
__USE_XOPEN


105 #unde‡
__USE_XOPEN_EXTENDED


106 #unde‡
__USE_UNIX98


107 #unde‡
__USE_XOPEN2K


108 #unde‡
__USE_XOPEN2KXSI


109 #unde‡
__USE_XOPEN2K8


110 #unde‡
__USE_XOPEN2K8XSI


111 #unde‡
__USE_LARGEFILE


112 #unde‡
__USE_LARGEFILE64


113 #unde‡
__USE_FILE_OFFSET64


114 #unde‡
__USE_BSD


115 #unde‡
__USE_SVID


116 #unde‡
__USE_MISC


117 #unde‡
__USE_ATFILE


118 #unde‡
__USE_GNU


119 #unde‡
__USE_REENTRANT


120 #unde‡
__USE_FORTIFY_LEVEL


121 #unde‡
__FAVOR_BSD


122 #unde‡
__KERNEL_STRICT_NAMES


126 #i‚de‡
_LOOSE_KERNEL_NAMES


127 
	#__KERNEL_STRICT_NAMES


	)

131 
	#__USE_ANSI
 1

	)

140 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


141 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

142 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

144 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

149 #i‡
deföed
 
_BSD_SOURCE
 && \

150 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

151 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

152 
	#__FAVOR_BSD
 1

	)

156 #ifde‡
_GNU_SOURCE


157 #unde‡
_ISOC95_SOURCE


158 
	#_ISOC95_SOURCE
 1

	)

159 #unde‡
_ISOC99_SOURCE


160 
	#_ISOC99_SOURCE
 1

	)

161 #unde‡
_POSIX_SOURCE


162 
	#_POSIX_SOURCE
 1

	)

163 #unde‡
_POSIX_C_SOURCE


164 
	#_POSIX_C_SOURCE
 200809L

	)

165 #unde‡
_XOPEN_SOURCE


166 
	#_XOPEN_SOURCE
 700

	)

167 #unde‡
_XOPEN_SOURCE_EXTENDED


168 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

169 #unde‡
_LARGEFILE64_SOURCE


170 
	#_LARGEFILE64_SOURCE
 1

	)

171 #unde‡
_BSD_SOURCE


172 
	#_BSD_SOURCE
 1

	)

173 #unde‡
_SVID_SOURCE


174 
	#_SVID_SOURCE
 1

	)

175 #unde‡
_ATFILE_SOURCE


176 
	#_ATFILE_SOURCE
 1

	)

181 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

182 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

183 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

184 
	#_BSD_SOURCE
 1

	)

185 
	#_SVID_SOURCE
 1

	)

192 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

193 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

194 
	#__USE_ISOC99
 1

	)

198 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

199 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

200 
	#__USE_ISOC95
 1

	)

205 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

206 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

207 
	#_POSIX_SOURCE
 1

	)

208 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

209 
	#_POSIX_C_SOURCE
 2

	)

210 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

211 
	#_POSIX_C_SOURCE
 199506L

	)

212 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

213 
	#_POSIX_C_SOURCE
 200112L

	)

215 
	#_POSIX_C_SOURCE
 200809L

	)

217 
	#__USE_POSIX_IMPLICITLY
 1

	)

220 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


221 
	#__USE_POSIX
 1

	)

224 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


225 
	#__USE_POSIX2
 1

	)

228 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

229 
	#__USE_POSIX199309
 1

	)

232 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

233 
	#__USE_POSIX199506
 1

	)

236 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

237 
	#__USE_XOPEN2K
 1

	)

238 #unde‡
__USE_ISOC95


239 
	#__USE_ISOC95
 1

	)

240 #unde‡
__USE_ISOC99


241 
	#__USE_ISOC99
 1

	)

244 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

245 
	#__USE_XOPEN2K8
 1

	)

246 #unde‡
_ATFILE_SOURCE


247 
	#_ATFILE_SOURCE
 1

	)

250 #ifdef 
_XOPEN_SOURCE


251 
	#__USE_XOPEN
 1

	)

252 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

253 
	#__USE_XOPEN_EXTENDED
 1

	)

254 
	#__USE_UNIX98
 1

	)

255 #unde‡
_LARGEFILE_SOURCE


256 
	#_LARGEFILE_SOURCE
 1

	)

257 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

258 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

259 
	#__USE_XOPEN2K8
 1

	)

260 
	#__USE_XOPEN2K8XSI
 1

	)

262 
	#__USE_XOPEN2K
 1

	)

263 
	#__USE_XOPEN2KXSI
 1

	)

264 #unde‡
__USE_ISOC95


265 
	#__USE_ISOC95
 1

	)

266 #unde‡
__USE_ISOC99


267 
	#__USE_ISOC99
 1

	)

270 #ifde‡
_XOPEN_SOURCE_EXTENDED


271 
	#__USE_XOPEN_EXTENDED
 1

	)

276 #ifde‡
_LARGEFILE_SOURCE


277 
	#__USE_LARGEFILE
 1

	)

280 #ifde‡
_LARGEFILE64_SOURCE


281 
	#__USE_LARGEFILE64
 1

	)

284 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

285 
	#__USE_FILE_OFFSET64
 1

	)

288 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


289 
	#__USE_MISC
 1

	)

292 #ifdef 
_BSD_SOURCE


293 
	#__USE_BSD
 1

	)

296 #ifdef 
_SVID_SOURCE


297 
	#__USE_SVID
 1

	)

300 #ifdef 
_ATFILE_SOURCE


301 
	#__USE_ATFILE
 1

	)

304 #ifdef 
_GNU_SOURCE


305 
	#__USE_GNU
 1

	)

308 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


309 
	#__USE_REENTRANT
 1

	)

312 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

313 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

314 #i‡
_FORTIFY_SOURCE
 > 1

315 
	#__USE_FORTIFY_LEVEL
 2

	)

317 
	#__USE_FORTIFY_LEVEL
 1

	)

320 
	#__USE_FORTIFY_LEVEL
 0

	)

324 
	#__STDC_IEC_559__
 1

	)

325 
	#__STDC_IEC_559_COMPLEX__
 1

	)

328 
	#__STDC_ISO_10646__
 200009L

	)

336 #unde‡
__GNU_LIBRARY__


337 
	#__GNU_LIBRARY__
 6

	)

341 
	#__GLIBC__
 2

	)

342 
	#__GLIBC_MINOR__
 15

	)

344 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

345 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

348 #i‡
deföed
 
__GNUC__
 \

349 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

350 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

351 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

352 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

356 #i‚de‡
__ASSEMBLER__


357 #i‚de‡
_SYS_CDEFS_H


358 
	~<sys/cdefs.h
>

363 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


364 
	#__USE_LARGEFILE
 1

	)

365 
	#__USE_LARGEFILE64
 1

	)

371 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

372 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

373 && 
deföed
 
	g__exã∫_ölöe


374 
	#__USE_EXTERN_INLINES
 1

	)

382 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

21 #i‚de‡
_GETOPT_H


23 #i‚de‡
__√ed_gë›t


24 
	#_GETOPT_H
 1

	)

34 #i‡!
deföed
 
__GNU_LIBRARY__


35 
	~<˘y≥.h
>

38 #i‚de‡
__THROW


39 #i‚de‡
__GNUC_PREREQ


40 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

42 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

43 
	#__THROW
 
	`throw
 ()

	)

45 
	#__THROW


	)

49 #ifdef 
__˝lu•lus


59 *
›èrg
;

73 
›töd
;

78 
›ãº
;

82 
›t›t
;

84 #i‚de‡
__√ed_gë›t


106 
	s›ti⁄


108 c⁄° *
	g«me
;

111 
	ghas_¨g
;

112 *
	gÊag
;

113 
	gvÆ
;

118 
	#no_¨gumít
 0

	)

119 
	#ªquúed_¨gumít
 1

	)

120 
	#›ti⁄Æ_¨gumít
 2

	)

148 #ifde‡
__GNU_LIBRARY__


152 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

153 
__THROW
;

155 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

156 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


160 #ifde‡
__REDIRECT


161 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

162 c⁄° *
__sh‹t›ts
),

163 
__posix_gë›t
);

165 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

166 c⁄° *
__sh‹t›ts
Ë
__THROW
;

167 
	#gë›t
 
__posix_gë›t


	)

171 
gë›t
 ();

174 #i‚de‡
__√ed_gë›t


175 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

176 c⁄° *
__sh‹t›ts
,

177 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

178 
__THROW
;

179 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

180 c⁄° *
__sh‹t›ts
,

181 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

182 
__THROW
;

186 #ifdef 
__˝lu•lus


191 #unde‡
__√ed_gë›t


	@/usr/include/libintl.h

21 #i‚de‡
_LIBINTL_H


22 
	#_LIBINTL_H
 1

	)

24 
	~<„©uªs.h
>

28 
	#__USE_GNU_GETTEXT
 1

	)

32 
	#__GNU_GETTEXT_SUPPORTED_REVISION
(
maj‹
) \

33 ((
maj‹
Ë=0 ? 1 : -1)

	)

35 
__BEGIN_DECLS


40 *
	$gëãxt
 (
__c⁄°
 *
__msgid
)

41 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (1);

45 *
	$dgëãxt
 (
__c⁄°
 *
__domaö«me
, __c⁄° *
__msgid
)

46 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2);

47 *
	$__dgëãxt
 (
__c⁄°
 *
__domaö«me
, __c⁄° *
__msgid
)

48 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2);

52 *
	$dcgëãxt
 (
__c⁄°
 *
__domaö«me
,

53 
__c⁄°
 *
__msgid
, 
__ˇãg‹y
)

54 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2);

55 *
	$__dcgëãxt
 (
__c⁄°
 *
__domaö«me
,

56 
__c⁄°
 *
__msgid
, 
__ˇãg‹y
)

57 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2);

62 *
	$ngëãxt
 (
__c⁄°
 *
__msgid1
, __c⁄° *
__msgid2
,

63 
__n
)

64 
__THROW
 
	$__©åibuã_f‹m©_¨g__
 (1Ë
	`__©åibuã_f‹m©_¨g__
 (2);

68 *
	$dngëãxt
 (
__c⁄°
 *
__domaö«me
, __c⁄° *
__msgid1
,

69 
__c⁄°
 *
__msgid2
, 
__n
)

70 
__THROW
 
	$__©åibuã_f‹m©_¨g__
 (2Ë
	`__©åibuã_f‹m©_¨g__
 (3);

74 *
	$d˙gëãxt
 (
__c⁄°
 *
__domaö«me
, __c⁄° *
__msgid1
,

75 
__c⁄°
 *
__msgid2
, 
__n
,

76 
__ˇãg‹y
)

77 
__THROW
 
	$__©åibuã_f‹m©_¨g__
 (2Ë
	`__©åibuã_f‹m©_¨g__
 (3);

83 *
	$ãxtdomaö
 (
__c⁄°
 *
__domaö«me
Ë
__THROW
;

87 *
	$bödãxtdomaö
 (
__c⁄°
 *
__domaö«me
,

88 
__c⁄°
 *
__dú«me
Ë
__THROW
;

92 *
	$böd_ãxtdomaö_code£t
 (
__c⁄°
 *
__domaö«me
,

93 
__c⁄°
 *
__code£t
Ë
__THROW
;

97 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


100 
	#__√ed_NULL


	)

101 
	~<°ddef.h
>

104 
	~<loˇÀ.h
>

110 
	#gëãxt
(
msgid
Ë
	`dgëãxt
 (
NULL
, msgid)

	)

112 
	#dgëãxt
(
domaö«me
, 
msgid
) \

113 
	`dcgëãxt
 (
domaö«me
, 
msgid
, 
LC_MESSAGES
)

	)

115 
	#ngëãxt
(
msgid1
, 
msgid2
, 
n
Ë
	`dngëãxt
 (
NULL
, msgid1, msgid2,Ç)

	)

117 
	#dngëãxt
(
domaö«me
, 
msgid1
, 
msgid2
, 
n
) \

118 
	`d˙gëãxt
 (
domaö«me
, 
msgid1
, 
msgid2
, 
n
, 
LC_MESSAGES
)

	)

122 
__END_DECLS


	@/usr/include/locale.h

23 #i‚def 
_LOCALE_H


24 
	#_LOCALE_H
 1

	)

26 
	~<„©uªs.h
>

28 
	#__√ed_NULL


	)

29 
	~<°ddef.h
>

30 
	~<bôs/loˇÀ.h
>

32 
	g__BEGIN_DECLS


36 
	#LC_CTYPE
 
__LC_CTYPE


	)

37 
	#LC_NUMERIC
 
__LC_NUMERIC


	)

38 
	#LC_TIME
 
__LC_TIME


	)

39 
	#LC_COLLATE
 
__LC_COLLATE


	)

40 
	#LC_MONETARY
 
__LC_MONETARY


	)

41 
	#LC_MESSAGES
 
__LC_MESSAGES


	)

42 
	#LC_ALL
 
__LC_ALL


	)

43 
	#LC_PAPER
 
__LC_PAPER


	)

44 
	#LC_NAME
 
__LC_NAME


	)

45 
	#LC_ADDRESS
 
__LC_ADDRESS


	)

46 
	#LC_TELEPHONE
 
__LC_TELEPHONE


	)

47 
	#LC_MEASUREMENT
 
__LC_MEASUREMENT


	)

48 
	#LC_IDENTIFICATION
 
__LC_IDENTIFICATION


	)

51 
__BEGIN_NAMESPACE_STD


54 
	slc⁄v


58 *
	mdecimÆ_poöt
;

59 *
	mthoußnds_£p
;

65 *
	mgroupög
;

71 *
	möt_cuº_symbﬁ
;

72 *
	mcuºícy_symbﬁ
;

73 *
	mm⁄_decimÆ_poöt
;

74 *
	mm⁄_thoußnds_£p
;

75 *
	mm⁄_groupög
;

76 *
	mposôive_sign
;

77 *
	m√g©ive_sign
;

78 
	möt_‰ac_digôs
;

79 
	m‰ac_digôs
;

81 
	mp_cs_¥e˚des
;

83 
	mp_£p_by_•a˚
;

85 
	mn_cs_¥e˚des
;

87 
	mn_£p_by_•a˚
;

94 
	mp_sign_po¢
;

95 
	mn_sign_po¢
;

96 #ifde‡
__USE_ISOC99


98 
	möt_p_cs_¥e˚des
;

100 
	möt_p_£p_by_•a˚
;

102 
	möt_n_cs_¥e˚des
;

104 
	möt_n_£p_by_•a˚
;

111 
	möt_p_sign_po¢
;

112 
	möt_n_sign_po¢
;

114 
	m__öt_p_cs_¥e˚des
;

115 
	m__öt_p_£p_by_•a˚
;

116 
	m__öt_n_cs_¥e˚des
;

117 
	m__öt_n_£p_by_•a˚
;

118 
	m__öt_p_sign_po¢
;

119 
	m__öt_n_sign_po¢
;

125 *
	$£éoˇÀ
 (
__ˇãg‹y
, 
__c⁄°
 *
__loˇÀ
Ë
__THROW
;

128 
lc⁄v
 *
	$loˇÀc⁄v
 (Ë
__THROW
;

130 
__END_NAMESPACE_STD


133 #ifdef 
__USE_XOPEN2K8


146 
	~<xloˇÀ.h
>

152 
__loˇÀ_t
 
	$√wloˇÀ
 (
__ˇãg‹y_mask
, 
__c⁄°
 *
__loˇÀ
,

153 
__loˇÀ_t
 
__ba£
Ë
__THROW
;

159 
	#LC_CTYPE_MASK
 (1 << 
__LC_CTYPE
)

	)

160 
	#LC_NUMERIC_MASK
 (1 << 
__LC_NUMERIC
)

	)

161 
	#LC_TIME_MASK
 (1 << 
__LC_TIME
)

	)

162 
	#LC_COLLATE_MASK
 (1 << 
__LC_COLLATE
)

	)

163 
	#LC_MONETARY_MASK
 (1 << 
__LC_MONETARY
)

	)

164 
	#LC_MESSAGES_MASK
 (1 << 
__LC_MESSAGES
)

	)

165 
	#LC_PAPER_MASK
 (1 << 
__LC_PAPER
)

	)

166 
	#LC_NAME_MASK
 (1 << 
__LC_NAME
)

	)

167 
	#LC_ADDRESS_MASK
 (1 << 
__LC_ADDRESS
)

	)

168 
	#LC_TELEPHONE_MASK
 (1 << 
__LC_TELEPHONE
)

	)

169 
	#LC_MEASUREMENT_MASK
 (1 << 
__LC_MEASUREMENT
)

	)

170 
	#LC_IDENTIFICATION_MASK
 (1 << 
__LC_IDENTIFICATION
)

	)

171 
	#LC_ALL_MASK
 (
LC_CTYPE_MASK
 \

172 | 
LC_NUMERIC_MASK
 \

173 | 
LC_TIME_MASK
 \

174 | 
LC_COLLATE_MASK
 \

175 | 
LC_MONETARY_MASK
 \

176 | 
LC_MESSAGES_MASK
 \

177 | 
LC_PAPER_MASK
 \

178 | 
LC_NAME_MASK
 \

179 | 
LC_ADDRESS_MASK
 \

180 | 
LC_TELEPHONE_MASK
 \

181 | 
LC_MEASUREMENT_MASK
 \

182 | 
LC_IDENTIFICATION_MASK
 \

183 )

	)

187 
__loˇÀ_t
 
	$du∂oˇÀ
 (
__loˇÀ_t
 
__d©a£t
Ë
__THROW
;

191 
	$‰ìloˇÀ
 (
__loˇÀ_t
 
__d©a£t
Ë
__THROW
;

198 
__loˇÀ_t
 
	$u£loˇÀ
 (
__loˇÀ_t
 
__d©a£t
Ë
__THROW
;

202 
	#LC_GLOBAL_LOCALE
 ((
__loˇÀ_t
Ë-1L)

	)

206 
__END_DECLS


	@/usr/include/pwd.h

23 #i‚def 
_PWD_H


24 
	#_PWD_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ty≥s.h
>

32 
	#__√ed_size_t


	)

33 
	~<°ddef.h
>

35 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


38 #i‚de‡
__gid_t_deföed


39 
__gid_t
 
	tgid_t
;

40 
	#__gid_t_deföed


	)

43 #i‚de‡
__uid_t_deföed


44 
__uid_t
 
	tuid_t
;

45 
	#__uid_t_deföed


	)

50 
	s∑sswd


52 *
	mpw_«me
;

53 *
	mpw_∑sswd
;

54 
__uid_t
 
	mpw_uid
;

55 
__gid_t
 
	mpw_gid
;

56 *
	mpw_gecos
;

57 *
	mpw_dú
;

58 *
	mpw_shñl
;

62 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_GNU


63 
	#__√ed_FILE


	)

64 
	~<°dio.h
>

68 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


73 
£çwít
 ();

79 
ídpwít
 ();

85 
∑sswd
 *
gëpwít
 ();

88 #ifdef 
__USE_SVID


95 
∑sswd
 *
fgëpwít
 (
FILE
 *
__°ªam
);

103 
puçwít
 (
__c⁄°
 
∑sswd
 *
__ª°ri˘
 
__p
,

104 
FILE
 *
__ª°ri˘
 
__f
);

111 
∑sswd
 *
gëpwuid
 (
__uid_t
 
__uid
);

117 
∑sswd
 *
gëpw«m
 (
__c⁄°
 *
__«me
);

119 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


121 #ifde‡
__USE_MISC


124 
	#NSS_BUFLEN_PASSWD
 1024

	)

135 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


140 
gëpwít_r
 (
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

141 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

142 
∑sswd
 **
__ª°ri˘
 
__ªsu…
);

145 
gëpwuid_r
 (
__uid_t
 
__uid
,

146 
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

147 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

148 
∑sswd
 **
__ª°ri˘
 
__ªsu…
);

150 
gëpw«m_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

151 
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

152 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

153 
∑sswd
 **
__ª°ri˘
 
__ªsu…
);

156 #ifdef 
__USE_SVID


164 
fgëpwít_r
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

165 
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

166 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

167 
∑sswd
 **
__ª°ri˘
 
__ªsu…
);

172 #ifde‡
__USE_GNU


181 
gëpw
 (
__uid_t
 
__uid
, *
__buf„r
);

184 
	g__END_DECLS


	@/usr/include/setjmp.h

23 #i‚def 
_SETJMP_H


24 
	#_SETJMP_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/£tjmp.h
>

31 
	~<bôs/sig£t.h
>

35 
	s__jmp_buf_èg


41 
__jmp_buf
 
	m__jmpbuf
;

42 
	m__mask_was_ßved
;

43 
__sig£t_t
 
	m__ßved_mask
;

47 
__BEGIN_NAMESPACE_STD


49 
__jmp_buf_èg
 
	tjmp_buf
[1];

53 
	$£tjmp
 (
jmp_buf
 
__ív
Ë
__THROWNL
;

55 
__END_NAMESPACE_STD


60 
	$__sig£tjmp
 (
__jmp_buf_èg
 
__ív
[1], 
__ßvemask
Ë
__THROWNL
;

62 #i‚def 
__FAVOR_BSD


65 
	$_£tjmp
 (
__jmp_buf_èg
 
__ív
[1]Ë
__THROWNL
;

69 
	#£tjmp
(
ív
Ë
	`_£tjmp
 (ív)

	)

74 
	#£tjmp
(
ív
Ë
	`£tjmp
 (ív)

	)

78 
__BEGIN_NAMESPACE_STD


82 
	$l⁄gjmp
 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
)

83 
__THROWNL
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

85 
__END_NAMESPACE_STD


87 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


91 
	$_l⁄gjmp
 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
)

92 
__THROWNL
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

96 #ifdef 
__USE_POSIX


100 
__jmp_buf_èg
 
	tsigjmp_buf
[1];

104 
	#sig£tjmp
(
ív
, 
ßvemask
Ë
	`__sig£tjmp
 (ív, savemask)

	)

110 
	$sigl⁄gjmp
 (
sigjmp_buf
 
__ív
, 
__vÆ
)

111 
__THROWNL
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

116 #i‡
__USE_FORTIFY_LEVEL
 > 0

117 
	~<bôs/£tjmp2.h
>

120 
__END_DECLS


	@/usr/include/sgtty.h

19 #i‚def 
_SGTTY_H


20 
	#_SGTTY_H
 1

	)

22 
	~<„©uªs.h
>

24 
	~<sys/io˘l.h
>

28 
	gsgâyb
;

30 
__BEGIN_DECLS


33 
	$gây
 (
__fd
, 
sgâyb
 *
__∑øms
Ë
__THROW
;

36 
	$°ty
 (
__fd
, 
__c⁄°
 
sgâyb
 *
__∑øms
Ë
__THROW
;

39 
__END_DECLS


	@/usr/include/signal.h

23 #i‚def 
_SIGNAL_H


25 #i‡!
deföed
 
__√ed_sig_©omic_t
 && !deföed 
__√ed_sig£t_t


26 
	#_SIGNAL_H


	)

29 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


33 
	~<bôs/sig£t.h
>

37 #i‡
deföed
 
__√ed_sig_©omic_t
 || deföed 
_SIGNAL_H


38 #i‚de‡
__sig_©omic_t_deföed


39 
	#__sig_©omic_t_deföed


	)

40 
__BEGIN_NAMESPACE_STD


41 
__sig_©omic_t
 
	tsig_©omic_t
;

42 
	g__END_NAMESPACE_STD


44 #unde‡
__√ed_sig_©omic_t


47 #i‡
deföed
 
__√ed_sig£t_t
 || (deföed 
_SIGNAL_H
 && deföed 
__USE_POSIX
)

48 #i‚de‡
__sig£t_t_deföed


49 
	#__sig£t_t_deföed


	)

50 
__sig£t_t
 
	tsig£t_t
;

52 #unde‡
__√ed_sig£t_t


55 #ifde‡
_SIGNAL_H


57 
	~<bôs/ty≥s.h
>

58 
	~<bôs/signum.h
>

60 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


61 #i‚de‡
__pid_t_deföed


62 
__pid_t
 
	tpid_t
;

63 
	#__pid_t_deföed


	)

65 #ifde‡
__USE_XOPEN


67 #i‚de‡
__uid_t_deföed


68 
__uid_t
 
	tuid_t
;

69 
	#__uid_t_deföed


	)

73 #ifde‡
__USE_POSIX199309


75 
	#__√ed_time•ec


	)

76 
	~<time.h
>

79 
	~<bôs/sigöfo.h
>

84 (*
	t__sigh™dÀr_t
) ();

89 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

90 
__THROW
;

91 #ifde‡
__USE_GNU


92 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

93 
__THROW
;

99 
__BEGIN_NAMESPACE_STD


100 #ifde‡
__USE_BSD


101 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

102 
__THROW
;

105 #ifde‡
__REDIRECT_NTH


106 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

107 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

108 
__sysv_sig«l
);

110 
	#sig«l
 
__sysv_sig«l


	)

113 
__END_NAMESPACE_STD


115 #ifde‡
__USE_XOPEN


118 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

119 
__THROW
;

125 #ifde‡
__USE_POSIX


126 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

129 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


133 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

136 
__BEGIN_NAMESPACE_STD


138 
	$øi£
 (
__sig
Ë
__THROW
;

139 
__END_NAMESPACE_STD


141 #ifde‡
__USE_SVID


143 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

144 
__THROW
;

145 
	$gsig«l
 (
__sig
Ë
__THROW
;

148 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K


150 
	`psig«l
 (
__sig
, 
__c⁄°
 *
__s
);

153 #ifde‡
__USE_XOPEN2K


155 
	`psigöfo
 (
__c⁄°
 
sigöfo_t
 *
__pöfo
, __c⁄° *
__s
);

168 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

170 #ifde‡
__FAVOR_BSD


173 
	$sig∑u£
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

175 #ifde‡
__USE_XOPEN


176 #ifde‡
__GNUC__


177 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

180 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

186 #ifde‡
__USE_BSD


193 
	#sigmask
(
sig
Ë
	`__sigmask
(sig)

	)

196 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

199 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

202 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

206 #ifde‡
__USE_MISC


207 
	#NSIG
 
_NSIG


	)

210 #ifde‡
__USE_GNU


211 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

215 #ifde‡
__USE_BSD


216 
__sigh™dÀr_t
 
	tsig_t
;

219 #ifde‡
__USE_POSIX


222 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

225 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

228 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

231 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

234 
	$sigismembî
 (
__c⁄°
 
sig£t_t
 *
__£t
, 
__signo
)

235 
__THROW
 
	`__n⁄nuŒ
 ((1));

237 #ifde‡
__USE_GNU


239 
	$sigi£m±y£t
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

242 
	$sig™d£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

243 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

246 
	$sig‹£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

247 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

252 
	~<bôs/siga˘i⁄.h
>

255 
	$sig¥ocmask
 (
__how
, 
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

256 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

263 
	$sigsu•íd
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

266 
	$siga˘i⁄
 (
__sig
, 
__c⁄°
 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

267 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

270 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

277 
	$sigwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

278 
	`__n⁄nuŒ
 ((1, 2));

280 #ifde‡
__USE_POSIX199309


285 
	$sigwaôöfo
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

286 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

293 
	$sigtimedwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

294 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

295 
__c⁄°
 
time•ec
 *
__ª°ri˘
 
__timeout
)

296 
	`__n⁄nuŒ
 ((1));

300 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, 
__c⁄°
 
sigvÆ
 
__vÆ
)

301 
__THROW
;

306 #ifde‡
__USE_BSD


310 
__c⁄°
 *__c⁄° 
_sys_sigli°
[
_NSIG
];

311 
__c⁄°
 *__c⁄° 
sys_sigli°
[
_NSIG
];

314 
	ssigvec


316 
__sigh™dÀr_t
 
sv_h™dÀr
;

317 
sv_mask
;

319 
sv_Êags
;

320 
	#sv_⁄°ack
 
sv_Êags


	)

324 
	#SV_ONSTACK
 (1 << 0)

	)

325 
	#SV_INTERRUPT
 (1 << 1)

	)

326 
	#SV_RESETHAND
 (1 << 2)

	)

334 
	$sigvec
 (
__sig
, 
__c⁄°
 
sigvec
 *
__vec
,

335 
sigvec
 *
__ovec
Ë
__THROW
;

339 
	~<bôs/sigc⁄ãxt.h
>

342 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

347 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


348 
	#__√ed_size_t


	)

349 
	~<°ddef.h
>

354 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

356 
	~<bôs/sig°ack.h
>

357 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


359 
	~<sys/uc⁄ãxt.h
>

365 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

366 
__THROW
 
__©åibuã_dïªˇãd__
;

370 
	$sigÆt°ack
 (
__c⁄°
 
sigÆt°ack
 *
__ª°ri˘
 
__ss
,

371 
sigÆt°ack
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

375 #ifde‡
__USE_XOPEN_EXTENDED


379 
	$sighﬁd
 (
__sig
Ë
__THROW
;

382 
	$sigªl£
 (
__sig
Ë
__THROW
;

385 
	$sigign‹e
 (
__sig
Ë
__THROW
;

388 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

391 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


394 
	~<bôs/±hªadty≥s.h
>

395 
	~<bôs/sigthªad.h
>

402 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

404 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

408 
__END_DECLS


	@/usr/include/stdio.h

24 #i‚de‡
_STDIO_H


26 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


27 
	#_STDIO_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

36 
	~<bôs/ty≥s.h
>

37 
	#__√ed_FILE


	)

38 
	#__√ed___FILE


	)

42 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


45 
	g_IO_FILE
;

47 
__BEGIN_NAMESPACE_STD


49 
_IO_FILE
 
	tFILE
;

50 
	g__END_NAMESPACE_STD


51 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

52 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

53 || 
deföed
 
__USE_POSIX2


54 
	$__USING_NAMESPACE_STD
(
FILE
)

57 
	#__FILE_deföed
 1

	)

59 #unde‡
__√ed_FILE


62 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


65 
_IO_FILE
 
	t__FILE
;

67 
	#____FILE_deföed
 1

	)

69 #unde‡
__√ed___FILE


72 #ifdef 
_STDIO_H


73 
	#_STDIO_USES_IOSTREAM


	)

75 
	~<libio.h
>

77 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


78 #ifde‡
__GNUC__


79 #i‚de‡
_VA_LIST_DEFINED


80 
_G_va_li°
 
	tva_li°
;

81 
	#_VA_LIST_DEFINED


	)

84 
	~<°d¨g.h
>

88 #ifde‡
__USE_XOPEN2K8


89 #i‚de‡
__off_t_deföed


90 #i‚de‡
__USE_FILE_OFFSET64


91 
__off_t
 
	toff_t
;

93 
__off64_t
 
	toff_t
;

95 
	#__off_t_deföed


	)

97 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


98 
__off64_t
 
	toff64_t
;

99 
	#__off64_t_deföed


	)

102 #i‚de‡
__ssize_t_deföed


103 
__ssize_t
 
	tssize_t
;

104 
	#__ssize_t_deföed


	)

109 
__BEGIN_NAMESPACE_STD


110 #i‚de‡
__USE_FILE_OFFSET64


111 
_G_Âos_t
 
	tÂos_t
;

113 
_G_Âos64_t
 
	tÂos_t
;

115 
__END_NAMESPACE_STD


116 #ifde‡
__USE_LARGEFILE64


117 
_G_Âos64_t
 
	tÂos64_t
;

121 
	#_IOFBF
 0

	)

122 
	#_IOLBF
 1

	)

123 
	#_IONBF
 2

	)

127 #i‚de‡
BUFSIZ


128 
	#BUFSIZ
 
_IO_BUFSIZ


	)

134 #i‚de‡
EOF


135 
	#EOF
 (-1)

	)

141 
	#SEEK_SET
 0

	)

142 
	#SEEK_CUR
 1

	)

143 
	#SEEK_END
 2

	)

144 #ifde‡
__USE_GNU


145 
	#SEEK_DATA
 3

	)

146 
	#SEEK_HOLE
 4

	)

150 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


152 
	#P_tmpdú
 "/tmp"

	)

165 
	~<bôs/°dio_lim.h
>

169 
_IO_FILE
 *
°dö
;

170 
_IO_FILE
 *
°dout
;

171 
_IO_FILE
 *
°dîr
;

173 
	#°dö
 
°dö


	)

174 
	#°dout
 
°dout


	)

175 
	#°dîr
 
°dîr


	)

177 
__BEGIN_NAMESPACE_STD


179 
	$ªmove
 (
__c⁄°
 *
__fûíame
Ë
__THROW
;

181 
	$ª«me
 (
__c⁄°
 *
__ﬁd
, __c⁄° *
__√w
Ë
__THROW
;

182 
__END_NAMESPACE_STD


184 #ifde‡
__USE_ATFILE


186 
	$ª«mót
 (
__ﬁdfd
, 
__c⁄°
 *
__ﬁd
, 
__√wfd
,

187 
__c⁄°
 *
__√w
Ë
__THROW
;

190 
__BEGIN_NAMESPACE_STD


195 #i‚de‡
__USE_FILE_OFFSET64


196 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

198 #ifde‡
__REDIRECT


199 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

201 
	#tmpfûe
 
tmpfûe64


	)

205 #ifde‡
__USE_LARGEFILE64


206 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

210 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

211 
__END_NAMESPACE_STD


213 #ifde‡
__USE_MISC


216 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

220 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


228 *
	$ãm≤am
 (
__c⁄°
 *
__dú
, __c⁄° *
__pfx
)

229 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

233 
__BEGIN_NAMESPACE_STD


238 
	`f˛o£
 (
FILE
 *
__°ªam
);

243 
	`fÊush
 (
FILE
 *
__°ªam
);

244 
__END_NAMESPACE_STD


246 #ifde‡
__USE_MISC


253 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

256 #ifde‡
__USE_GNU


263 
	`f˛o£Æl
 ();

267 
__BEGIN_NAMESPACE_STD


268 #i‚de‡
__USE_FILE_OFFSET64


273 
FILE
 *
	$f›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

274 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

279 
FILE
 *
	$‰e›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

280 
__c⁄°
 *
__ª°ri˘
 
__modes
,

281 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

283 #ifde‡
__REDIRECT


284 
FILE
 *
	`__REDIRECT
 (
f›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

285 
__c⁄°
 *
__ª°ri˘
 
__modes
), 
f›í64
)

286 
__wur
;

287 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

288 
__c⁄°
 *
__ª°ri˘
 
__modes
,

289 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

290 
__wur
;

292 
	#f›í
 
f›í64


	)

293 
	#‰e›í
 
‰e›í64


	)

296 
__END_NAMESPACE_STD


297 #ifde‡
__USE_LARGEFILE64


298 
FILE
 *
	$f›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

299 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

300 
FILE
 *
	$‰e›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

301 
__c⁄°
 *
__ª°ri˘
 
__modes
,

302 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

305 #ifdef 
__USE_POSIX


307 
FILE
 *
	$fd›í
 (
__fd
, 
__c⁄°
 *
__modes
Ë
__THROW
 
__wur
;

310 #ifdef 
__USE_GNU


313 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

314 
__c⁄°
 *
__ª°ri˘
 
__modes
,

315 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

318 #ifde‡
__USE_XOPEN2K8


320 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, 
__c⁄°
 *
__modes
)

321 
__THROW
 
__wur
;

326 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

330 
__BEGIN_NAMESPACE_STD


333 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

337 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

338 
__modes
, 
size_t
 
__n
Ë
__THROW
;

339 
__END_NAMESPACE_STD


341 #ifdef 
__USE_BSD


344 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

345 
size_t
 
__size
Ë
__THROW
;

348 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

352 
__BEGIN_NAMESPACE_STD


357 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

358 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

363 
	`¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

365 
	$•rötf
 (*
__ª°ri˘
 
__s
,

366 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

372 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

373 
_G_va_li°
 
__¨g
);

378 
	`v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

380 
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

381 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

382 
__END_NAMESPACE_STD


384 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


385 
__BEGIN_NAMESPACE_C99


387 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

388 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

389 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

391 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

392 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

393 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

394 
__END_NAMESPACE_C99


397 #ifde‡
__USE_GNU


400 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__f
,

401 
_G_va_li°
 
__¨g
)

402 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

403 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

404 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

405 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

406 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

407 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

408 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

411 #ifde‡
__USE_XOPEN2K8


418 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

419 
_G_va_li°
 
__¨g
)

420 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

421 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

422 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

426 
__BEGIN_NAMESPACE_STD


431 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

432 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

437 
	$sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

439 
	$ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

440 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

442 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

443 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

444 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

445 #ifde‡
__REDIRECT


449 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

450 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

451 
__isoc99_fsˇnf
Ë
__wur
;

452 
	`__REDIRECT
 (
sˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

453 
__isoc99_sˇnf
Ë
__wur
;

454 
	`__REDIRECT_NTH
 (
ssˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__s
,

455 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

456 
__isoc99_ssˇnf
);

458 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

459 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

460 
	$__isoc99_sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

461 
	$__isoc99_ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

462 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

463 
	#fsˇnf
 
__isoc99_fsˇnf


	)

464 
	#sˇnf
 
__isoc99_sˇnf


	)

465 
	#ssˇnf
 
__isoc99_ssˇnf


	)

469 
__END_NAMESPACE_STD


471 #ifdef 
__USE_ISOC99


472 
__BEGIN_NAMESPACE_C99


477 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

478 
_G_va_li°
 
__¨g
)

479 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

485 
	$vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

486 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

489 
	$vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

490 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

491 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

493 #i‡!
deföed
 
__USE_GNU
 \

494 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

495 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

496 #ifde‡
__REDIRECT


500 
	`__REDIRECT
 (
vfsˇnf
,

501 (
FILE
 *
__ª°ri˘
 
__s
,

502 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

503 
__isoc99_vfsˇnf
)

504 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

505 
	`__REDIRECT
 (
vsˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

506 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

507 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

508 
	`__REDIRECT_NTH
 (
vssˇnf
,

509 (
__c⁄°
 *
__ª°ri˘
 
__s
,

510 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

511 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

512 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

514 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

515 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

516 
_G_va_li°
 
__¨g
Ë
__wur
;

517 
	$__isoc99_vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

518 
_G_va_li°
 
__¨g
Ë
__wur
;

519 
	$__isoc99_vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

520 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

521 
_G_va_li°
 
__¨g
Ë
__THROW
;

522 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

523 
	#vsˇnf
 
__isoc99_vsˇnf


	)

524 
	#vssˇnf
 
__isoc99_vssˇnf


	)

528 
__END_NAMESPACE_C99


532 
__BEGIN_NAMESPACE_STD


537 
	`fgëc
 (
FILE
 *
__°ªam
);

538 
	`gëc
 (
FILE
 *
__°ªam
);

544 
	`gëch¨
 ();

545 
__END_NAMESPACE_STD


549 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

551 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


556 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

557 
	`gëch¨_u∆ocked
 ();

560 #ifde‡
__USE_MISC


567 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

571 
__BEGIN_NAMESPACE_STD


579 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

580 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

586 
	`putch¨
 (
__c
);

587 
__END_NAMESPACE_STD


591 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

593 #ifde‡
__USE_MISC


600 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

603 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


608 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

609 
	`putch¨_u∆ocked
 (
__c
);

613 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

614 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

616 
	`gëw
 (
FILE
 *
__°ªam
);

619 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

623 
__BEGIN_NAMESPACE_STD


628 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

629 
__wur
;

636 *
	$gës
 (*
__s
Ë
__wur
;

637 
__END_NAMESPACE_STD


639 #ifde‡
__USE_GNU


646 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

647 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

651 #ifdef 
__USE_XOPEN2K8


662 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

663 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

664 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

665 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

666 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

667 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

675 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

676 
size_t
 *
__ª°ri˘
 
__n
,

677 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

681 
__BEGIN_NAMESPACE_STD


686 
	`Âuts
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

692 
	`puts
 (
__c⁄°
 *
__s
);

699 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

706 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

707 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

712 
size_t
 
	$fwrôe
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

713 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
Ë
__wur
;

714 
__END_NAMESPACE_STD


716 #ifde‡
__USE_GNU


723 
	`Âuts_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

724 
FILE
 *
__ª°ri˘
 
__°ªam
);

727 #ifde‡
__USE_MISC


734 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

735 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

736 
size_t
 
	$fwrôe_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

737 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

741 
__BEGIN_NAMESPACE_STD


746 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

751 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

756 
	`ªwöd
 (
FILE
 *
__°ªam
);

757 
__END_NAMESPACE_STD


764 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


765 #i‚de‡
__USE_FILE_OFFSET64


770 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

775 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

777 #ifde‡
__REDIRECT


778 
	`__REDIRECT
 (
f£eko
,

779 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

780 
f£eko64
);

781 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

783 
	#f£eko
 
f£eko64


	)

784 
	#·ñlo
 
·ñlo64


	)

789 
__BEGIN_NAMESPACE_STD


790 #i‚de‡
__USE_FILE_OFFSET64


795 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

800 
	`f£ços
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
);

802 #ifde‡
__REDIRECT


803 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

804 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

805 
	`__REDIRECT
 (
f£ços
,

806 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
), 
f£ços64
);

808 
	#fgëpos
 
fgëpos64


	)

809 
	#f£ços
 
f£ços64


	)

812 
__END_NAMESPACE_STD


814 #ifde‡
__USE_LARGEFILE64


815 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

816 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

817 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

818 
	`f£ços64
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos64_t
 *
__pos
);

821 
__BEGIN_NAMESPACE_STD


823 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

825 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

827 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

828 
__END_NAMESPACE_STD


830 #ifde‡
__USE_MISC


832 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

833 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

834 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

838 
__BEGIN_NAMESPACE_STD


843 
	`≥º‹
 (
__c⁄°
 *
__s
);

844 
__END_NAMESPACE_STD


850 
	~<bôs/sys_îæi°.h
>

853 #ifdef 
__USE_POSIX


855 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

858 #ifde‡
__USE_MISC


860 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

864 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

865 
deföed
 
__USE_MISC
)

870 
FILE
 *
	$p›í
 (
__c⁄°
 *
__comm™d
, __c⁄° *
__modes
Ë
__wur
;

876 
	`p˛o£
 (
FILE
 *
__°ªam
);

880 #ifdef 
__USE_POSIX


882 *
	$˘îmid
 (*
__s
Ë
__THROW
;

886 #ifde‡
__USE_XOPEN


888 *
	`cu£rid
 (*
__s
);

892 #ifdef 
__USE_GNU


893 
ob°ack
;

896 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

897 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

898 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

899 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

900 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

901 
_G_va_li°
 
__¨gs
)

902 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

906 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


910 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

914 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

917 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

920 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


924 
	#__√ed_gë›t


	)

925 
	~<gë›t.h
>

930 #ifde‡
__USE_EXTERN_INLINES


931 
	~<bôs/°dio.h
>

933 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


934 
	~<bôs/°dio2.h
>

936 #ifde‡
__LDBL_COMPAT


937 
	~<bôs/°dio-ldbl.h
>

940 
__END_DECLS


	@/usr/include/stdlib.h

23 #i‚def 
_STDLIB_H


25 
	~<„©uªs.h
>

28 
	#__√ed_size_t


	)

29 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


30 
	#__√ed_wch¨_t


	)

31 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	g__BEGIN_DECLS


37 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


38 
	#_STDLIB_H
 1

	)

40 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


42 
	~<bôs/waôÊags.h
>

43 
	~<bôs/waô°©us.h
>

45 #ifde‡
__USE_BSD


50 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


51 
	#__WAIT_INT
(
°©us
) \

52 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

53 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

55 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

63 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


64 
	#__WAIT_STATUS
 *

	)

65 
	#__WAIT_STATUS_DEFN
 *

	)

70 
waô
 *
	m__u±r
;

71 *
	m__ùå
;

72 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

73 
	#__WAIT_STATUS_DEFN
 *

	)

78 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

79 
	#__WAIT_STATUS
 *

	)

80 
	#__WAIT_STATUS_DEFN
 *

	)

85 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

90 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

91 #ifde‡
__WIFCONTINUED


92 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

96 
__BEGIN_NAMESPACE_STD


100 
	mquŸ
;

101 
	mªm
;

102 } 
	tdiv_t
;

105 #i‚de‡
__ldiv_t_deföed


108 
	mquŸ
;

109 
	mªm
;

110 } 
	tldiv_t
;

111 
	#__ldiv_t_deföed
 1

	)

113 
	g__END_NAMESPACE_STD


115 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


116 
__BEGIN_NAMESPACE_C99


118 
__exãnsi⁄__
 struct

120 
	mquŸ
;

121 
	mªm
;

122 } 
	tŒdiv_t
;

123 
	#__Œdiv_t_deföed
 1

	)

124 
	g__END_NAMESPACE_C99


129 
	#RAND_MAX
 2147483647

	)

134 
	#EXIT_FAILURE
 1

	)

135 
	#EXIT_SUCCESS
 0

	)

139 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

140 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

143 
__BEGIN_NAMESPACE_STD


145 
	$©of
 (
__c⁄°
 *
__≈å
)

146 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

148 
	$©oi
 (
__c⁄°
 *
__≈å
)

149 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

151 
	$©ﬁ
 (
__c⁄°
 *
__≈å
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

153 
__END_NAMESPACE_STD


155 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

156 
__BEGIN_NAMESPACE_C99


158 
__exãnsi⁄__
 
	$©ﬁl
 (
__c⁄°
 *
__≈å
)

159 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

160 
__END_NAMESPACE_C99


163 
__BEGIN_NAMESPACE_STD


165 
	$°πod
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

166 **
__ª°ri˘
 
__íd±r
)

167 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

168 
__END_NAMESPACE_STD


170 #ifdef 
__USE_ISOC99


171 
__BEGIN_NAMESPACE_C99


173 
	$°πof
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

174 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

176 
	$°πﬁd
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

177 **
__ª°ri˘
 
__íd±r
)

178 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

179 
__END_NAMESPACE_C99


182 
__BEGIN_NAMESPACE_STD


184 
	$°πﬁ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

185 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

186 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

188 
	$°πoul
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

189 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

190 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

191 
__END_NAMESPACE_STD


193 #i‡
deföed
 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_BSD


195 
__exãnsi⁄__


196 
	$°πoq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

197 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

198 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

200 
__exãnsi⁄__


201 
	$°πouq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

202 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

203 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

206 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

207 
__BEGIN_NAMESPACE_C99


209 
__exãnsi⁄__


210 
	$°πﬁl
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

211 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

212 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

214 
__exãnsi⁄__


215 
	$°πouŒ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

216 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

217 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

218 
__END_NAMESPACE_C99


222 #ifde‡
__USE_GNU


236 
	~<xloˇÀ.h
>

240 
	$°πﬁ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

241 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

242 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

244 
	$°πoul_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

245 **
__ª°ri˘
 
__íd±r
,

246 
__ba£
, 
__loˇÀ_t
 
__loc
)

247 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

249 
__exãnsi⁄__


250 
	$°πﬁl_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

251 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

252 
__loˇÀ_t
 
__loc
)

253 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

255 
__exãnsi⁄__


256 
	$°πouŒ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

257 **
__ª°ri˘
 
__íd±r
,

258 
__ba£
, 
__loˇÀ_t
 
__loc
)

259 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

261 
	$°πod_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

262 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

263 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

265 
	$°πof_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

266 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

267 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

269 
	$°πﬁd_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

270 **
__ª°ri˘
 
__íd±r
,

271 
__loˇÀ_t
 
__loc
)

272 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

276 #ifde‡
__USE_EXTERN_INLINES


277 
__BEGIN_NAMESPACE_STD


278 
__exã∫_ölöe
 

279 
	`__NTH
 (
	$©of
 (
__c⁄°
 *
__≈å
))

281  
	`°πod
 (
__≈å
, (**Ë
NULL
);

282 
	}
}

283 
__exã∫_ölöe
 

284 
__NTH
 (
	$©oi
 (
__c⁄°
 *
__≈å
))

286  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

287 
	}
}

288 
__exã∫_ölöe
 

289 
__NTH
 (
	$©ﬁ
 (
__c⁄°
 *
__≈å
))

291  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

292 
	}
}

293 
	g__END_NAMESPACE_STD


295 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


296 
__BEGIN_NAMESPACE_C99


297 
__exãnsi⁄__
 
__exã∫_ölöe
 

298 
__NTH
 (
	$©ﬁl
 (
__c⁄°
 *
__≈å
))

300  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

301 
	}
}

302 
	g__END_NAMESPACE_C99


307 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


311 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

314 
	$a64l
 (
__c⁄°
 *
__s
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

319 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


320 
	~<sys/ty≥s.h
>

327 
	$øndom
 (Ë
__THROW
;

330 
	$§™dom
 (
__£ed
Ë
__THROW
;

336 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

337 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

341 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

344 #ifde‡
__USE_MISC


349 
	søndom_d©a


351 
öt32_t
 *
Âå
;

352 
öt32_t
 *
Ωå
;

353 
öt32_t
 *
°©e
;

354 
ønd_ty≥
;

355 
ønd_deg
;

356 
ønd_£p
;

357 
öt32_t
 *
íd_±r
;

360 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

361 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

363 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

364 
__THROW
 
	`__n⁄nuŒ
 ((2));

366 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

367 
size_t
 
__°©ñí
,

368 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

369 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

371 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

372 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

373 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

378 
__BEGIN_NAMESPACE_STD


380 
	$ønd
 (Ë
__THROW
;

382 
	$§™d
 (
__£ed
Ë
__THROW
;

383 
__END_NAMESPACE_STD


385 #ifde‡
__USE_POSIX


387 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

391 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


395 
	$dønd48
 (Ë
__THROW
;

396 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

399 
	$Ã™d48
 (Ë
__THROW
;

400 
	$ƒ™d48
 (
__xsubi
[3])

401 
__THROW
 
	`__n⁄nuŒ
 ((1));

404 
	$mønd48
 (Ë
__THROW
;

405 
	$jønd48
 (
__xsubi
[3])

406 
__THROW
 
	`__n⁄nuŒ
 ((1));

409 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

410 *
	$£ed48
 (
__£ed16v
[3])

411 
__THROW
 
	`__n⁄nuŒ
 ((1));

412 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

414 #ifde‡
__USE_MISC


418 
	sdønd48_d©a


420 
__x
[3];

421 
__ﬁd_x
[3];

422 
__c
;

423 
__öô
;

424 
__a
;

428 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

429 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$î™d48_r
 (
__xsubi
[3],

431 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

432 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

435 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

436 *
__ª°ri˘
 
__ªsu…
)

437 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

438 
	$ƒ™d48_r
 (
__xsubi
[3],

439 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

444 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

445 *
__ª°ri˘
 
__ªsu…
)

446 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

447 
	$jønd48_r
 (
__xsubi
[3],

448 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

449 *
__ª°ri˘
 
__ªsu…
)

450 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

453 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

454 
__THROW
 
	`__n⁄nuŒ
 ((2));

456 
	$£ed48_r
 (
__£ed16v
[3],

457 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$lc⁄g48_r
 (
__∑øm
[7],

460 
dønd48_d©a
 *
__buf„r
)

461 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

467 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


468 
	#__mÆloc_™d_ˇŒoc_deföed


	)

469 
__BEGIN_NAMESPACE_STD


471 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

473 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

474 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

475 
__END_NAMESPACE_STD


478 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


479 
__BEGIN_NAMESPACE_STD


485 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

486 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

488 
	$‰ì
 (*
__±r
Ë
__THROW
;

489 
__END_NAMESPACE_STD


491 #ifdef 
__USE_MISC


493 
	$c‰ì
 (*
__±r
Ë
__THROW
;

496 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


497 
	~<Æloˇ.h
>

500 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

501 || 
deföed
 
__USE_BSD


503 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

506 #ifde‡
__USE_XOPEN2K


508 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

509 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

512 
__BEGIN_NAMESPACE_STD


514 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

518 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

520 #ifde‡
__USE_GNU


524 #ifde‡
__˝lu•lus


525 "C++" 
	`©_quick_exô
 ((*
__func
) ())

526 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

528 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

531 
__END_NAMESPACE_STD


533 #ifdef 
__USE_MISC


536 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

537 
__THROW
 
	`__n⁄nuŒ
 ((1));

540 
__BEGIN_NAMESPACE_STD


544 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

546 #ifde‡
__USE_GNU


552 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

554 
__END_NAMESPACE_STD


556 #ifde‡
__USE_ISOC99


557 
__BEGIN_NAMESPACE_C99


560 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

561 
__END_NAMESPACE_C99


565 
__BEGIN_NAMESPACE_STD


567 *
	$gëív
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

568 
__END_NAMESPACE_STD


572 *
	$__£cuª_gëív
 (
__c⁄°
 *
__«me
)

573 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

575 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


579 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

582 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


585 
	$£ãnv
 (
__c⁄°
 *
__«me
, __c⁄° *
__vÆue
, 
__ª∂a˚
)

586 
__THROW
 
	`__n⁄nuŒ
 ((2));

589 
	$un£ãnv
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

592 #ifdef 
__USE_MISC


596 
	$˛óªnv
 (Ë
__THROW
;

600 #i‡
deföed
 
__USE_MISC
 \

601 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
)

606 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

609 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 \

610 || 
deföed
 
__USE_XOPEN2K8


619 #i‚de‡
__USE_FILE_OFFSET64


620 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

622 #ifde‡
__REDIRECT


623 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

624 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

626 
	#mk°emp
 
mk°emp64


	)

629 #ifde‡
__USE_LARGEFILE64


630 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

634 #ifde‡
__USE_MISC


641 #i‚de‡
__USE_FILE_OFFSET64


642 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

644 #ifde‡
__REDIRECT


645 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

646 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

648 
	#mk°emps
 
mk°emps64


	)

651 #ifde‡
__USE_LARGEFILE64


652 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

653 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

657 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


663 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

666 #ifde‡
__USE_GNU


673 #i‚de‡
__USE_FILE_OFFSET64


674 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

676 #ifde‡
__REDIRECT


677 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

678 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

680 
	#mko°emp
 
mko°emp64


	)

683 #ifde‡
__USE_LARGEFILE64


684 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

693 #i‚de‡
__USE_FILE_OFFSET64


694 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

695 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

697 #ifde‡
__REDIRECT


698 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

699 
__Êags
), 
mko°emps64
)

700 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

702 
	#mko°emps
 
mko°emps64


	)

705 #ifde‡
__USE_LARGEFILE64


706 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

707 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

712 
__BEGIN_NAMESPACE_STD


717 
	$sy°em
 (
__c⁄°
 *
__comm™d
Ë
__wur
;

718 
__END_NAMESPACE_STD


721 #ifdef 
__USE_GNU


724 *
	$ˇn⁄iˇlize_fûe_«me
 (
__c⁄°
 *
__«me
)

725 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

728 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


734 *
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

735 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

740 #i‚de‡
__COMPAR_FN_T


741 
	#__COMPAR_FN_T


	)

742 (*
	t__com∑r_‚_t
Ë(
	t__c⁄°
 *, __const *);

744 #ifdef 
__USE_GNU


745 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

748 #ifde‡
__USE_GNU


749 (*
	t__com∑r_d_‚_t
Ë(
	t__c⁄°
 *, __const *, *);

752 
__BEGIN_NAMESPACE_STD


755 *
	$b£¨ch
 (
__c⁄°
 *
__key
, __c⁄° *
__ba£
,

756 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

757 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

761 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

762 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

763 #ifde‡
__USE_GNU


764 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

765 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

766 
	`__n⁄nuŒ
 ((1, 4));

771 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

772 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

773 
__END_NAMESPACE_STD


775 #ifde‡
__USE_ISOC99


776 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

777 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

781 
__BEGIN_NAMESPACE_STD


785 
div_t
 
	$div
 (
__numî
, 
__díom
)

786 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

787 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

788 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

789 
__END_NAMESPACE_STD


791 #ifde‡
__USE_ISOC99


792 
__BEGIN_NAMESPACE_C99


793 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

794 
__díom
)

795 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

796 
__END_NAMESPACE_C99


800 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

801 || 
deföed
 
__USE_SVID


808 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

809 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

814 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

815 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

820 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

821 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

824 #ifde‡
__USE_MISC


826 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

827 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

828 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

829 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

830 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

831 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

832 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

833 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

838 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

839 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

840 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

841 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

842 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

843 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

845 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

846 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

847 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

848 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

849 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

850 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

851 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

852 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

857 
__BEGIN_NAMESPACE_STD


860 
	$mbÀn
 (
__c⁄°
 *
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

863 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

864 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

867 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
 
__wur
;

871 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

872 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

874 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

875 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

876 
__THROW
;

877 
__END_NAMESPACE_STD


880 #ifde‡
__USE_SVID


885 
	$Ωm©ch
 (
__c⁄°
 *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

889 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


896 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

897 *
__c⁄°
 *
__ª°ri˘
 
__tokís
,

898 **
__ª°ri˘
 
__vÆuï
)

899 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

903 #ifde‡
__USE_XOPEN


905 
	$£tkey
 (
__c⁄°
 *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

911 #ifde‡
__USE_XOPEN2KXSI


913 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

916 #ifde‡
__USE_XOPEN


921 
	$gø¡±
 (
__fd
Ë
__THROW
;

925 
	$u∆ock±
 (
__fd
Ë
__THROW
;

930 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

933 #ifde‡
__USE_GNU


937 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

938 
__THROW
 
	`__n⁄nuŒ
 ((2));

941 
	`gë±
 ();

944 #ifde‡
__USE_BSD


948 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

949 
__THROW
 
	`__n⁄nuŒ
 ((1));

954 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


955 
	~<bôs/°dlib.h
>

957 #ifde‡
__LDBL_COMPAT


958 
	~<bôs/°dlib-ldbl.h
>

962 #unde‡
__√ed_mÆloc_™d_ˇŒoc


964 
__END_DECLS


	@/usr/include/string.h

24 #i‚def 
_STRING_H


25 
	#_STRING_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

37 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

38 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

42 
__BEGIN_NAMESPACE_STD


44 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
,

45 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

46 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

49 *
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

50 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

51 
__END_NAMESPACE_STD


56 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


57 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

58 
__c
, 
size_t
 
__n
)

59 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

63 
__BEGIN_NAMESPACE_STD


65 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

68 
	$memcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

69 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

72 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


75 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

76 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 
__c⁄°
 *
	`memchr
 (__c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

78 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

80 #ifde‡
__OPTIMIZE__


81 
__exã∫_Æways_ölöe
 *

82 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


84  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

87 
__exã∫_Æways_ölöe
 
__c⁄°
 *

88 
	`memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


90  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

93 
	}
}

95 *
	$memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

96 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

98 
__END_NAMESPACE_STD


100 #ifde‡
__USE_GNU


103 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


104 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

105 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

106 "C++" 
__c⁄°
 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

107 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

109 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

110 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

114 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


115 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

116 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

117 "C++" 
__c⁄°
 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

118 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

120 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

121 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

126 
__BEGIN_NAMESPACE_STD


128 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

129 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

131 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

132 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

133 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

136 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

137 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

139 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

140 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

143 
	$°rcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

144 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

146 
	$°∫cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

147 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

150 
	$°rcﬁl
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

153 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

154 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

155 
__THROW
 
	`__n⁄nuŒ
 ((2));

156 
__END_NAMESPACE_STD


158 #ifde‡
__USE_XOPEN2K8


162 
	~<xloˇÀ.h
>

165 
	$°rcﬁl_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

166 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

168 
size_t
 
	$°rx‰m_l
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

169 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

172 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 \

173 || 
deföed
 
__USE_XOPEN2K8


175 *
	$°rdup
 (
__c⁄°
 *
__s
)

176 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

182 #i‡
deföed
 
__USE_XOPEN2K8


183 *
	$°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

184 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

187 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


189 
	#°rdu∑
(
s
) \

190 (
__exãnsi⁄__
 \

192 
__c⁄°
 *
__ﬁd
 = (
s
); \

193 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

194 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

195 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

196 
	}
}))

	)

199 
	#°∫du∑
(
s
, 
n
) \

200 (
__exãnsi⁄__
 \

202 
__c⁄°
 *
__ﬁd
 = (
s
); \

203 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

204 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

205 
__√w
[
__Àn
] = '\0'; \

206 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

207 }))

	)

210 
	g__BEGIN_NAMESPACE_STD


212 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


215 *
°rchr
 (*
__s
, 
__c
)

216 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

217 
__c⁄°
 *
°rchr
 (__c⁄° *
__s
, 
__c
)

218 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

220 #ifde‡
__OPTIMIZE__


221 
__exã∫_Æways_ölöe
 *

222 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


224  
__buûtö_°rchr
 (
__s
, 
__c
);

227 
__exã∫_Æways_ölöe
 
__c⁄°
 *

228 
°rchr
 (
__c⁄°
 *
__s
, 
__c
Ë
	g__THROW


230  
__buûtö_°rchr
 (
__s
, 
__c
);

235 *
	$°rchr
 (
__c⁄°
 *
__s
, 
__c
)

236 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

239 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


242 *
	`°ºchr
 (*
__s
, 
__c
)

243 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

244 
__c⁄°
 *
	`°ºchr
 (__c⁄° *
__s
, 
__c
)

245 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

247 #ifde‡
__OPTIMIZE__


248 
__exã∫_Æways_ölöe
 *

249 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


251  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

254 
__exã∫_Æways_ölöe
 
__c⁄°
 *

255 
	`°ºchr
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


257  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

260 
	}
}

262 *
	$°ºchr
 (
__c⁄°
 *
__s
, 
__c
)

263 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

265 
__END_NAMESPACE_STD


267 #ifde‡
__USE_GNU


270 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


271 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

272 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

273 "C++" 
__c⁄°
 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

274 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

276 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

277 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

281 
__BEGIN_NAMESPACE_STD


284 
size_t
 
	$°rc•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

285 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

288 
size_t
 
	$°r•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

289 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

291 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


294 *
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
)

295 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

296 
__c⁄°
 *
	`°Ωbrk
 (__c⁄° *
__s
, __c⁄° *
__ac˚±
)

297 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

299 #ifde‡
__OPTIMIZE__


300 
__exã∫_Æways_ölöe
 *

301 
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
Ë
__THROW


303  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

306 
__exã∫_Æways_ölöe
 
__c⁄°
 *

307 
	`°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
Ë
__THROW


309  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

312 
	}
}

314 *
	$°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

318 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


321 *
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

322 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

323 
__c⁄°
 *
	`°r°r
 (__c⁄° *
__hay°ack
,

324 
__c⁄°
 *
__√edÀ
)

325 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

327 #ifde‡
__OPTIMIZE__


328 
__exã∫_Æways_ölöe
 *

329 
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
Ë
__THROW


331  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

334 
__exã∫_Æways_ölöe
 
__c⁄°
 *

335 
	`°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
Ë
__THROW


337  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

340 
	}
}

342 *
	$°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

343 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

348 *
	$°πok
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
)

349 
__THROW
 
	`__n⁄nuŒ
 ((2));

350 
__END_NAMESPACE_STD


354 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

355 
__c⁄°
 *
__ª°ri˘
 
__dñim
,

356 **
__ª°ri˘
 
__ßve_±r
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

358 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


359 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
,

360 **
__ª°ri˘
 
__ßve_±r
)

361 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

364 #ifde‡
__USE_GNU


366 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


367 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

368 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

369 "C++" 
__c⁄°
 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
,

370 
__c⁄°
 *
__√edÀ
)

371 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

374 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

378 #ifde‡
__USE_GNU


382 *
	$memmem
 (
__c⁄°
 *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

383 
__c⁄°
 *
__√edÀ
, 
size_t
 
__√edÀÀn
)

384 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

388 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

389 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

391 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

392 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

393 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

397 
__BEGIN_NAMESPACE_STD


399 
size_t
 
	$°æí
 (
__c⁄°
 *
__s
)

400 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

401 
__END_NAMESPACE_STD


403 #ifdef 
__USE_XOPEN2K8


406 
size_t
 
	$°∫Àn
 (
__c⁄°
 *
__°rög
, 
size_t
 
__maxÀn
)

407 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

411 
__BEGIN_NAMESPACE_STD


413 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

414 
__END_NAMESPACE_STD


415 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


423 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


426 #ifde‡
__REDIRECT_NTH


427 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

428 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

429 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

431 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

433 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

438 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

439 
__THROW
 
	`__n⁄nuŒ
 ((2));

443 #ifde‡
__USE_XOPEN2K8


445 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

451 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

453 #ifde‡
__USE_BSD


455 
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__n
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

462 
	$bcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

463 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

466 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


469 *
	`ödex
 (*
__s
, 
__c
)

470 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

471 
__c⁄°
 *
	`ödex
 (__c⁄° *
__s
, 
__c
)

472 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

474 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


475 
__exã∫_Æways_ölöe
 *

476 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


478  
	`__buûtö_ödex
 (
__s
, 
__c
);

481 
__exã∫_Æways_ölöe
 
__c⁄°
 *

482 
	`ödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


484  
	`__buûtö_ödex
 (
__s
, 
__c
);

487 
	}
}

489 *
	$ödex
 (
__c⁄°
 *
__s
, 
__c
)

490 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


497 *
	`rödex
 (*
__s
, 
__c
)

498 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

499 
__c⁄°
 *
	`rödex
 (__c⁄° *
__s
, 
__c
)

500 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

502 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


503 
__exã∫_Æways_ölöe
 *

504 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


506  
	`__buûtö_rödex
 (
__s
, 
__c
);

509 
__exã∫_Æways_ölöe
 
__c⁄°
 *

510 
	`rödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


512  
	`__buûtö_rödex
 (
__s
, 
__c
);

515 
	}
}

517 *
	$rödex
 (
__c⁄°
 *
__s
, 
__c
)

518 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

523 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

527 #ifdef 
__USE_GNU


528 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 #ifde‡
__GNUC__


530 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

531 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

536 
	$°rˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

537 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

540 
	$°∫ˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

541 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

544 #ifdef 
__USE_GNU


547 
	$°rˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

548 
__loˇÀ_t
 
__loc
)

549 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

551 
	$°∫ˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

552 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

553 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

556 #ifdef 
__USE_BSD


559 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

560 
__c⁄°
 *
__ª°ri˘
 
__dñim
)

561 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

564 #ifdef 
__USE_XOPEN2K8


566 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

569 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

571 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

572 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

576 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

577 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

578 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

579 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

580 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

581 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 #ifdef 
__USE_GNU


586 
	$°rvîscmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

587 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

590 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

593 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

595 #i‚de‡
ba£«me


600 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


601 "C++" *
	$ba£«me
 (*
__fûíame
)

602 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

603 "C++" 
__c⁄°
 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
)

604 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

606 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

612 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

613 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

614 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


634 
	~<bôs/°rög.h
>

637 
	~<bôs/°rög2.h
>

640 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


642 
	~<bôs/°rög3.h
>

646 
__END_DECLS


	@/usr/include/sys/file.h

19 #i‚def 
_SYS_FILE_H


20 
	#_SYS_FILE_H
 1

	)

22 
	~<„©uªs.h
>

24 #i‚def 
_FCNTL_H


25 
	~<f˙é.h
>

28 
	g__BEGIN_DECLS


33 #i‚de‡
L_SET


34 
	#L_SET
 0

	)

35 
	#L_INCR
 1

	)

36 
	#L_XTND
 2

	)

41 
	#LOCK_SH
 1

	)

42 
	#LOCK_EX
 2

	)

43 
	#LOCK_UN
 8

	)

46 
	#LOCK_NB
 4

	)

51 
	$Êock
 (
__fd
, 
__›î©i⁄
Ë
__THROW
;

54 
__END_DECLS


	@/usr/include/sys/ioctl.h

19 #i‚def 
_SYS_IOCTL_H


20 
	#_SYS_IOCTL_H
 1

	)

22 
	~<„©uªs.h
>

24 
	g__BEGIN_DECLS


27 
	~<bôs/io˘ls.h
>

30 
	~<bôs/io˘l-ty≥s.h
>

37 
	~<sys/âydeÁu…s.h
>

42 
	$io˘l
 (
__fd
, 
__ªque°
, ...Ë
__THROW
;

44 
__END_DECLS


	@/usr/include/sys/kd.h

19 #i‚de‡
_SYS_KD_H


20 
	#_SYS_KD_H
 1

	)

23 #i‚de‡
_LINUX_TYPES_H


24 
	#_LINUX_TYPES_H
 1

	)

25 
	#__undef_LINUX_TYPES_H


	)

28 
	~<löux/kd.h
>

30 #ifde‡
__undef_LINUX_TYPES_H


31 #unde‡
_LINUX_TYPES_H


32 #unde‡
__undef_LINUX_TYPES_H


	@/usr/include/sys/param.h

20 #i‚de‡
_SYS_PARAM_H


21 
	#_SYS_PARAM_H
 1

	)

23 #i‚de‡
ARG_MAX


24 
	#__undef_ARG_MAX


	)

27 
	~<limôs.h
>

28 
	~<löux/limôs.h
>

29 
	~<löux/∑øm.h
>

32 #ifde‡
__undef_ARG_MAX


33 #unde‡
ARG_MAX


34 #unde‡
__undef_ARG_MAX


39 
	#NBBY
 
CHAR_BIT


	)

40 #i‚def 
NGROUPS


41 
	#NGROUPS
 
NGROUPS_MAX


	)

43 
	#MAXSYMLINKS
 20

	)

44 
	#CANBSIZ
 
MAX_CANON


	)

45 
	#MAXPATHLEN
 
PATH_MAX


	)

49 
	#NOFILE
 256

	)

50 
	#NCARGS
 131072

	)

53 
	~<sys/ty≥s.h
>

56 
	#£tbô
(
a
,
i
Ë(◊)[(i)/
NBBY
] |1<<((i)%NBBY))

	)

57 
	#˛rbô
(
a
,
i
Ë(◊)[(i)/
NBBY
] &~(1<<((i)%NBBY)))

	)

58 
	#is£t
(
a
,
i
Ë(◊)[(i)/
NBBY
] & (1<<((i)%NBBY)))

	)

59 
	#is˛r
(
a
,
i
Ë((◊)[(i)/
NBBY
] & (1<<((i)%NBBY))Ë=0)

	)

62 #i‚de‡
howm™y


63 
	#howm™y
(
x
, 
y
Ë(((xË+ ((yË- 1)Ë/ (y))

	)

65 #ifde‡
__GNUC__


66 
	#roundup
(
x
, 
y
Ë(
	`__buûtö_c⁄°™t_p
 (yË&& 
	`powîof2
 (y) \

67 ? (((
x
Ë+ (
y
) - 1) & ~((y) - 1)) \

68 : ((((
x
Ë+ ((
y
Ë- 1)Ë/ (y)Ë* (y)))

	)

70 
	#roundup
(
x
, 
y
Ë((((xË+ ((yË- 1)Ë/ (y)Ë* (y))

	)

72 
	#powîof2
(
x
Ë((((xË- 1Ë& (x)Ë=0)

	)

75 
	#MIN
(
a
,
b
Ë((◊)<(b))?◊):(b))

	)

76 
	#MAX
(
a
,
b
Ë((◊)>(b))?◊):(b))

	)

80 
	#DEV_BSIZE
 512

	)

	@/usr/include/sys/select.h

22 #i‚de‡
_SYS_SELECT_H


23 
	#_SYS_SELECT_H
 1

	)

25 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

31 
	~<bôs/£À˘.h
>

34 
	~<bôs/sig£t.h
>

36 #i‚de‡
__sig£t_t_deföed


37 
	#__sig£t_t_deföed


	)

38 
__sig£t_t
 
	tsig£t_t
;

42 
	#__√ed_time_t


	)

43 
	#__√ed_time•ec


	)

44 
	~<time.h
>

45 
	#__√ed_timevÆ


	)

46 
	~<bôs/time.h
>

48 #i‚de‡
__su£c⁄ds_t_deföed


49 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

50 
	#__su£c⁄ds_t_deföed


	)

55 
	t__fd_mask
;

58 #unde‡
__NFDBITS


60 
	#__NFDBITS
 (8 * (Ë (
__fd_mask
))

	)

61 
	#__FD_ELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

62 
	#__FD_MASK
(
d
Ë((
__fd_mask
Ë1 << ((dË% 
__NFDBITS
))

	)

69 #ifde‡
__USE_XOPEN


70 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

71 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

73 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

74 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

76 } 
	tfd_£t
;

79 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

81 #ifde‡
__USE_MISC


83 
__fd_mask
 
	tfd_mask
;

86 
	#NFDBITS
 
__NFDBITS


	)

91 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

92 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

93 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

94 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

97 
__BEGIN_DECLS


107 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

108 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

109 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

110 
timevÆ
 *
__ª°ri˘
 
__timeout
);

112 #ifde‡
__USE_XOPEN2K


119 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

120 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

121 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

122 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

123 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

128 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__GNUC__


129 
	~<bôs/£À˘2.h
>

132 
	g__END_DECLS


	@/usr/include/sys/stat.h

24 #i‚def 
_SYS_STAT_H


25 
	#_SYS_STAT_H
 1

	)

27 
	~<„©uªs.h
>

29 
	~<bôs/ty≥s.h
>

31 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K
 || deföed 
__USE_MISC
 \

32 || 
deföed
 
	g__USE_ATFILE


33 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_time_t


	)

36 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ATFILE


37 
	#__√ed_time•ec


	)

39 
	~<time.h
>

42 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


45 #i‚de‡
__dev_t_deföed


46 
__dev_t
 
	tdev_t
;

47 
	#__dev_t_deföed


	)

50 #i‚de‡
__gid_t_deföed


51 
__gid_t
 
	tgid_t
;

52 
	#__gid_t_deföed


	)

55 #i‚de‡
__öo_t_deföed


56 #i‚de‡
__USE_FILE_OFFSET64


57 
__öo_t
 
	töo_t
;

59 
__öo64_t
 
	töo_t
;

61 
	#__öo_t_deföed


	)

64 #i‚de‡
__mode_t_deföed


65 
__mode_t
 
	tmode_t
;

66 
	#__mode_t_deföed


	)

69 #i‚de‡
__∆ök_t_deföed


70 
__∆ök_t
 
	t∆ök_t
;

71 
	#__∆ök_t_deföed


	)

74 #i‚de‡
__off_t_deföed


75 #i‚de‡
__USE_FILE_OFFSET64


76 
__off_t
 
	toff_t
;

78 
__off64_t
 
	toff_t
;

80 
	#__off_t_deföed


	)

83 #i‚de‡
__uid_t_deföed


84 
__uid_t
 
	tuid_t
;

85 
	#__uid_t_deföed


	)

89 #ifde‡
__USE_UNIX98


90 #i‚de‡
__blk˙t_t_deföed


91 #i‚de‡
__USE_FILE_OFFSET64


92 
__blk˙t_t
 
	tblk˙t_t
;

94 
__blk˙t64_t
 
	tblk˙t_t
;

96 
	#__blk˙t_t_deföed


	)

99 #i‚de‡
__blksize_t_deföed


100 
__blksize_t
 
	tblksize_t
;

101 
	#__blksize_t_deföed


	)

105 
	g__BEGIN_DECLS


107 
	~<bôs/°©.h
>

109 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


110 
	#S_IFMT
 
__S_IFMT


	)

111 
	#S_IFDIR
 
__S_IFDIR


	)

112 
	#S_IFCHR
 
__S_IFCHR


	)

113 
	#S_IFBLK
 
__S_IFBLK


	)

114 
	#S_IFREG
 
__S_IFREG


	)

115 #ifde‡
__S_IFIFO


116 
	#S_IFIFO
 
__S_IFIFO


	)

118 #ifde‡
__S_IFLNK


119 
	#S_IFLNK
 
__S_IFLNK


	)

121 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_UNIX98
) \

122 && 
deföed
 
	g__S_IFSOCK


123 
	#S_IFSOCK
 
__S_IFSOCK


	)

129 
	#__S_ISTYPE
(
mode
, 
mask
Ë(((modeË& 
__S_IFMT
Ë=(mask))

	)

131 
	#S_ISDIR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFDIR
)

	)

132 
	#S_ISCHR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFCHR
)

	)

133 
	#S_ISBLK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFBLK
)

	)

134 
	#S_ISREG
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFREG
)

	)

135 #ifde‡
__S_IFIFO


136 
	#S_ISFIFO
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFIFO
)

	)

138 #ifde‡
__S_IFLNK


139 
	#S_ISLNK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFLNK
)

	)

142 #i‡
deföed
 
__USE_BSD
 && !deföed 
__S_IFLNK


143 
	#S_ISLNK
(
mode
Ë0

	)

146 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K
) \

147 && 
deföed
 
	g__S_IFSOCK


148 
	#S_ISSOCK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFSOCK
)

	)

149 #ñi‡
deföed
 
__USE_XOPEN2K


150 
	#S_ISSOCK
(
mode
Ë0

	)

157 #ifdef 
__USE_POSIX199309


158 
	#S_TYPEISMQ
(
buf
Ë
	`__S_TYPEISMQ
(buf)

	)

159 
	#S_TYPEISSEM
(
buf
Ë
	`__S_TYPEISSEM
(buf)

	)

160 
	#S_TYPEISSHM
(
buf
Ë
	`__S_TYPEISSHM
(buf)

	)

166 
	#S_ISUID
 
__S_ISUID


	)

167 
	#S_ISGID
 
__S_ISGID


	)

169 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


171 
	#S_ISVTX
 
__S_ISVTX


	)

174 
	#S_IRUSR
 
__S_IREAD


	)

175 
	#S_IWUSR
 
__S_IWRITE


	)

176 
	#S_IXUSR
 
__S_IEXEC


	)

178 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

180 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_BSD


181 
	#S_IREAD
 
S_IRUSR


	)

182 
	#S_IWRITE
 
S_IWUSR


	)

183 
	#S_IEXEC
 
S_IXUSR


	)

186 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

187 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

188 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

190 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

192 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

193 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

194 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

196 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

199 #ifdef 
__USE_BSD


201 
	#ACCESSPERMS
 (
S_IRWXU
|
S_IRWXG
|
S_IRWXO
Ë

	)

202 
	#ALLPERMS
 (
S_ISUID
|
S_ISGID
|
S_ISVTX
|
S_IRWXU
|
S_IRWXG
|
S_IRWXO
)

	)

203 
	#DEFFILEMODE
 (
S_IRUSR
|
S_IWUSR
|
S_IRGRP
|
S_IWGRP
|
S_IROTH
|
S_IWOTH
)

	)

205 
	#S_BLKSIZE
 512

	)

209 #i‚de‡
__USE_FILE_OFFSET64


211 
	$°©
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

212 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

216 
	$f°©
 (
__fd
, 
°©
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

218 #ifde‡
__REDIRECT_NTH


219 
	`__REDIRECT_NTH
 (
°©
, (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

220 
°©
 *
__ª°ri˘
 
__buf
), 
°©64
)

221 
	`__n⁄nuŒ
 ((1, 2));

222 
	`__REDIRECT_NTH
 (
f°©
, (
__fd
, 
°©
 *
__buf
), 
f°©64
)

223 
	`__n⁄nuŒ
 ((2));

225 
	#°©
 
°©64


	)

226 
	#f°©
 
f°©64


	)

229 #ifde‡
__USE_LARGEFILE64


230 
	$°©64
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

231 
°©64
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

232 
	$f°©64
 (
__fd
, 
°©64
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

235 #ifde‡
__USE_ATFILE


239 #i‚de‡
__USE_FILE_OFFSET64


240 
	$f°©©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

241 
°©
 *
__ª°ri˘
 
__buf
, 
__Êag
)

242 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

244 #ifde‡
__REDIRECT_NTH


245 
	`__REDIRECT_NTH
 (
f°©©
, (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

246 
°©
 *
__ª°ri˘
 
__buf
,

247 
__Êag
),

248 
f°©©64
Ë
	`__n⁄nuŒ
 ((2, 3));

250 
	#f°©©
 
f°©©64


	)

254 #ifde‡
__USE_LARGEFILE64


255 
	$f°©©64
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

256 
°©64
 *
__ª°ri˘
 
__buf
, 
__Êag
)

257 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

261 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


262 #i‚de‡
__USE_FILE_OFFSET64


265 
	$l°©
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

266 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

268 #ifde‡
__REDIRECT_NTH


269 
	`__REDIRECT_NTH
 (
l°©
,

270 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

271 
°©
 *
__ª°ri˘
 
__buf
), 
l°©64
)

272 
	`__n⁄nuŒ
 ((1, 2));

274 
	#l°©
 
l°©64


	)

277 #ifde‡
__USE_LARGEFILE64


278 
	$l°©64
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

279 
°©64
 *
__ª°ri˘
 
__buf
)

280 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

286 
	$chmod
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
)

287 
__THROW
 
	`__n⁄nuŒ
 ((1));

289 #ifde‡
__USE_BSD


293 
	$lchmod
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
)

294 
__THROW
 
	`__n⁄nuŒ
 ((1));

298 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


299 
	$fchmod
 (
__fd
, 
__mode_t
 
__mode
Ë
__THROW
;

302 #ifde‡
__USE_ATFILE


305 
	$fchmod©
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
,

306 
__Êag
)

307 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

314 
__mode_t
 
	$umask
 (
__mode_t
 
__mask
Ë
__THROW
;

316 #ifdef 
__USE_GNU


319 
__mode_t
 
	$gëumask
 (Ë
__THROW
;

323 
	$mkdú
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

324 
__THROW
 
	`__n⁄nuŒ
 ((1));

326 #ifde‡
__USE_ATFILE


330 
	$mkdú©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

331 
__THROW
 
	`__n⁄nuŒ
 ((2));

337 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


338 
	$mknod
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
)

339 
__THROW
 
	`__n⁄nuŒ
 ((1));

341 #ifde‡
__USE_ATFILE


345 
	$mknod©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

346 
__dev_t
 
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

352 
	$mkfifo
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

353 
__THROW
 
	`__n⁄nuŒ
 ((1));

355 #ifde‡
__USE_ATFILE


359 
	$mkfifﬂt
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

360 
__THROW
 
	`__n⁄nuŒ
 ((2));

363 #ifde‡
__USE_ATFILE


366 
	$utimíßt
 (
__fd
, 
__c⁄°
 *
__∑th
,

367 
__c⁄°
 
time•ec
 
__times
[2],

368 
__Êags
)

369 
__THROW
 
	`__n⁄nuŒ
 ((2));

372 #ifde‡
__USE_XOPEN2K8


374 
	$futimís
 (
__fd
, 
__c⁄°
 
time•ec
 
__times
[2]Ë
__THROW
;

392 #i‚de‡
_STAT_VER


393 
	#_STAT_VER
 0

	)

395 #i‚de‡
_MKNOD_VER


396 
	#_MKNOD_VER
 0

	)

400 #i‚de‡
__USE_FILE_OFFSET64


401 
	$__fx°©
 (
__vî
, 
__fûdes
, 
°©
 *
__°©_buf
)

402 
__THROW
 
	`__n⁄nuŒ
 ((3));

403 
	$__x°©
 (
__vî
, 
__c⁄°
 *
__fûíame
,

404 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

405 
	$__lx°©
 (
__vî
, 
__c⁄°
 *
__fûíame
,

406 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

407 
	$__fx°©©
 (
__vî
, 
__fûdes
, 
__c⁄°
 *
__fûíame
,

408 
°©
 *
__°©_buf
, 
__Êag
)

409 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

411 #ifde‡
__REDIRECT_NTH


412 
	`__REDIRECT_NTH
 (
__fx°©
, (
__vî
, 
__fûdes
,

413 
°©
 *
__°©_buf
), 
__fx°©64
)

414 
	`__n⁄nuŒ
 ((3));

415 
	`__REDIRECT_NTH
 (
__x°©
, (
__vî
, 
__c⁄°
 *
__fûíame
,

416 
°©
 *
__°©_buf
), 
__x°©64
)

417 
	`__n⁄nuŒ
 ((2, 3));

418 
	`__REDIRECT_NTH
 (
__lx°©
, (
__vî
, 
__c⁄°
 *
__fûíame
,

419 
°©
 *
__°©_buf
), 
__lx°©64
)

420 
	`__n⁄nuŒ
 ((2, 3));

421 
	`__REDIRECT_NTH
 (
__fx°©©
, (
__vî
, 
__fûdes
,

422 
__c⁄°
 *
__fûíame
,

423 
°©
 *
__°©_buf
, 
__Êag
),

424 
__fx°©©64
Ë
	`__n⁄nuŒ
 ((3, 4));

427 
	#__fx°©
 
__fx°©64


	)

428 
	#__x°©
 
__x°©64


	)

429 
	#__lx°©
 
__lx°©64


	)

433 #ifde‡
__USE_LARGEFILE64


434 
	$__fx°©64
 (
__vî
, 
__fûdes
, 
°©64
 *
__°©_buf
)

435 
__THROW
 
	`__n⁄nuŒ
 ((3));

436 
	$__x°©64
 (
__vî
, 
__c⁄°
 *
__fûíame
,

437 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

438 
	$__lx°©64
 (
__vî
, 
__c⁄°
 *
__fûíame
,

439 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

440 
	$__fx°©©64
 (
__vî
, 
__fûdes
, 
__c⁄°
 *
__fûíame
,

441 
°©64
 *
__°©_buf
, 
__Êag
)

442 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

444 
	$__xmknod
 (
__vî
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

445 
__dev_t
 *
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

447 
	$__xmknod©
 (
__vî
, 
__fd
, 
__c⁄°
 *
__∑th
,

448 
__mode_t
 
__mode
, 
__dev_t
 *
__dev
)

449 
__THROW
 
	`__n⁄nuŒ
 ((3, 5));

451 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES


454 
__exã∫_ölöe
 

455 
	`__NTH
 (
	$°©
 (
__c⁄°
 *
__∑th
, 
°©
 *
__°©buf
))

457  
	`__x°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

458 
	}
}

460 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


461 
__exã∫_ölöe
 

462 
__NTH
 (
	$l°©
 (
__c⁄°
 *
__∑th
, 
°©
 *
__°©buf
))

464  
	`__lx°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

465 
	}
}

468 
__exã∫_ölöe
 

469 
__NTH
 (
	$f°©
 (
__fd
, 
°©
 *
__°©buf
))

471  
	`__fx°©
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

472 
	}
}

474 #ifde‡
__USE_ATFILE


475 
__exã∫_ölöe
 

476 
__NTH
 (
	$f°©©
 (
__fd
, 
__c⁄°
 *
__fûíame
, 
°©
 *
__°©buf
,

477 
__Êag
))

479  
	`__fx°©©
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

480 
	}
}

483 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD


484 
__exã∫_ölöe
 

485 
__NTH
 (
	$mknod
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
))

487  
	`__xmknod
 (
_MKNOD_VER
, 
__∑th
, 
__mode
, &
__dev
);

488 
	}
}

491 #ifde‡
__USE_ATFILE


492 
__exã∫_ölöe
 

493 
__NTH
 (
	$mknod©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

494 
__dev_t
 
__dev
))

496  
	`__xmknod©
 (
_MKNOD_VER
, 
__fd
, 
__∑th
, 
__mode
, &
__dev
);

497 
	}
}

500 #i‡
deföed
 
__USE_LARGEFILE64
 \

501 && (! 
deföed
 
	g__USE_FILE_OFFSET64
 \

502 || (
deföed
 
	g__REDIRECT_NTH
 && deföed 
	g__OPTIMIZE__
))

503 
__exã∫_ölöe
 

504 
__NTH
 (
	$°©64
 (
__c⁄°
 *
__∑th
, 
°©64
 *
__°©buf
))

506  
	`__x°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

507 
	}
}

509 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


510 
__exã∫_ölöe
 

511 
__NTH
 (
	$l°©64
 (
__c⁄°
 *
__∑th
, 
°©64
 *
__°©buf
))

513  
	`__lx°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

514 
	}
}

517 
__exã∫_ölöe
 

518 
__NTH
 (
	$f°©64
 (
__fd
, 
°©64
 *
__°©buf
))

520  
	`__fx°©64
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

521 
	}
}

523 #ifde‡
__USE_ATFILE


524 
__exã∫_ölöe
 

525 
__NTH
 (
	$f°©©64
 (
__fd
, 
__c⁄°
 *
__fûíame
, 
°©64
 *
__°©buf
,

526 
__Êag
))

528  
	`__fx°©©64
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

529 
	}
}

536 
	g__END_DECLS


	@/usr/include/sys/termios.h

1 #i‚de‡
_SYS_TERMIOS_H


2 
	#_SYS_TERMIOS_H


	)

3 
	~<ãrmios.h
>

	@/usr/include/sys/time.h

20 #i‚de‡
_SYS_TIME_H


21 
	#_SYS_TIME_H
 1

	)

23 
	~<„©uªs.h
>

25 
	~<bôs/ty≥s.h
>

26 
	#__√ed_time_t


	)

27 
	~<time.h
>

28 
	#__√ed_timevÆ


	)

29 
	~<bôs/time.h
>

31 
	~<sys/£À˘.h
>

33 #i‚de‡
__su£c⁄ds_t_deföed


34 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

35 
	#__su£c⁄ds_t_deföed


	)

39 
	g__BEGIN_DECLS


41 #ifde‡
__USE_GNU


43 
	#TIMEVAL_TO_TIMESPEC
(
tv
, 
ts
) { \

44 (
ts
)->
tv_£c
 = (
tv
)->tv_sec; \

45 (
ts
)->
tv_n£c
 = (
tv
)->
tv_u£c
 * 1000; \

46 }

	)

47 
	#TIMESPEC_TO_TIMEVAL
(
tv
, 
ts
) { \

48 (
tv
)->
tv_£c
 = (
ts
)->tv_sec; \

49 (
tv
)->
tv_u£c
 = (
ts
)->
tv_n£c
 / 1000; \

50 }

	)

54 #ifde‡
__USE_BSD


57 
	stimez⁄e


59 
	mtz_möuãswe°
;

60 
	mtz_d°time
;

63 
timez⁄e
 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

65 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

73 
	$gëtimeofday
 (
timevÆ
 *
__ª°ri˘
 
__tv
,

74 
__timez⁄e_±r_t
 
__tz
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

76 #ifde‡
__USE_BSD


79 
	$£âimeofday
 (
__c⁄°
 
timevÆ
 *
__tv
,

80 
__c⁄°
 
timez⁄e
 *
__tz
)

81 
__THROW
 
	`__n⁄nuŒ
 ((1));

87 
	$adjtime
 (
__c⁄°
 
timevÆ
 *
__dñè
,

88 
timevÆ
 *
__ﬁddñè
Ë
__THROW
;

93 
	e__ôimî_which


96 
ITIMER_REAL
 = 0,

97 
	#ITIMER_REAL
 
ITIMER_REAL


	)

99 
ITIMER_VIRTUAL
 = 1,

100 
	#ITIMER_VIRTUAL
 
ITIMER_VIRTUAL


	)

103 
ITIMER_PROF
 = 2

104 
	#ITIMER_PROF
 
ITIMER_PROF


	)

109 
	sôimîvÆ


112 
timevÆ
 
ô_öãrvÆ
;

114 
timevÆ
 
ô_vÆue
;

117 #i‡
deföed
 
__USE_GNU
 && !deföed 
__˝lu•lus


120 
__ôimî_which
 
	t__ôimî_which_t
;

122 
	t__ôimî_which_t
;

127 
	$gëôimî
 (
__ôimî_which_t
 
__which
,

128 
ôimîvÆ
 *
__vÆue
Ë
__THROW
;

133 
	$£tôimî
 (
__ôimî_which_t
 
__which
,

134 
__c⁄°
 
ôimîvÆ
 *
__ª°ri˘
 
__√w
,

135 
ôimîvÆ
 *
__ª°ri˘
 
__ﬁd
Ë
__THROW
;

140 
	$utimes
 (
__c⁄°
 *
__fûe
, __c⁄° 
timevÆ
 
__tvp
[2])

141 
__THROW
 
	`__n⁄nuŒ
 ((1));

143 #ifde‡
__USE_BSD


145 
	$lutimes
 (
__c⁄°
 *
__fûe
, __c⁄° 
timevÆ
 
__tvp
[2])

146 
__THROW
 
	`__n⁄nuŒ
 ((1));

149 
	$futimes
 (
__fd
, 
__c⁄°
 
timevÆ
 
__tvp
[2]Ë
__THROW
;

152 #ifde‡
__USE_GNU


156 
	$futimeßt
 (
__fd
, 
__c⁄°
 *
__fûe
,

157 
__c⁄°
 
timevÆ
 
__tvp
[2]Ë
__THROW
;

161 #ifde‡
__USE_BSD


164 
	#timîis£t
(
tvp
Ë(—vp)->
tv_£c
 || (tvp)->
tv_u£c
)

	)

165 
	#timî˛ór
(
tvp
Ë(—vp)->
tv_£c
 = (tvp)->
tv_u£c
 = 0)

	)

166 
	#timîcmp
(
a
, 
b
, 
CMP
) \

167 (((
a
)->
tv_£c
 =(
b
)->tv_sec) ? \

168 ((
a
)->
tv_u£c
 
	`CMP
 (
b
)->tv_usec) : \

169 ((
a
)->
tv_£c
 
	`CMP
 (
b
)->tv_£c))

	)

170 
	#timîadd
(
a
, 
b
, 
ªsu…
) \

172 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯+ (
b
)->tv_sec; \

173 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯+ (
b
)->tv_usec; \

174 i‡((
ªsu…
)->
tv_u£c
 >= 1000000) \

176 ++(
ªsu…
)->
tv_£c
; \

177 (
ªsu…
)->
tv_u£c
 -= 1000000; \

179 
	}
} 0)

	)

180 
	#timîsub
(
a
, 
b
, 
ªsu…
) \

182 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯- (
b
)->tv_sec; \

183 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯- (
b
)->tv_usec; \

184 i‡((
ªsu…
)->
tv_u£c
 < 0) { \

185 --(
ªsu…
)->
tv_£c
; \

186 (
ªsu…
)->
tv_u£c
 += 1000000; \

188 } 0)

	)

191 
	g__END_DECLS


	@/usr/include/sys/times.h

23 #i‚def 
_SYS_TIMES_H


24 
	#_SYS_TIMES_H
 1

	)

26 
	~<„©uªs.h
>

28 
	#__√ed_˛ock_t


	)

29 
	~<time.h
>

32 
__BEGIN_DECLS


35 
	stms


37 
˛ock_t
 
	mtms_utime
;

38 
˛ock_t
 
	mtms_°ime
;

40 
˛ock_t
 
	mtms_cutime
;

41 
˛ock_t
 
	mtms_c°ime
;

49 
˛ock_t
 
	$times
 (
tms
 *
__buf„r
Ë
__THROW
;

51 
__END_DECLS


	@/usr/include/sys/types.h

23 #i‚def 
_SYS_TYPES_H


24 
	#_SYS_TYPES_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ty≥s.h
>

32 #ifdef 
__USE_BSD


33 #i‚de‡
__u_ch¨_deföed


34 
__u_ch¨
 
	tu_ch¨
;

35 
__u_sh‹t
 
	tu_sh‹t
;

36 
__u_öt
 
	tu_öt
;

37 
__u_l⁄g
 
	tu_l⁄g
;

38 
__quad_t
 
	tquad_t
;

39 
__u_quad_t
 
	tu_quad_t
;

40 
__fsid_t
 
	tfsid_t
;

41 
	#__u_ch¨_deföed


	)

45 
__loff_t
 
	tloff_t
;

47 #i‚de‡
__öo_t_deföed


48 #i‚de‡
__USE_FILE_OFFSET64


49 
__öo_t
 
	töo_t
;

51 
__öo64_t
 
	töo_t
;

53 
	#__öo_t_deföed


	)

55 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


56 
__öo64_t
 
	töo64_t
;

57 
	#__öo64_t_deföed


	)

60 #i‚de‡
__dev_t_deföed


61 
__dev_t
 
	tdev_t
;

62 
	#__dev_t_deföed


	)

65 #i‚de‡
__gid_t_deföed


66 
__gid_t
 
	tgid_t
;

67 
	#__gid_t_deföed


	)

70 #i‚de‡
__mode_t_deföed


71 
__mode_t
 
	tmode_t
;

72 
	#__mode_t_deföed


	)

75 #i‚de‡
__∆ök_t_deföed


76 
__∆ök_t
 
	t∆ök_t
;

77 
	#__∆ök_t_deföed


	)

80 #i‚de‡
__uid_t_deföed


81 
__uid_t
 
	tuid_t
;

82 
	#__uid_t_deföed


	)

85 #i‚de‡
__off_t_deföed


86 #i‚de‡
__USE_FILE_OFFSET64


87 
__off_t
 
	toff_t
;

89 
__off64_t
 
	toff_t
;

91 
	#__off_t_deföed


	)

93 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


94 
__off64_t
 
	toff64_t
;

95 
	#__off64_t_deföed


	)

98 #i‚de‡
__pid_t_deföed


99 
__pid_t
 
	tpid_t
;

100 
	#__pid_t_deföed


	)

103 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
) \

104 && !
deföed
 
__id_t_deföed


105 
__id_t
 
	tid_t
;

106 
	#__id_t_deföed


	)

109 #i‚de‡
__ssize_t_deföed


110 
__ssize_t
 
	tssize_t
;

111 
	#__ssize_t_deföed


	)

114 #ifdef 
__USE_BSD


115 #i‚de‡
__daddr_t_deföed


116 
__daddr_t
 
	tdaddr_t
;

117 
__ˇddr_t
 
	tˇddr_t
;

118 
	#__daddr_t_deföed


	)

122 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


123 
__key_t
 
	tkey_t
;

124 
	#__key_t_deföed


	)

127 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


128 
	#__√ed_˛ock_t


	)

130 
	#__√ed_time_t


	)

131 
	#__√ed_timî_t


	)

132 
	#__√ed_˛ockid_t


	)

133 
	~<time.h
>

135 #ifde‡
__USE_XOPEN


136 #i‚de‡
__u£c⁄ds_t_deföed


137 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

138 
	#__u£c⁄ds_t_deföed


	)

140 #i‚de‡
__su£c⁄ds_t_deföed


141 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

142 
	#__su£c⁄ds_t_deföed


	)

146 
	#__√ed_size_t


	)

147 
	~<°ddef.h
>

149 #ifde‡
__USE_MISC


151 
	tul⁄g
;

152 
	tush‹t
;

153 
	tuöt
;

158 #i‡!
__GNUC_PREREQ
 (2, 7)

161 #i‚de‡
__öt8_t_deföed


162 
	#__öt8_t_deföed


	)

163 
	töt8_t
;

164 
	töt16_t
;

165 
	töt32_t
;

166 #i‡
__WORDSIZE
 == 64

167 
	töt64_t
;

168 #ñi‡
__GLIBC_HAVE_LONG_LONG


169 
__exãnsi⁄__
 
	töt64_t
;

174 
	tu_öt8_t
;

175 
	tu_öt16_t
;

176 
	tu_öt32_t
;

177 #i‡
__WORDSIZE
 == 64

178 
	tu_öt64_t
;

179 #ñi‡
__GLIBC_HAVE_LONG_LONG


180 
__exãnsi⁄__
 
	tu_öt64_t
;

183 
	tªgi°î_t
;

188 
	#__ötN_t
(
N
, 
MODE
) \

189 ##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

190 
	t__u_ötN_t
(
	tN
, 
	tMODE
) \

191 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

193 #i‚de‡
	t__öt8_t_deföed


194 
	t__öt8_t_deföed


	)

195 
	t__ötN_t
 (8, 
	t__QI__
);

196 
__ötN_t
 (16, 
__HI__
);

197 
__ötN_t
 (32, 
__SI__
);

198 
__ötN_t
 (64, 
__DI__
);

201 
__u_ötN_t
 (8, 
__QI__
);

202 
__u_ötN_t
 (16, 
__HI__
);

203 
__u_ötN_t
 (32, 
__SI__
);

204 
__u_ötN_t
 (64, 
__DI__
);

206 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

212 
	#__BIT_TYPES_DEFINED__
 1

	)

215 #ifdef 
__USE_BSD


217 
	~<ídün.h
>

220 
	~<sys/£À˘.h
>

223 
	~<sys/sysma¸os.h
>

227 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
) \

228 && !
deföed
 
__blksize_t_deföed


229 
__blksize_t
 
	tblksize_t
;

230 
	#__blksize_t_deföed


	)

234 #i‚de‡
__USE_FILE_OFFSET64


235 #i‚de‡
__blk˙t_t_deföed


236 
__blk˙t_t
 
	tblk˙t_t
;

237 
	#__blk˙t_t_deföed


	)

239 #i‚de‡
__fsblk˙t_t_deföed


240 
__fsblk˙t_t
 
	tfsblk˙t_t
;

241 
	#__fsblk˙t_t_deföed


	)

243 #i‚de‡
__fsfû˙t_t_deföed


244 
__fsfû˙t_t
 
	tfsfû˙t_t
;

245 
	#__fsfû˙t_t_deföed


	)

248 #i‚de‡
__blk˙t_t_deföed


249 
__blk˙t64_t
 
	tblk˙t_t
;

250 
	#__blk˙t_t_deföed


	)

252 #i‚de‡
__fsblk˙t_t_deföed


253 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

254 
	#__fsblk˙t_t_deföed


	)

256 #i‚de‡
__fsfû˙t_t_deföed


257 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

258 
	#__fsfû˙t_t_deföed


	)

262 #ifde‡
__USE_LARGEFILE64


263 
__blk˙t64_t
 
	tblk˙t64_t
;

264 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

265 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

270 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


271 
	~<bôs/±hªadty≥s.h
>

274 
	g__END_DECLS


	@/usr/include/sys/wait.h

24 #i‚def 
_SYS_WAIT_H


25 
	#_SYS_WAIT_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	~<sig«l.h
>

32 
	~<sys/ªsour˚.h
>

35 #i‡!
deföed
 
_STDLIB_H
 || (!deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K8
)

38 
	~<bôs/waôÊags.h
>

40 #ifdef 
__USE_BSD


45 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


46 
	#__WAIT_INT
(
°©us
) \

47 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

48 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

50 
	#__WAIT_INT
(
°©us
Ë(*(
__c⁄°
 *Ë&(°©us))

	)

58 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


59 
	#__WAIT_STATUS
 *

	)

60 
	#__WAIT_STATUS_DEFN
 *

	)

65 
waô
 *
	m__u±r
;

66 *
	m__ùå
;

67 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

68 
	#__WAIT_STATUS_DEFN
 *

	)

73 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

74 
	#__WAIT_STATUS
 *

	)

75 
	#__WAIT_STATUS_DEFN
 *

	)

80 
	~<bôs/waô°©us.h
>

82 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

83 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

84 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

85 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

88 #ifde‡
__WIFCONTINUED


89 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

93 #ifdef 
__USE_BSD


94 
	#WCOREFLAG
 
__WCOREFLAG


	)

95 
	#WCOREDUMP
(
°©us
Ë
	`__WCOREDUMP
 (
	`__WAIT_INT
 (°©us))

	)

96 
	#W_EXITCODE
(
ªt
, 
sig
Ë
	`__W_EXITCODE
 (ªt, sig)

	)

97 
	#W_STOPCODE
(
sig
Ë
	`__W_STOPCODE
 (sig)

	)

101 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


104 
	mP_ALL
,

105 
	mP_PID
,

106 
	mP_PGID


107 } 
	tidty≥_t
;

116 
__pid_t
 
waô
 (
__WAIT_STATUS
 
__°©_loc
);

118 #ifdef 
__USE_BSD


120 
	#WAIT_ANY
 (-1Ë

	)

121 
	#WAIT_MYPGRP
 0

	)

139 
__pid_t
 
waôpid
 (__pid_à
__pid
, *
__°©_loc
, 
__›ti⁄s
);

141 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


142 
	#__√ed_sigöfo_t


	)

143 
	~<bôs/sigöfo.h
>

155 
waôid
 (
idty≥_t
 
__idty≥
, 
__id_t
 
__id
, 
sigöfo_t
 *
__öf›
,

156 
__›ti⁄s
);

159 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


162 
	grußge
;

169 
__pid_t
 
	$waô3
 (
__WAIT_STATUS
 
__°©_loc
, 
__›ti⁄s
,

170 
rußge
 * 
__ußge
Ë
__THROWNL
;

173 #ifde‡
__USE_BSD


175 
__pid_t
 
	$waô4
 (
__pid_t
 
__pid
, 
__WAIT_STATUS
 
__°©_loc
, 
__›ti⁄s
,

176 
rußge
 *
__ußge
Ë
__THROWNL
;

180 
__END_DECLS


	@/usr/include/termcap.h

36 #i‚de‡
NCURSES_TERMCAP_H_ö˛


37 
	#NCURSES_TERMCAP_H_ö˛
 1

	)

39 #unde‡
NCURSES_VERSION


40 
	#NCURSES_VERSION
 "5.9"

	)

42 
	~<ncur£s_dŒ.h
>

44 #ifde‡
__˝lu•lus


49 
	~<sys/ty≥s.h
>

51 #unde‡
NCURSES_CONST


52 
	#NCURSES_CONST


	)

54 #unde‡
NCURSES_OSPEED


55 
	#NCURSES_OSPEED
 

	)

57 
NCURSES_EXPORT_VAR
(Ë
PC
;

58 
NCURSES_EXPORT_VAR
(*Ë
UP
;

59 
NCURSES_EXPORT_VAR
(*Ë
BC
;

60 
NCURSES_EXPORT_VAR
(
NCURSES_OSPEED
Ë
o•ìd
;

62 #i‡!
deföed
(
NCURSES_TERM_H_ö˛
)

63 
NCURSES_EXPORT
(*Ë
tgë°r
 (
NCURSES_CONST
 *, **);

64 
NCURSES_EXPORT
(*Ë
tgŸo
 (const *, , );

65 
NCURSES_EXPORT
(Ë
tgëít
 (*, const *);

66 
NCURSES_EXPORT
(Ë
tgëÊag
 (
NCURSES_CONST
 *);

67 
NCURSES_EXPORT
(Ë
tgënum
 (
NCURSES_CONST
 *);

68 
NCURSES_EXPORT
(Ë
çuts
 (const *, , (*)());

71 #ifde‡
__˝lu•lus


	@/usr/include/termios.h

23 #i‚def 
_TERMIOS_H


24 
	#_TERMIOS_H
 1

	)

26 
	~<„©uªs.h
>

27 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


29 
	~<bôs/ty≥s.h
>

30 #i‚de‡
__pid_t_deföed


31 
__pid_t
 
	tpid_t
;

32 
	#__pid_t_deföed


	)

36 
	g__BEGIN_DECLS


40 
	~<bôs/ãrmios.h
>

42 #ifde‡
__USE_BSD


45 
	#CCEQ
(
vÆ
, 
c
Ë((cË=(vÆË&& (vÆË!
_POSIX_VDISABLE
)

	)

49 
•ìd_t
 
	$cfgëo•ìd
 (
__c⁄°
 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

52 
•ìd_t
 
	$cfgëi•ìd
 (
__c⁄°
 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

55 
	$cf£to•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

58 
	$cf£ti•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

60 #ifdef 
__USE_BSD


62 
	$cf£t•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

67 
	$tcgë©å
 (
__fd
, 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

71 
	$tc£èâr
 (
__fd
, 
__›ti⁄Æ_a˘i⁄s
,

72 
__c⁄°
 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

75 #ifdef 
__USE_BSD


77 
	$cfmakîaw
 (
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

81 
	$tc£ndbªak
 (
__fd
, 
__duøti⁄
Ë
__THROW
;

87 
	`tcdøö
 (
__fd
);

91 
	$tcÊush
 (
__fd
, 
__queue_£À˘‹
Ë
__THROW
;

95 
	$tcÊow
 (
__fd
, 
__a˘i⁄
Ë
__THROW
;

98 #ifde‡
__USE_UNIX98


100 
__pid_t
 
	$tcgësid
 (
__fd
Ë
__THROW
;

104 #ifde‡
__USE_BSD


105 
	~<sys/âydeÁu…s.h
>

108 
__END_DECLS


	@/usr/include/time.h

23 #i‚def 
_TIME_H


25 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

26 ! 
deföed
 
	g__√ed_time•ec
)

27 
	#_TIME_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 #ifdef 
_TIME_H


36 
	#__√ed_size_t


	)

37 
	#__√ed_NULL


	)

38 
	~<°ddef.h
>

42 
	~<bôs/time.h
>

45 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


46 #i‚de‡
CLK_TCK


47 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

53 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

54 
	#__˛ock_t_deföed
 1

	)

56 
	~<bôs/ty≥s.h
>

58 
__BEGIN_NAMESPACE_STD


60 
__˛ock_t
 
	t˛ock_t
;

61 
	g__END_NAMESPACE_STD


62 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


63 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

67 #unde‡
__√ed_˛ock_t


69 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

70 
	#__time_t_deföed
 1

	)

72 
	~<bôs/ty≥s.h
>

74 
__BEGIN_NAMESPACE_STD


76 
__time_t
 
	ttime_t
;

77 
__END_NAMESPACE_STD


78 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


79 
	$__USING_NAMESPACE_STD
(
time_t
)

83 #unde‡
__√ed_time_t


85 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

86 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

87 
	#__˛ockid_t_deföed
 1

	)

89 
	~<bôs/ty≥s.h
>

92 
__˛ockid_t
 
	t˛ockid_t
;

95 #unde‡
__˛ockid_time_t


97 #i‡!
deföed
 
__timî_t_deföed
 && \

98 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

99 
	#__timî_t_deföed
 1

	)

101 
	~<bôs/ty≥s.h
>

104 
__timî_t
 
	ttimî_t
;

107 #unde‡
__√ed_timî_t


110 #i‡!
deföed
 
__time•ec_deföed
 && \

111 ((
deföed
 
_TIME_H
 && \

112 (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
)) || \

113 
deföed
 
__√ed_time•ec
)

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 
__c⁄°
 *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 
__c⁄°
 *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 
__BEGIN_NAMESPACE_STD


183 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

186 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

189 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

190 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

193 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

199 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

200 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

201 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

202 
__END_NAMESPACE_STD


204 #ifde‡
__USE_XOPEN


207 *
	$°Ωtime
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

208 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

209 
__THROW
;

212 #ifde‡
__USE_XOPEN2K8


215 
	~<xloˇÀ.h
>

217 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

218 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

219 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

220 
__loˇÀ_t
 
__loc
Ë
__THROW
;

223 #ifde‡
__USE_GNU


224 *
	$°Ωtime_l
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

225 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

230 
__BEGIN_NAMESPACE_STD


233 
tm
 *
	$gmtime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

237 
tm
 *
	$loˇ…ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

238 
__END_NAMESPACE_STD


240 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


243 
tm
 *
	$gmtime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

244 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

248 
tm
 *
	$loˇ…ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

249 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

252 
__BEGIN_NAMESPACE_STD


255 *
	$as˘ime
 (
__c⁄°
 
tm
 *
__ç
Ë
__THROW
;

258 *
	$˘ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

259 
__END_NAMESPACE_STD


261 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


266 *
	$as˘ime_r
 (
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

267 *
__ª°ri˘
 
__buf
Ë
__THROW
;

270 *
	$˘ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

271 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
__tz«me
[2];

277 
__daylight
;

278 
__timez⁄e
;

281 #ifdef 
__USE_POSIX


283 *
tz«me
[2];

287 
	$tz£t
 (Ë
__THROW
;

290 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


291 
daylight
;

292 
timez⁄e
;

295 #ifde‡
__USE_SVID


298 
	$°ime
 (
__c⁄°
 
time_t
 *
__whí
Ë
__THROW
;

304 
	#__i¶óp
(
yór
) \

305 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

308 #ifde‡
__USE_MISC


313 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

316 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

319 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

323 #ifde‡
__USE_POSIX199309


328 
	`«no¶ìp
 (
__c⁄°
 
time•ec
 *
__ªque°ed_time
,

329 
time•ec
 *
__ªmaöög
);

333 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

336 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

339 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, 
__c⁄°
 
time•ec
 *
__ç
)

340 
__THROW
;

342 #ifde‡
__USE_XOPEN2K


347 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

348 
__c⁄°
 
time•ec
 *
__ªq
,

349 
time•ec
 *
__ªm
);

352 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

357 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

358 
sigevít
 *
__ª°ri˘
 
__evp
,

359 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

362 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

365 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

366 
__c⁄°
 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

367 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

370 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

371 
__THROW
;

374 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

378 #ifde‡
__USE_XOPEN_EXTENDED


390 
gëd©e_îr
;

399 
tm
 *
	`gëd©e
 (
__c⁄°
 *
__°rög
);

402 #ifde‡
__USE_GNU


413 
	`gëd©e_r
 (
__c⁄°
 *
__ª°ri˘
 
__°rög
,

414 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

417 
__END_DECLS


	@/usr/include/unistd.h

23 #i‚def 
_UNISTD_H


24 
	#_UNISTD_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


33 #ifde‡
__USE_XOPEN2K8


35 
	#_POSIX_VERSION
 200809L

	)

36 #ñi‡
deföed
 
__USE_XOPEN2K


38 
	#_POSIX_VERSION
 200112L

	)

39 #ñi‡
deföed
 
__USE_POSIX199506


41 
	#_POSIX_VERSION
 199506L

	)

42 #ñi‡
deföed
 
__USE_POSIX199309


44 
	#_POSIX_VERSION
 199309L

	)

47 
	#_POSIX_VERSION
 199009L

	)

53 #ifde‡
__USE_XOPEN2K8


54 
	#__POSIX2_THIS_VERSION
 200809L

	)

56 #ñi‡
deföed
 
__USE_XOPEN2K


58 
	#__POSIX2_THIS_VERSION
 200112L

	)

59 #ñi‡
deföed
 
__USE_POSIX199506


61 
	#__POSIX2_THIS_VERSION
 199506L

	)

64 
	#__POSIX2_THIS_VERSION
 199209L

	)

68 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

72 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

76 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

80 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

84 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

87 #ifde‡
__USE_XOPEN2K8


88 
	#_XOPEN_VERSION
 700

	)

89 #ñi‡
deföed
 
__USE_XOPEN2K


90 
	#_XOPEN_VERSION
 600

	)

91 #ñi‡
deföed
 
__USE_UNIX98


92 
	#_XOPEN_VERSION
 500

	)

94 
	#_XOPEN_VERSION
 4

	)

98 
	#_XOPEN_XCU_VERSION
 4

	)

101 
	#_XOPEN_XPG2
 1

	)

102 
	#_XOPEN_XPG3
 1

	)

103 
	#_XOPEN_XPG4
 1

	)

106 
	#_XOPEN_UNIX
 1

	)

109 
	#_XOPEN_CRYPT
 1

	)

113 
	#_XOPEN_ENH_I18N
 1

	)

116 
	#_XOPEN_LEGACY
 1

	)

203 
	~<bôs/posix_›t.h
>

206 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


207 
	~<bôs/ívú⁄míts.h
>

211 
	#STDIN_FILENO
 0

	)

212 
	#STDOUT_FILENO
 1

	)

213 
	#STDERR_FILENO
 2

	)

218 
	~<bôs/ty≥s.h
>

220 #i‚def 
__ssize_t_deföed


221 
__ssize_t
 
	tssize_t
;

222 
	#__ssize_t_deföed


	)

225 
	#__√ed_size_t


	)

226 
	#__√ed_NULL


	)

227 
	~<°ddef.h
>

229 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


232 #i‚de‡
__gid_t_deföed


233 
__gid_t
 
	tgid_t
;

234 
	#__gid_t_deföed


	)

237 #i‚de‡
__uid_t_deföed


238 
__uid_t
 
	tuid_t
;

239 
	#__uid_t_deföed


	)

242 #i‚de‡
__off_t_deföed


243 #i‚de‡
__USE_FILE_OFFSET64


244 
__off_t
 
	toff_t
;

246 
__off64_t
 
	toff_t
;

248 
	#__off_t_deföed


	)

250 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


251 
__off64_t
 
	toff64_t
;

252 
	#__off64_t_deföed


	)

255 #i‚de‡
__u£c⁄ds_t_deföed


256 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

257 
	#__u£c⁄ds_t_deföed


	)

260 #i‚de‡
__pid_t_deföed


261 
__pid_t
 
	tpid_t
;

262 
	#__pid_t_deföed


	)

266 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


267 #i‚de‡
__öçå_t_deföed


268 
__öçå_t
 
	töçå_t
;

269 
	#__öçå_t_deföed


	)

273 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


274 #i‚de‡
__sockÀn_t_deföed


275 
__sockÀn_t
 
	tsockÀn_t
;

276 
	#__sockÀn_t_deföed


	)

282 
	#R_OK
 4

	)

283 
	#W_OK
 2

	)

284 
	#X_OK
 1

	)

285 
	#F_OK
 0

	)

288 
	$ac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

290 #ifde‡
__USE_GNU


293 
	$euidac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

294 
__THROW
 
	`__n⁄nuŒ
 ((1));

297 
	$óc˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

298 
__THROW
 
	`__n⁄nuŒ
 ((1));

301 #ifde‡
__USE_ATFILE


305 
	$Ác˚sßt
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__ty≥
, 
__Êag
)

306 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

311 #i‚def 
_STDIO_H


312 
	#SEEK_SET
 0

	)

313 
	#SEEK_CUR
 1

	)

314 
	#SEEK_END
 2

	)

315 #ifde‡
__USE_GNU


316 
	#SEEK_DATA
 3

	)

317 
	#SEEK_HOLE
 4

	)

321 #i‡
deföed
 
__USE_BSD
 && !deföed 
L_SET


323 
	#L_SET
 
SEEK_SET


	)

324 
	#L_INCR
 
SEEK_CUR


	)

325 
	#L_XTND
 
SEEK_END


	)

334 #i‚de‡
__USE_FILE_OFFSET64


335 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

337 #ifde‡
__REDIRECT_NTH


338 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

339 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

340 
l£ek64
);

342 
	#l£ek
 
l£ek64


	)

345 #ifde‡
__USE_LARGEFILE64


346 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

347 
__THROW
;

354 
	`˛o£
 (
__fd
);

361 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

367 
ssize_t
 
	$wrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
Ë
__wur
;

369 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


370 #i‚de‡
__USE_FILE_OFFSET64


377 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

378 
__off_t
 
__off£t
Ë
__wur
;

385 
ssize_t
 
	$pwrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

386 
__off_t
 
__off£t
Ë
__wur
;

388 #ifde‡
__REDIRECT


389 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

390 
__off64_t
 
__off£t
),

391 
¥ód64
Ë
__wur
;

392 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, 
__c⁄°
 *
__buf
,

393 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

394 
pwrôe64
Ë
__wur
;

396 
	#¥ód
 
¥ód64


	)

397 
	#pwrôe
 
pwrôe64


	)

401 #ifde‡
__USE_LARGEFILE64


405 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

406 
__off64_t
 
__off£t
Ë
__wur
;

409 
ssize_t
 
	$pwrôe64
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

410 
__off64_t
 
__off£t
Ë
__wur
;

418 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

420 #ifde‡
__USE_GNU


423 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

433 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

445 
	`¶ìp
 (
__£c⁄ds
);

447 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

448 || 
deföed
 
__USE_BSD


453 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

454 
__THROW
;

461 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

470 
	`∑u£
 ();

474 
	$chown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

475 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

477 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


479 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

484 
	$lchown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

485 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

489 #ifde‡
__USE_ATFILE


492 
	$fchow«t
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
,

493 
__gid_t
 
__group
, 
__Êag
)

494 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

498 
	$chdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

500 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


502 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

512 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

514 #ifdef 
__USE_GNU


518 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

521 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

522 || 
deföed
 
__USE_BSD


526 *
	$gëwd
 (*
__buf
)

527 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

532 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

535 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

537 #ifde‡
__USE_GNU


540 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

544 **
__ívú⁄
;

545 #ifde‡
__USE_GNU


546 **
ívú⁄
;

552 
	$execve
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[],

553 *
__c⁄°
 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

555 #ifde‡
__USE_XOPEN2K8


558 
	$„xecve
 (
__fd
, *
__c⁄°
 
__¨gv
[], *__c⁄° 
__ívp
[])

559 
__THROW
 
	`__n⁄nuŒ
 ((2));

564 
	$execv
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[])

565 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

569 
	$exe˛e
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

574 
	$exe˛
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

575 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

579 
	$execvp
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[])

580 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

585 
	$exe˛p
 (
__c⁄°
 *
__fûe
, __c⁄° *
__¨g
, ...)

586 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

588 #ifde‡
__USE_GNU


591 
	$execv≥
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[],

592 *
__c⁄°
 
__ívp
[])

593 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

597 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


599 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

604 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

610 
	~<bôs/c⁄‚ame.h
>

613 
	$∑thc⁄f
 (
__c⁄°
 *
__∑th
, 
__«me
)

614 
__THROW
 
	`__n⁄nuŒ
 ((1));

617 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

620 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

622 #ifdef 
__USE_POSIX2


624 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

629 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

632 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

636 #i‚de‡
__FAVOR_BSD


637 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

639 #ifde‡
__REDIRECT_NTH


640 
__pid_t
 
	`__REDIRECT_NTH
 (
gëpgΩ
, (__pid_à
__pid
), 
__gëpgid
);

642 
	#gëpgΩ
 
__gëpgid


	)

647 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

648 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


649 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

656 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

658 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


669 #i‚de‡
__FAVOR_BSD


673 
	$£çgΩ
 (Ë
__THROW
;

678 #ifde‡
__REDIRECT_NTH


679 
	`__REDIRECT_NTH
 (
£çgΩ
, (
__pid_t
 
__pid
, __pid_à
__pgΩ
), 
£çgid
);

681 
	#£çgΩ
 
£çgid


	)

690 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

692 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


694 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

698 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

701 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

704 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

707 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

712 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

714 #ifdef 
__USE_GNU


716 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

723 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
;

725 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


728 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
;

731 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


733 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
;

740 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
;

742 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


745 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
;

748 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


750 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
;

753 #ifde‡
__USE_GNU


756 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

757 
__THROW
;

761 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

762 
__THROW
;

766 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

767 
__THROW
;

771 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

772 
__THROW
;

779 
__pid_t
 
	$f‹k
 (Ë
__THROWNL
;

781 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

782 || 
deföed
 
__USE_BSD


787 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

793 *
	$ây«me
 (
__fd
Ë
__THROW
;

797 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

798 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

802 
	$ißây
 (
__fd
Ë
__THROW
;

804 #i‡
deföed
 
__USE_BSD
 \

805 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

808 
	$ây¶Ÿ
 (Ë
__THROW
;

813 
	$lök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

814 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

816 #ifde‡
__USE_ATFILE


819 
	$lök©
 (
__‰omfd
, 
__c⁄°
 *
__‰om
, 
__tofd
,

820 
__c⁄°
 *
__to
, 
__Êags
)

821 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

824 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


826 
	$symlök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

827 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

832 
ssize_t
 
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

833 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

834 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

837 #ifde‡
__USE_ATFILE


839 
	$symlök©
 (
__c⁄°
 *
__‰om
, 
__tofd
,

840 
__c⁄°
 *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

843 
ssize_t
 
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

844 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

845 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

849 
	$u∆ök
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

851 #ifde‡
__USE_ATFILE


853 
	$u∆ök©
 (
__fd
, 
__c⁄°
 *
__«me
, 
__Êag
)

854 
__THROW
 
	`__n⁄nuŒ
 ((2));

858 
	$rmdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

862 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

865 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

872 *
	`gëlogö
 ();

873 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


880 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

883 #ifdef 
__USE_BSD


885 
	$£éogö
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

889 #ifdef 
__USE_POSIX2


893 
	#__√ed_gë›t


	)

894 
	~<gë›t.h
>

898 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


902 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

906 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

909 
	$£tho°«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

910 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

914 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

920 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

921 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

922 
	$£tdomaö«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

923 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

929 
	$vh™gup
 (Ë
__THROW
;

932 
	$ªvoke
 (
__c⁄°
 *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

940 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

941 
size_t
 
__off£t
, 
__sˇÀ
)

942 
__THROW
 
	`__n⁄nuŒ
 ((1));

948 
	$ac˘
 (
__c⁄°
 *
__«me
Ë
__THROW
;

952 *
	$gëu£rshñl
 (Ë
__THROW
;

953 
	$ídu£rshñl
 (Ë
__THROW
;

954 
	$£tu£rshñl
 (Ë
__THROW
;

960 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

964 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

967 
	$chroŸ
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

971 *
	$gë∑ss
 (
__c⁄°
 *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

975 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


980 
	`fsync
 (
__fd
);

984 #ifde‡
__USE_GNU


987 
	$syncfs
 (
__fd
Ë
__THROW
;

991 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


994 
	`gëho°id
 ();

997 
	$sync
 (Ë
__THROW
;

1000 #i‡
deföed
 
__USE_BSD
 || !deföed 
__USE_XOPEN2K


1003 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

1008 
	$gëdèbÀsize
 (Ë
__THROW
;

1014 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


1017 #i‚de‡
__USE_FILE_OFFSET64


1018 
	$åunˇã
 (
__c⁄°
 *
__fûe
, 
__off_t
 
__Àngth
)

1019 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1021 #ifde‡
__REDIRECT_NTH


1022 
	`__REDIRECT_NTH
 (
åunˇã
,

1023 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
),

1024 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1026 
	#åunˇã
 
åunˇã64


	)

1029 #ifde‡
__USE_LARGEFILE64


1030 
	$åunˇã64
 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
)

1031 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1036 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1039 #i‚de‡
__USE_FILE_OFFSET64


1040 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1042 #ifde‡
__REDIRECT_NTH


1043 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1044 
·runˇã64
Ë
__wur
;

1046 
	#·runˇã
 
·runˇã64


	)

1049 #ifde‡
__USE_LARGEFILE64


1050 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1056 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1057 || 
deföed
 
__USE_MISC


1061 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1067 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1071 #ifde‡
__USE_MISC


1082 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1087 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1099 
	#F_ULOCK
 0

	)

1100 
	#F_LOCK
 1

	)

1101 
	#F_TLOCK
 2

	)

1102 
	#F_TEST
 3

	)

1104 #i‚de‡
__USE_FILE_OFFSET64


1105 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1107 #ifde‡
__REDIRECT


1108 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1109 
lockf64
Ë
__wur
;

1111 
	#lockf
 
lockf64


	)

1114 #ifde‡
__USE_LARGEFILE64


1115 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1120 #ifde‡
__USE_GNU


1125 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1126 (
__exãnsi⁄__
 \

1127 ({ 
__ªsu…
; \

1128 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1129 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1130 
__ªsu…
; 
	}
}))

	)

1133 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1136 
fd©async
 (
__fûdes
);

1142 #ifdef 
__USE_XOPEN


1144 *
	$¸y±
 (
__c⁄°
 *
__key
, __c⁄° *
__ß…
)

1145 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1149 
	$í¸y±
 (*
__block
, 
__edÊag
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1156 
	$swab
 (
__c⁄°
 *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1157 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1163 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


1165 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1170 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


1171 
	~<bôs/uni°d.h
>

1174 
__END_DECLS


	@/usr/include/alloca.h

19 #i‚def 
_ALLOCA_H


20 
	#_ALLOCA_H
 1

	)

22 
	~<„©uªs.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

27 
	g__BEGIN_DECLS


30 #unde‡
Æloˇ


33 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

35 #ifdef 
__GNUC__


36 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

39 
__END_DECLS


	@/usr/include/bits/confname.h

21 #i‚de‡
_UNISTD_H


28 
	m_PC_LINK_MAX
,

29 
	#_PC_LINK_MAX
 
_PC_LINK_MAX


	)

30 
	m_PC_MAX_CANON
,

31 
	#_PC_MAX_CANON
 
_PC_MAX_CANON


	)

32 
	m_PC_MAX_INPUT
,

33 
	#_PC_MAX_INPUT
 
_PC_MAX_INPUT


	)

34 
	m_PC_NAME_MAX
,

35 
	#_PC_NAME_MAX
 
_PC_NAME_MAX


	)

36 
	m_PC_PATH_MAX
,

37 
	#_PC_PATH_MAX
 
_PC_PATH_MAX


	)

38 
	m_PC_PIPE_BUF
,

39 
	#_PC_PIPE_BUF
 
_PC_PIPE_BUF


	)

40 
	m_PC_CHOWN_RESTRICTED
,

41 
	#_PC_CHOWN_RESTRICTED
 
_PC_CHOWN_RESTRICTED


	)

42 
	m_PC_NO_TRUNC
,

43 
	#_PC_NO_TRUNC
 
_PC_NO_TRUNC


	)

44 
	m_PC_VDISABLE
,

45 
	#_PC_VDISABLE
 
_PC_VDISABLE


	)

46 
	m_PC_SYNC_IO
,

47 
	#_PC_SYNC_IO
 
_PC_SYNC_IO


	)

48 
	m_PC_ASYNC_IO
,

49 
	#_PC_ASYNC_IO
 
_PC_ASYNC_IO


	)

50 
	m_PC_PRIO_IO
,

51 
	#_PC_PRIO_IO
 
_PC_PRIO_IO


	)

52 
	m_PC_SOCK_MAXBUF
,

53 
	#_PC_SOCK_MAXBUF
 
_PC_SOCK_MAXBUF


	)

54 
	m_PC_FILESIZEBITS
,

55 
	#_PC_FILESIZEBITS
 
_PC_FILESIZEBITS


	)

56 
	m_PC_REC_INCR_XFER_SIZE
,

57 
	#_PC_REC_INCR_XFER_SIZE
 
_PC_REC_INCR_XFER_SIZE


	)

58 
	m_PC_REC_MAX_XFER_SIZE
,

59 
	#_PC_REC_MAX_XFER_SIZE
 
_PC_REC_MAX_XFER_SIZE


	)

60 
	m_PC_REC_MIN_XFER_SIZE
,

61 
	#_PC_REC_MIN_XFER_SIZE
 
_PC_REC_MIN_XFER_SIZE


	)

62 
	m_PC_REC_XFER_ALIGN
,

63 
	#_PC_REC_XFER_ALIGN
 
_PC_REC_XFER_ALIGN


	)

64 
	m_PC_ALLOC_SIZE_MIN
,

65 
	#_PC_ALLOC_SIZE_MIN
 
_PC_ALLOC_SIZE_MIN


	)

66 
	m_PC_SYMLINK_MAX
,

67 
	#_PC_SYMLINK_MAX
 
_PC_SYMLINK_MAX


	)

68 
	m_PC_2_SYMLINKS


69 
	#_PC_2_SYMLINKS
 
_PC_2_SYMLINKS


	)

75 
	m_SC_ARG_MAX
,

76 
	#_SC_ARG_MAX
 
_SC_ARG_MAX


	)

77 
	m_SC_CHILD_MAX
,

78 
	#_SC_CHILD_MAX
 
_SC_CHILD_MAX


	)

79 
	m_SC_CLK_TCK
,

80 
	#_SC_CLK_TCK
 
_SC_CLK_TCK


	)

81 
	m_SC_NGROUPS_MAX
,

82 
	#_SC_NGROUPS_MAX
 
_SC_NGROUPS_MAX


	)

83 
	m_SC_OPEN_MAX
,

84 
	#_SC_OPEN_MAX
 
_SC_OPEN_MAX


	)

85 
	m_SC_STREAM_MAX
,

86 
	#_SC_STREAM_MAX
 
_SC_STREAM_MAX


	)

87 
	m_SC_TZNAME_MAX
,

88 
	#_SC_TZNAME_MAX
 
_SC_TZNAME_MAX


	)

89 
	m_SC_JOB_CONTROL
,

90 
	#_SC_JOB_CONTROL
 
_SC_JOB_CONTROL


	)

91 
	m_SC_SAVED_IDS
,

92 
	#_SC_SAVED_IDS
 
_SC_SAVED_IDS


	)

93 
	m_SC_REALTIME_SIGNALS
,

94 
	#_SC_REALTIME_SIGNALS
 
_SC_REALTIME_SIGNALS


	)

95 
	m_SC_PRIORITY_SCHEDULING
,

96 
	#_SC_PRIORITY_SCHEDULING
 
_SC_PRIORITY_SCHEDULING


	)

97 
	m_SC_TIMERS
,

98 
	#_SC_TIMERS
 
_SC_TIMERS


	)

99 
	m_SC_ASYNCHRONOUS_IO
,

100 
	#_SC_ASYNCHRONOUS_IO
 
_SC_ASYNCHRONOUS_IO


	)

101 
	m_SC_PRIORITIZED_IO
,

102 
	#_SC_PRIORITIZED_IO
 
_SC_PRIORITIZED_IO


	)

103 
	m_SC_SYNCHRONIZED_IO
,

104 
	#_SC_SYNCHRONIZED_IO
 
_SC_SYNCHRONIZED_IO


	)

105 
	m_SC_FSYNC
,

106 
	#_SC_FSYNC
 
_SC_FSYNC


	)

107 
	m_SC_MAPPED_FILES
,

108 
	#_SC_MAPPED_FILES
 
_SC_MAPPED_FILES


	)

109 
	m_SC_MEMLOCK
,

110 
	#_SC_MEMLOCK
 
_SC_MEMLOCK


	)

111 
	m_SC_MEMLOCK_RANGE
,

112 
	#_SC_MEMLOCK_RANGE
 
_SC_MEMLOCK_RANGE


	)

113 
	m_SC_MEMORY_PROTECTION
,

114 
	#_SC_MEMORY_PROTECTION
 
_SC_MEMORY_PROTECTION


	)

115 
	m_SC_MESSAGE_PASSING
,

116 
	#_SC_MESSAGE_PASSING
 
_SC_MESSAGE_PASSING


	)

117 
	m_SC_SEMAPHORES
,

118 
	#_SC_SEMAPHORES
 
_SC_SEMAPHORES


	)

119 
	m_SC_SHARED_MEMORY_OBJECTS
,

120 
	#_SC_SHARED_MEMORY_OBJECTS
 
_SC_SHARED_MEMORY_OBJECTS


	)

121 
	m_SC_AIO_LISTIO_MAX
,

122 
	#_SC_AIO_LISTIO_MAX
 
_SC_AIO_LISTIO_MAX


	)

123 
	m_SC_AIO_MAX
,

124 
	#_SC_AIO_MAX
 
_SC_AIO_MAX


	)

125 
	m_SC_AIO_PRIO_DELTA_MAX
,

126 
	#_SC_AIO_PRIO_DELTA_MAX
 
_SC_AIO_PRIO_DELTA_MAX


	)

127 
	m_SC_DELAYTIMER_MAX
,

128 
	#_SC_DELAYTIMER_MAX
 
_SC_DELAYTIMER_MAX


	)

129 
	m_SC_MQ_OPEN_MAX
,

130 
	#_SC_MQ_OPEN_MAX
 
_SC_MQ_OPEN_MAX


	)

131 
	m_SC_MQ_PRIO_MAX
,

132 
	#_SC_MQ_PRIO_MAX
 
_SC_MQ_PRIO_MAX


	)

133 
	m_SC_VERSION
,

134 
	#_SC_VERSION
 
_SC_VERSION


	)

135 
	m_SC_PAGESIZE
,

136 
	#_SC_PAGESIZE
 
_SC_PAGESIZE


	)

137 
	#_SC_PAGE_SIZE
 
_SC_PAGESIZE


	)

138 
	m_SC_RTSIG_MAX
,

139 
	#_SC_RTSIG_MAX
 
_SC_RTSIG_MAX


	)

140 
	m_SC_SEM_NSEMS_MAX
,

141 
	#_SC_SEM_NSEMS_MAX
 
_SC_SEM_NSEMS_MAX


	)

142 
	m_SC_SEM_VALUE_MAX
,

143 
	#_SC_SEM_VALUE_MAX
 
_SC_SEM_VALUE_MAX


	)

144 
	m_SC_SIGQUEUE_MAX
,

145 
	#_SC_SIGQUEUE_MAX
 
_SC_SIGQUEUE_MAX


	)

146 
	m_SC_TIMER_MAX
,

147 
	#_SC_TIMER_MAX
 
_SC_TIMER_MAX


	)

151 
	m_SC_BC_BASE_MAX
,

152 
	#_SC_BC_BASE_MAX
 
_SC_BC_BASE_MAX


	)

153 
	m_SC_BC_DIM_MAX
,

154 
	#_SC_BC_DIM_MAX
 
_SC_BC_DIM_MAX


	)

155 
	m_SC_BC_SCALE_MAX
,

156 
	#_SC_BC_SCALE_MAX
 
_SC_BC_SCALE_MAX


	)

157 
	m_SC_BC_STRING_MAX
,

158 
	#_SC_BC_STRING_MAX
 
_SC_BC_STRING_MAX


	)

159 
	m_SC_COLL_WEIGHTS_MAX
,

160 
	#_SC_COLL_WEIGHTS_MAX
 
_SC_COLL_WEIGHTS_MAX


	)

161 
	m_SC_EQUIV_CLASS_MAX
,

162 
	#_SC_EQUIV_CLASS_MAX
 
_SC_EQUIV_CLASS_MAX


	)

163 
	m_SC_EXPR_NEST_MAX
,

164 
	#_SC_EXPR_NEST_MAX
 
_SC_EXPR_NEST_MAX


	)

165 
	m_SC_LINE_MAX
,

166 
	#_SC_LINE_MAX
 
_SC_LINE_MAX


	)

167 
	m_SC_RE_DUP_MAX
,

168 
	#_SC_RE_DUP_MAX
 
_SC_RE_DUP_MAX


	)

169 
	m_SC_CHARCLASS_NAME_MAX
,

170 
	#_SC_CHARCLASS_NAME_MAX
 
_SC_CHARCLASS_NAME_MAX


	)

172 
	m_SC_2_VERSION
,

173 
	#_SC_2_VERSION
 
_SC_2_VERSION


	)

174 
	m_SC_2_C_BIND
,

175 
	#_SC_2_C_BIND
 
_SC_2_C_BIND


	)

176 
	m_SC_2_C_DEV
,

177 
	#_SC_2_C_DEV
 
_SC_2_C_DEV


	)

178 
	m_SC_2_FORT_DEV
,

179 
	#_SC_2_FORT_DEV
 
_SC_2_FORT_DEV


	)

180 
	m_SC_2_FORT_RUN
,

181 
	#_SC_2_FORT_RUN
 
_SC_2_FORT_RUN


	)

182 
	m_SC_2_SW_DEV
,

183 
	#_SC_2_SW_DEV
 
_SC_2_SW_DEV


	)

184 
	m_SC_2_LOCALEDEF
,

185 
	#_SC_2_LOCALEDEF
 
_SC_2_LOCALEDEF


	)

187 
	m_SC_PII
,

188 
	#_SC_PII
 
_SC_PII


	)

189 
	m_SC_PII_XTI
,

190 
	#_SC_PII_XTI
 
_SC_PII_XTI


	)

191 
	m_SC_PII_SOCKET
,

192 
	#_SC_PII_SOCKET
 
_SC_PII_SOCKET


	)

193 
	m_SC_PII_INTERNET
,

194 
	#_SC_PII_INTERNET
 
_SC_PII_INTERNET


	)

195 
	m_SC_PII_OSI
,

196 
	#_SC_PII_OSI
 
_SC_PII_OSI


	)

197 
	m_SC_POLL
,

198 
	#_SC_POLL
 
_SC_POLL


	)

199 
	m_SC_SELECT
,

200 
	#_SC_SELECT
 
_SC_SELECT


	)

201 
	m_SC_UIO_MAXIOV
,

202 
	#_SC_UIO_MAXIOV
 
_SC_UIO_MAXIOV


	)

203 
	m_SC_IOV_MAX
 = 
_SC_UIO_MAXIOV
,

204 
	#_SC_IOV_MAX
 
_SC_IOV_MAX


	)

205 
	m_SC_PII_INTERNET_STREAM
,

206 
	#_SC_PII_INTERNET_STREAM
 
_SC_PII_INTERNET_STREAM


	)

207 
	m_SC_PII_INTERNET_DGRAM
,

208 
	#_SC_PII_INTERNET_DGRAM
 
_SC_PII_INTERNET_DGRAM


	)

209 
	m_SC_PII_OSI_COTS
,

210 
	#_SC_PII_OSI_COTS
 
_SC_PII_OSI_COTS


	)

211 
	m_SC_PII_OSI_CLTS
,

212 
	#_SC_PII_OSI_CLTS
 
_SC_PII_OSI_CLTS


	)

213 
	m_SC_PII_OSI_M
,

214 
	#_SC_PII_OSI_M
 
_SC_PII_OSI_M


	)

215 
	m_SC_T_IOV_MAX
,

216 
	#_SC_T_IOV_MAX
 
_SC_T_IOV_MAX


	)

219 
	m_SC_THREADS
,

220 
	#_SC_THREADS
 
_SC_THREADS


	)

221 
	m_SC_THREAD_SAFE_FUNCTIONS
,

222 
	#_SC_THREAD_SAFE_FUNCTIONS
 
_SC_THREAD_SAFE_FUNCTIONS


	)

223 
	m_SC_GETGR_R_SIZE_MAX
,

224 
	#_SC_GETGR_R_SIZE_MAX
 
_SC_GETGR_R_SIZE_MAX


	)

225 
	m_SC_GETPW_R_SIZE_MAX
,

226 
	#_SC_GETPW_R_SIZE_MAX
 
_SC_GETPW_R_SIZE_MAX


	)

227 
	m_SC_LOGIN_NAME_MAX
,

228 
	#_SC_LOGIN_NAME_MAX
 
_SC_LOGIN_NAME_MAX


	)

229 
	m_SC_TTY_NAME_MAX
,

230 
	#_SC_TTY_NAME_MAX
 
_SC_TTY_NAME_MAX


	)

231 
	m_SC_THREAD_DESTRUCTOR_ITERATIONS
,

232 
	#_SC_THREAD_DESTRUCTOR_ITERATIONS
 
_SC_THREAD_DESTRUCTOR_ITERATIONS


	)

233 
	m_SC_THREAD_KEYS_MAX
,

234 
	#_SC_THREAD_KEYS_MAX
 
_SC_THREAD_KEYS_MAX


	)

235 
	m_SC_THREAD_STACK_MIN
,

236 
	#_SC_THREAD_STACK_MIN
 
_SC_THREAD_STACK_MIN


	)

237 
	m_SC_THREAD_THREADS_MAX
,

238 
	#_SC_THREAD_THREADS_MAX
 
_SC_THREAD_THREADS_MAX


	)

239 
	m_SC_THREAD_ATTR_STACKADDR
,

240 
	#_SC_THREAD_ATTR_STACKADDR
 
_SC_THREAD_ATTR_STACKADDR


	)

241 
	m_SC_THREAD_ATTR_STACKSIZE
,

242 
	#_SC_THREAD_ATTR_STACKSIZE
 
_SC_THREAD_ATTR_STACKSIZE


	)

243 
	m_SC_THREAD_PRIORITY_SCHEDULING
,

244 
	#_SC_THREAD_PRIORITY_SCHEDULING
 
_SC_THREAD_PRIORITY_SCHEDULING


	)

245 
	m_SC_THREAD_PRIO_INHERIT
,

246 
	#_SC_THREAD_PRIO_INHERIT
 
_SC_THREAD_PRIO_INHERIT


	)

247 
	m_SC_THREAD_PRIO_PROTECT
,

248 
	#_SC_THREAD_PRIO_PROTECT
 
_SC_THREAD_PRIO_PROTECT


	)

249 
	m_SC_THREAD_PROCESS_SHARED
,

250 
	#_SC_THREAD_PROCESS_SHARED
 
_SC_THREAD_PROCESS_SHARED


	)

252 
	m_SC_NPROCESSORS_CONF
,

253 
	#_SC_NPROCESSORS_CONF
 
_SC_NPROCESSORS_CONF


	)

254 
	m_SC_NPROCESSORS_ONLN
,

255 
	#_SC_NPROCESSORS_ONLN
 
_SC_NPROCESSORS_ONLN


	)

256 
	m_SC_PHYS_PAGES
,

257 
	#_SC_PHYS_PAGES
 
_SC_PHYS_PAGES


	)

258 
	m_SC_AVPHYS_PAGES
,

259 
	#_SC_AVPHYS_PAGES
 
_SC_AVPHYS_PAGES


	)

260 
	m_SC_ATEXIT_MAX
,

261 
	#_SC_ATEXIT_MAX
 
_SC_ATEXIT_MAX


	)

262 
	m_SC_PASS_MAX
,

263 
	#_SC_PASS_MAX
 
_SC_PASS_MAX


	)

265 
	m_SC_XOPEN_VERSION
,

266 
	#_SC_XOPEN_VERSION
 
_SC_XOPEN_VERSION


	)

267 
	m_SC_XOPEN_XCU_VERSION
,

268 
	#_SC_XOPEN_XCU_VERSION
 
_SC_XOPEN_XCU_VERSION


	)

269 
	m_SC_XOPEN_UNIX
,

270 
	#_SC_XOPEN_UNIX
 
_SC_XOPEN_UNIX


	)

271 
	m_SC_XOPEN_CRYPT
,

272 
	#_SC_XOPEN_CRYPT
 
_SC_XOPEN_CRYPT


	)

273 
	m_SC_XOPEN_ENH_I18N
,

274 
	#_SC_XOPEN_ENH_I18N
 
_SC_XOPEN_ENH_I18N


	)

275 
	m_SC_XOPEN_SHM
,

276 
	#_SC_XOPEN_SHM
 
_SC_XOPEN_SHM


	)

278 
	m_SC_2_CHAR_TERM
,

279 
	#_SC_2_CHAR_TERM
 
_SC_2_CHAR_TERM


	)

280 
	m_SC_2_C_VERSION
,

281 
	#_SC_2_C_VERSION
 
_SC_2_C_VERSION


	)

282 
	m_SC_2_UPE
,

283 
	#_SC_2_UPE
 
_SC_2_UPE


	)

285 
	m_SC_XOPEN_XPG2
,

286 
	#_SC_XOPEN_XPG2
 
_SC_XOPEN_XPG2


	)

287 
	m_SC_XOPEN_XPG3
,

288 
	#_SC_XOPEN_XPG3
 
_SC_XOPEN_XPG3


	)

289 
	m_SC_XOPEN_XPG4
,

290 
	#_SC_XOPEN_XPG4
 
_SC_XOPEN_XPG4


	)

292 
	m_SC_CHAR_BIT
,

293 
	#_SC_CHAR_BIT
 
_SC_CHAR_BIT


	)

294 
	m_SC_CHAR_MAX
,

295 
	#_SC_CHAR_MAX
 
_SC_CHAR_MAX


	)

296 
	m_SC_CHAR_MIN
,

297 
	#_SC_CHAR_MIN
 
_SC_CHAR_MIN


	)

298 
	m_SC_INT_MAX
,

299 
	#_SC_INT_MAX
 
_SC_INT_MAX


	)

300 
	m_SC_INT_MIN
,

301 
	#_SC_INT_MIN
 
_SC_INT_MIN


	)

302 
	m_SC_LONG_BIT
,

303 
	#_SC_LONG_BIT
 
_SC_LONG_BIT


	)

304 
	m_SC_WORD_BIT
,

305 
	#_SC_WORD_BIT
 
_SC_WORD_BIT


	)

306 
	m_SC_MB_LEN_MAX
,

307 
	#_SC_MB_LEN_MAX
 
_SC_MB_LEN_MAX


	)

308 
	m_SC_NZERO
,

309 
	#_SC_NZERO
 
_SC_NZERO


	)

310 
	m_SC_SSIZE_MAX
,

311 
	#_SC_SSIZE_MAX
 
_SC_SSIZE_MAX


	)

312 
	m_SC_SCHAR_MAX
,

313 
	#_SC_SCHAR_MAX
 
_SC_SCHAR_MAX


	)

314 
	m_SC_SCHAR_MIN
,

315 
	#_SC_SCHAR_MIN
 
_SC_SCHAR_MIN


	)

316 
	m_SC_SHRT_MAX
,

317 
	#_SC_SHRT_MAX
 
_SC_SHRT_MAX


	)

318 
	m_SC_SHRT_MIN
,

319 
	#_SC_SHRT_MIN
 
_SC_SHRT_MIN


	)

320 
	m_SC_UCHAR_MAX
,

321 
	#_SC_UCHAR_MAX
 
_SC_UCHAR_MAX


	)

322 
	m_SC_UINT_MAX
,

323 
	#_SC_UINT_MAX
 
_SC_UINT_MAX


	)

324 
	m_SC_ULONG_MAX
,

325 
	#_SC_ULONG_MAX
 
_SC_ULONG_MAX


	)

326 
	m_SC_USHRT_MAX
,

327 
	#_SC_USHRT_MAX
 
_SC_USHRT_MAX


	)

329 
	m_SC_NL_ARGMAX
,

330 
	#_SC_NL_ARGMAX
 
_SC_NL_ARGMAX


	)

331 
	m_SC_NL_LANGMAX
,

332 
	#_SC_NL_LANGMAX
 
_SC_NL_LANGMAX


	)

333 
	m_SC_NL_MSGMAX
,

334 
	#_SC_NL_MSGMAX
 
_SC_NL_MSGMAX


	)

335 
	m_SC_NL_NMAX
,

336 
	#_SC_NL_NMAX
 
_SC_NL_NMAX


	)

337 
	m_SC_NL_SETMAX
,

338 
	#_SC_NL_SETMAX
 
_SC_NL_SETMAX


	)

339 
	m_SC_NL_TEXTMAX
,

340 
	#_SC_NL_TEXTMAX
 
_SC_NL_TEXTMAX


	)

342 
	m_SC_XBS5_ILP32_OFF32
,

343 
	#_SC_XBS5_ILP32_OFF32
 
_SC_XBS5_ILP32_OFF32


	)

344 
	m_SC_XBS5_ILP32_OFFBIG
,

345 
	#_SC_XBS5_ILP32_OFFBIG
 
_SC_XBS5_ILP32_OFFBIG


	)

346 
	m_SC_XBS5_LP64_OFF64
,

347 
	#_SC_XBS5_LP64_OFF64
 
_SC_XBS5_LP64_OFF64


	)

348 
	m_SC_XBS5_LPBIG_OFFBIG
,

349 
	#_SC_XBS5_LPBIG_OFFBIG
 
_SC_XBS5_LPBIG_OFFBIG


	)

351 
	m_SC_XOPEN_LEGACY
,

352 
	#_SC_XOPEN_LEGACY
 
_SC_XOPEN_LEGACY


	)

353 
	m_SC_XOPEN_REALTIME
,

354 
	#_SC_XOPEN_REALTIME
 
_SC_XOPEN_REALTIME


	)

355 
	m_SC_XOPEN_REALTIME_THREADS
,

356 
	#_SC_XOPEN_REALTIME_THREADS
 
_SC_XOPEN_REALTIME_THREADS


	)

358 
	m_SC_ADVISORY_INFO
,

359 
	#_SC_ADVISORY_INFO
 
_SC_ADVISORY_INFO


	)

360 
	m_SC_BARRIERS
,

361 
	#_SC_BARRIERS
 
_SC_BARRIERS


	)

362 
	m_SC_BASE
,

363 
	#_SC_BASE
 
_SC_BASE


	)

364 
	m_SC_C_LANG_SUPPORT
,

365 
	#_SC_C_LANG_SUPPORT
 
_SC_C_LANG_SUPPORT


	)

366 
	m_SC_C_LANG_SUPPORT_R
,

367 
	#_SC_C_LANG_SUPPORT_R
 
_SC_C_LANG_SUPPORT_R


	)

368 
	m_SC_CLOCK_SELECTION
,

369 
	#_SC_CLOCK_SELECTION
 
_SC_CLOCK_SELECTION


	)

370 
	m_SC_CPUTIME
,

371 
	#_SC_CPUTIME
 
_SC_CPUTIME


	)

372 
	m_SC_THREAD_CPUTIME
,

373 
	#_SC_THREAD_CPUTIME
 
_SC_THREAD_CPUTIME


	)

374 
	m_SC_DEVICE_IO
,

375 
	#_SC_DEVICE_IO
 
_SC_DEVICE_IO


	)

376 
	m_SC_DEVICE_SPECIFIC
,

377 
	#_SC_DEVICE_SPECIFIC
 
_SC_DEVICE_SPECIFIC


	)

378 
	m_SC_DEVICE_SPECIFIC_R
,

379 
	#_SC_DEVICE_SPECIFIC_R
 
_SC_DEVICE_SPECIFIC_R


	)

380 
	m_SC_FD_MGMT
,

381 
	#_SC_FD_MGMT
 
_SC_FD_MGMT


	)

382 
	m_SC_FIFO
,

383 
	#_SC_FIFO
 
_SC_FIFO


	)

384 
	m_SC_PIPE
,

385 
	#_SC_PIPE
 
_SC_PIPE


	)

386 
	m_SC_FILE_ATTRIBUTES
,

387 
	#_SC_FILE_ATTRIBUTES
 
_SC_FILE_ATTRIBUTES


	)

388 
	m_SC_FILE_LOCKING
,

389 
	#_SC_FILE_LOCKING
 
_SC_FILE_LOCKING


	)

390 
	m_SC_FILE_SYSTEM
,

391 
	#_SC_FILE_SYSTEM
 
_SC_FILE_SYSTEM


	)

392 
	m_SC_MONOTONIC_CLOCK
,

393 
	#_SC_MONOTONIC_CLOCK
 
_SC_MONOTONIC_CLOCK


	)

394 
	m_SC_MULTI_PROCESS
,

395 
	#_SC_MULTI_PROCESS
 
_SC_MULTI_PROCESS


	)

396 
	m_SC_SINGLE_PROCESS
,

397 
	#_SC_SINGLE_PROCESS
 
_SC_SINGLE_PROCESS


	)

398 
	m_SC_NETWORKING
,

399 
	#_SC_NETWORKING
 
_SC_NETWORKING


	)

400 
	m_SC_READER_WRITER_LOCKS
,

401 
	#_SC_READER_WRITER_LOCKS
 
_SC_READER_WRITER_LOCKS


	)

402 
	m_SC_SPIN_LOCKS
,

403 
	#_SC_SPIN_LOCKS
 
_SC_SPIN_LOCKS


	)

404 
	m_SC_REGEXP
,

405 
	#_SC_REGEXP
 
_SC_REGEXP


	)

406 
	m_SC_REGEX_VERSION
,

407 
	#_SC_REGEX_VERSION
 
_SC_REGEX_VERSION


	)

408 
	m_SC_SHELL
,

409 
	#_SC_SHELL
 
_SC_SHELL


	)

410 
	m_SC_SIGNALS
,

411 
	#_SC_SIGNALS
 
_SC_SIGNALS


	)

412 
	m_SC_SPAWN
,

413 
	#_SC_SPAWN
 
_SC_SPAWN


	)

414 
	m_SC_SPORADIC_SERVER
,

415 
	#_SC_SPORADIC_SERVER
 
_SC_SPORADIC_SERVER


	)

416 
	m_SC_THREAD_SPORADIC_SERVER
,

417 
	#_SC_THREAD_SPORADIC_SERVER
 
_SC_THREAD_SPORADIC_SERVER


	)

418 
	m_SC_SYSTEM_DATABASE
,

419 
	#_SC_SYSTEM_DATABASE
 
_SC_SYSTEM_DATABASE


	)

420 
	m_SC_SYSTEM_DATABASE_R
,

421 
	#_SC_SYSTEM_DATABASE_R
 
_SC_SYSTEM_DATABASE_R


	)

422 
	m_SC_TIMEOUTS
,

423 
	#_SC_TIMEOUTS
 
_SC_TIMEOUTS


	)

424 
	m_SC_TYPED_MEMORY_OBJECTS
,

425 
	#_SC_TYPED_MEMORY_OBJECTS
 
_SC_TYPED_MEMORY_OBJECTS


	)

426 
	m_SC_USER_GROUPS
,

427 
	#_SC_USER_GROUPS
 
_SC_USER_GROUPS


	)

428 
	m_SC_USER_GROUPS_R
,

429 
	#_SC_USER_GROUPS_R
 
_SC_USER_GROUPS_R


	)

430 
	m_SC_2_PBS
,

431 
	#_SC_2_PBS
 
_SC_2_PBS


	)

432 
	m_SC_2_PBS_ACCOUNTING
,

433 
	#_SC_2_PBS_ACCOUNTING
 
_SC_2_PBS_ACCOUNTING


	)

434 
	m_SC_2_PBS_LOCATE
,

435 
	#_SC_2_PBS_LOCATE
 
_SC_2_PBS_LOCATE


	)

436 
	m_SC_2_PBS_MESSAGE
,

437 
	#_SC_2_PBS_MESSAGE
 
_SC_2_PBS_MESSAGE


	)

438 
	m_SC_2_PBS_TRACK
,

439 
	#_SC_2_PBS_TRACK
 
_SC_2_PBS_TRACK


	)

440 
	m_SC_SYMLOOP_MAX
,

441 
	#_SC_SYMLOOP_MAX
 
_SC_SYMLOOP_MAX


	)

442 
	m_SC_STREAMS
,

443 
	#_SC_STREAMS
 
_SC_STREAMS


	)

444 
	m_SC_2_PBS_CHECKPOINT
,

445 
	#_SC_2_PBS_CHECKPOINT
 
_SC_2_PBS_CHECKPOINT


	)

447 
	m_SC_V6_ILP32_OFF32
,

448 
	#_SC_V6_ILP32_OFF32
 
_SC_V6_ILP32_OFF32


	)

449 
	m_SC_V6_ILP32_OFFBIG
,

450 
	#_SC_V6_ILP32_OFFBIG
 
_SC_V6_ILP32_OFFBIG


	)

451 
	m_SC_V6_LP64_OFF64
,

452 
	#_SC_V6_LP64_OFF64
 
_SC_V6_LP64_OFF64


	)

453 
	m_SC_V6_LPBIG_OFFBIG
,

454 
	#_SC_V6_LPBIG_OFFBIG
 
_SC_V6_LPBIG_OFFBIG


	)

456 
	m_SC_HOST_NAME_MAX
,

457 
	#_SC_HOST_NAME_MAX
 
_SC_HOST_NAME_MAX


	)

458 
	m_SC_TRACE
,

459 
	#_SC_TRACE
 
_SC_TRACE


	)

460 
	m_SC_TRACE_EVENT_FILTER
,

461 
	#_SC_TRACE_EVENT_FILTER
 
_SC_TRACE_EVENT_FILTER


	)

462 
	m_SC_TRACE_INHERIT
,

463 
	#_SC_TRACE_INHERIT
 
_SC_TRACE_INHERIT


	)

464 
	m_SC_TRACE_LOG
,

465 
	#_SC_TRACE_LOG
 
_SC_TRACE_LOG


	)

467 
	m_SC_LEVEL1_ICACHE_SIZE
,

468 
	#_SC_LEVEL1_ICACHE_SIZE
 
_SC_LEVEL1_ICACHE_SIZE


	)

469 
	m_SC_LEVEL1_ICACHE_ASSOC
,

470 
	#_SC_LEVEL1_ICACHE_ASSOC
 
_SC_LEVEL1_ICACHE_ASSOC


	)

471 
	m_SC_LEVEL1_ICACHE_LINESIZE
,

472 
	#_SC_LEVEL1_ICACHE_LINESIZE
 
_SC_LEVEL1_ICACHE_LINESIZE


	)

473 
	m_SC_LEVEL1_DCACHE_SIZE
,

474 
	#_SC_LEVEL1_DCACHE_SIZE
 
_SC_LEVEL1_DCACHE_SIZE


	)

475 
	m_SC_LEVEL1_DCACHE_ASSOC
,

476 
	#_SC_LEVEL1_DCACHE_ASSOC
 
_SC_LEVEL1_DCACHE_ASSOC


	)

477 
	m_SC_LEVEL1_DCACHE_LINESIZE
,

478 
	#_SC_LEVEL1_DCACHE_LINESIZE
 
_SC_LEVEL1_DCACHE_LINESIZE


	)

479 
	m_SC_LEVEL2_CACHE_SIZE
,

480 
	#_SC_LEVEL2_CACHE_SIZE
 
_SC_LEVEL2_CACHE_SIZE


	)

481 
	m_SC_LEVEL2_CACHE_ASSOC
,

482 
	#_SC_LEVEL2_CACHE_ASSOC
 
_SC_LEVEL2_CACHE_ASSOC


	)

483 
	m_SC_LEVEL2_CACHE_LINESIZE
,

484 
	#_SC_LEVEL2_CACHE_LINESIZE
 
_SC_LEVEL2_CACHE_LINESIZE


	)

485 
	m_SC_LEVEL3_CACHE_SIZE
,

486 
	#_SC_LEVEL3_CACHE_SIZE
 
_SC_LEVEL3_CACHE_SIZE


	)

487 
	m_SC_LEVEL3_CACHE_ASSOC
,

488 
	#_SC_LEVEL3_CACHE_ASSOC
 
_SC_LEVEL3_CACHE_ASSOC


	)

489 
	m_SC_LEVEL3_CACHE_LINESIZE
,

490 
	#_SC_LEVEL3_CACHE_LINESIZE
 
_SC_LEVEL3_CACHE_LINESIZE


	)

491 
	m_SC_LEVEL4_CACHE_SIZE
,

492 
	#_SC_LEVEL4_CACHE_SIZE
 
_SC_LEVEL4_CACHE_SIZE


	)

493 
	m_SC_LEVEL4_CACHE_ASSOC
,

494 
	#_SC_LEVEL4_CACHE_ASSOC
 
_SC_LEVEL4_CACHE_ASSOC


	)

495 
	m_SC_LEVEL4_CACHE_LINESIZE
,

496 
	#_SC_LEVEL4_CACHE_LINESIZE
 
_SC_LEVEL4_CACHE_LINESIZE


	)

499 
	m_SC_IPV6
 = 
_SC_LEVEL1_ICACHE_SIZE
 + 50,

500 
	#_SC_IPV6
 
_SC_IPV6


	)

501 
	m_SC_RAW_SOCKETS
,

502 
	#_SC_RAW_SOCKETS
 
_SC_RAW_SOCKETS


	)

504 
	m_SC_V7_ILP32_OFF32
,

505 
	#_SC_V7_ILP32_OFF32
 
_SC_V7_ILP32_OFF32


	)

506 
	m_SC_V7_ILP32_OFFBIG
,

507 
	#_SC_V7_ILP32_OFFBIG
 
_SC_V7_ILP32_OFFBIG


	)

508 
	m_SC_V7_LP64_OFF64
,

509 
	#_SC_V7_LP64_OFF64
 
_SC_V7_LP64_OFF64


	)

510 
	m_SC_V7_LPBIG_OFFBIG
,

511 
	#_SC_V7_LPBIG_OFFBIG
 
_SC_V7_LPBIG_OFFBIG


	)

513 
	m_SC_SS_REPL_MAX
,

514 
	#_SC_SS_REPL_MAX
 
_SC_SS_REPL_MAX


	)

516 
	m_SC_TRACE_EVENT_NAME_MAX
,

517 
	#_SC_TRACE_EVENT_NAME_MAX
 
_SC_TRACE_EVENT_NAME_MAX


	)

518 
	m_SC_TRACE_NAME_MAX
,

519 
	#_SC_TRACE_NAME_MAX
 
_SC_TRACE_NAME_MAX


	)

520 
	m_SC_TRACE_SYS_MAX
,

521 
	#_SC_TRACE_SYS_MAX
 
_SC_TRACE_SYS_MAX


	)

522 
	m_SC_TRACE_USER_EVENT_MAX
,

523 
	#_SC_TRACE_USER_EVENT_MAX
 
_SC_TRACE_USER_EVENT_MAX


	)

525 
	m_SC_XOPEN_STREAMS
,

526 
	#_SC_XOPEN_STREAMS
 
_SC_XOPEN_STREAMS


	)

528 
	m_SC_THREAD_ROBUST_PRIO_INHERIT
,

529 
	#_SC_THREAD_ROBUST_PRIO_INHERIT
 
_SC_THREAD_ROBUST_PRIO_INHERIT


	)

530 
	m_SC_THREAD_ROBUST_PRIO_PROTECT


531 
	#_SC_THREAD_ROBUST_PRIO_PROTECT
 
_SC_THREAD_ROBUST_PRIO_PROTECT


	)

537 
	m_CS_PATH
,

538 
	#_CS_PATH
 
_CS_PATH


	)

540 
	m_CS_V6_WIDTH_RESTRICTED_ENVS
,

541 
	#_CS_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

542 
	#_CS_POSIX_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

544 
	m_CS_GNU_LIBC_VERSION
,

545 
	#_CS_GNU_LIBC_VERSION
 
_CS_GNU_LIBC_VERSION


	)

546 
	m_CS_GNU_LIBPTHREAD_VERSION
,

547 
	#_CS_GNU_LIBPTHREAD_VERSION
 
_CS_GNU_LIBPTHREAD_VERSION


	)

549 
	m_CS_V5_WIDTH_RESTRICTED_ENVS
,

550 
	#_CS_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

551 
	#_CS_POSIX_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

553 
	m_CS_V7_WIDTH_RESTRICTED_ENVS
,

554 
	#_CS_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

555 
	#_CS_POSIX_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

557 
	m_CS_LFS_CFLAGS
 = 1000,

558 
	#_CS_LFS_CFLAGS
 
_CS_LFS_CFLAGS


	)

559 
	m_CS_LFS_LDFLAGS
,

560 
	#_CS_LFS_LDFLAGS
 
_CS_LFS_LDFLAGS


	)

561 
	m_CS_LFS_LIBS
,

562 
	#_CS_LFS_LIBS
 
_CS_LFS_LIBS


	)

563 
	m_CS_LFS_LINTFLAGS
,

564 
	#_CS_LFS_LINTFLAGS
 
_CS_LFS_LINTFLAGS


	)

565 
	m_CS_LFS64_CFLAGS
,

566 
	#_CS_LFS64_CFLAGS
 
_CS_LFS64_CFLAGS


	)

567 
	m_CS_LFS64_LDFLAGS
,

568 
	#_CS_LFS64_LDFLAGS
 
_CS_LFS64_LDFLAGS


	)

569 
	m_CS_LFS64_LIBS
,

570 
	#_CS_LFS64_LIBS
 
_CS_LFS64_LIBS


	)

571 
	m_CS_LFS64_LINTFLAGS
,

572 
	#_CS_LFS64_LINTFLAGS
 
_CS_LFS64_LINTFLAGS


	)

574 
	m_CS_XBS5_ILP32_OFF32_CFLAGS
 = 1100,

575 
	#_CS_XBS5_ILP32_OFF32_CFLAGS
 
_CS_XBS5_ILP32_OFF32_CFLAGS


	)

576 
	m_CS_XBS5_ILP32_OFF32_LDFLAGS
,

577 
	#_CS_XBS5_ILP32_OFF32_LDFLAGS
 
_CS_XBS5_ILP32_OFF32_LDFLAGS


	)

578 
	m_CS_XBS5_ILP32_OFF32_LIBS
,

579 
	#_CS_XBS5_ILP32_OFF32_LIBS
 
_CS_XBS5_ILP32_OFF32_LIBS


	)

580 
	m_CS_XBS5_ILP32_OFF32_LINTFLAGS
,

581 
	#_CS_XBS5_ILP32_OFF32_LINTFLAGS
 
_CS_XBS5_ILP32_OFF32_LINTFLAGS


	)

582 
	m_CS_XBS5_ILP32_OFFBIG_CFLAGS
,

583 
	#_CS_XBS5_ILP32_OFFBIG_CFLAGS
 
_CS_XBS5_ILP32_OFFBIG_CFLAGS


	)

584 
	m_CS_XBS5_ILP32_OFFBIG_LDFLAGS
,

585 
	#_CS_XBS5_ILP32_OFFBIG_LDFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LDFLAGS


	)

586 
	m_CS_XBS5_ILP32_OFFBIG_LIBS
,

587 
	#_CS_XBS5_ILP32_OFFBIG_LIBS
 
_CS_XBS5_ILP32_OFFBIG_LIBS


	)

588 
	m_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
,

589 
	#_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LINTFLAGS


	)

590 
	m_CS_XBS5_LP64_OFF64_CFLAGS
,

591 
	#_CS_XBS5_LP64_OFF64_CFLAGS
 
_CS_XBS5_LP64_OFF64_CFLAGS


	)

592 
	m_CS_XBS5_LP64_OFF64_LDFLAGS
,

593 
	#_CS_XBS5_LP64_OFF64_LDFLAGS
 
_CS_XBS5_LP64_OFF64_LDFLAGS


	)

594 
	m_CS_XBS5_LP64_OFF64_LIBS
,

595 
	#_CS_XBS5_LP64_OFF64_LIBS
 
_CS_XBS5_LP64_OFF64_LIBS


	)

596 
	m_CS_XBS5_LP64_OFF64_LINTFLAGS
,

597 
	#_CS_XBS5_LP64_OFF64_LINTFLAGS
 
_CS_XBS5_LP64_OFF64_LINTFLAGS


	)

598 
	m_CS_XBS5_LPBIG_OFFBIG_CFLAGS
,

599 
	#_CS_XBS5_LPBIG_OFFBIG_CFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_CFLAGS


	)

600 
	m_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
,

601 
	#_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LDFLAGS


	)

602 
	m_CS_XBS5_LPBIG_OFFBIG_LIBS
,

603 
	#_CS_XBS5_LPBIG_OFFBIG_LIBS
 
_CS_XBS5_LPBIG_OFFBIG_LIBS


	)

604 
	m_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
,

605 
	#_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS


	)

607 
	m_CS_POSIX_V6_ILP32_OFF32_CFLAGS
,

608 
	#_CS_POSIX_V6_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_CFLAGS


	)

609 
	m_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
,

610 
	#_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LDFLAGS


	)

611 
	m_CS_POSIX_V6_ILP32_OFF32_LIBS
,

612 
	#_CS_POSIX_V6_ILP32_OFF32_LIBS
 
_CS_POSIX_V6_ILP32_OFF32_LIBS


	)

613 
	m_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
,

614 
	#_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS


	)

615 
	m_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
,

616 
	#_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS


	)

617 
	m_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
,

618 
	#_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS


	)

619 
	m_CS_POSIX_V6_ILP32_OFFBIG_LIBS
,

620 
	#_CS_POSIX_V6_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V6_ILP32_OFFBIG_LIBS


	)

621 
	m_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
,

622 
	#_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS


	)

623 
	m_CS_POSIX_V6_LP64_OFF64_CFLAGS
,

624 
	#_CS_POSIX_V6_LP64_OFF64_CFLAGS
 
_CS_POSIX_V6_LP64_OFF64_CFLAGS


	)

625 
	m_CS_POSIX_V6_LP64_OFF64_LDFLAGS
,

626 
	#_CS_POSIX_V6_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LDFLAGS


	)

627 
	m_CS_POSIX_V6_LP64_OFF64_LIBS
,

628 
	#_CS_POSIX_V6_LP64_OFF64_LIBS
 
_CS_POSIX_V6_LP64_OFF64_LIBS


	)

629 
	m_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
,

630 
	#_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LINTFLAGS


	)

631 
	m_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
,

632 
	#_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS


	)

633 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
,

634 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS


	)

635 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
,

636 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LIBS


	)

637 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
,

638 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


	)

640 
	m_CS_POSIX_V7_ILP32_OFF32_CFLAGS
,

641 
	#_CS_POSIX_V7_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_CFLAGS


	)

642 
	m_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
,

643 
	#_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LDFLAGS


	)

644 
	m_CS_POSIX_V7_ILP32_OFF32_LIBS
,

645 
	#_CS_POSIX_V7_ILP32_OFF32_LIBS
 
_CS_POSIX_V7_ILP32_OFF32_LIBS


	)

646 
	m_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
,

647 
	#_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS


	)

648 
	m_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
,

649 
	#_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS


	)

650 
	m_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
,

651 
	#_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS


	)

652 
	m_CS_POSIX_V7_ILP32_OFFBIG_LIBS
,

653 
	#_CS_POSIX_V7_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V7_ILP32_OFFBIG_LIBS


	)

654 
	m_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
,

655 
	#_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS


	)

656 
	m_CS_POSIX_V7_LP64_OFF64_CFLAGS
,

657 
	#_CS_POSIX_V7_LP64_OFF64_CFLAGS
 
_CS_POSIX_V7_LP64_OFF64_CFLAGS


	)

658 
	m_CS_POSIX_V7_LP64_OFF64_LDFLAGS
,

659 
	#_CS_POSIX_V7_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LDFLAGS


	)

660 
	m_CS_POSIX_V7_LP64_OFF64_LIBS
,

661 
	#_CS_POSIX_V7_LP64_OFF64_LIBS
 
_CS_POSIX_V7_LP64_OFF64_LIBS


	)

662 
	m_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
,

663 
	#_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LINTFLAGS


	)

664 
	m_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
,

665 
	#_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS


	)

666 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
,

667 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS


	)

668 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
,

669 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LIBS


	)

670 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
,

671 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS


	)

673 
	m_CS_V6_ENV
,

674 
	#_CS_V6_ENV
 
_CS_V6_ENV


	)

675 
	m_CS_V7_ENV


676 
	#_CS_V7_ENV
 
_CS_V7_ENV


	)

	@/usr/include/bits/dirent.h

19 #i‚de‡
_DIRENT_H


23 
	sdúít


25 #i‚de‡
__USE_FILE_OFFSET64


26 
__öo_t
 
	md_öo
;

27 
__off_t
 
	md_off
;

29 
__öo64_t
 
	md_öo
;

30 
__off64_t
 
	md_off
;

32 
	md_ª˛í
;

33 
	md_ty≥
;

34 
	md_«me
[256];

37 #ifde‡
__USE_LARGEFILE64


38 
	sdúít64


40 
__öo64_t
 
	md_öo
;

41 
__off64_t
 
	md_off
;

42 
	md_ª˛í
;

43 
	md_ty≥
;

44 
	md_«me
[256];

48 
	#d_fûío
 
d_öo


	)

50 #unde‡
_DIRENT_HAVE_D_NAMLEN


51 
	#_DIRENT_HAVE_D_RECLEN


	)

52 
	#_DIRENT_HAVE_D_OFF


	)

53 
	#_DIRENT_HAVE_D_TYPE


	)

	@/usr/include/bits/environments.h

19 #i‚de‡
_UNISTD_H


43 
	#_POSIX_V7_ILP32_OFF32
 1

	)

44 
	#_POSIX_V7_ILP32_OFFBIG
 1

	)

45 
	#_POSIX_V6_ILP32_OFF32
 1

	)

46 
	#_POSIX_V6_ILP32_OFFBIG
 1

	)

47 
	#_XBS5_ILP32_OFF32
 1

	)

48 
	#_XBS5_ILP32_OFFBIG
 1

	)

63 
	#__ILP32_OFF32_CFLAGS
 "-m32"

	)

64 
	#__ILP32_OFFBIG_CFLAGS
 "-m32 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"

	)

65 
	#__ILP32_OFF32_LDFLAGS
 "-m32"

	)

66 
	#__ILP32_OFFBIG_LDFLAGS
 "-m32"

	)

67 
	#__LP64_OFF64_CFLAGS
 "-m64"

	)

68 
	#__LP64_OFF64_LDFLAGS
 "-m64"

	)

	@/usr/include/bits/errno.h

20 #ifde‡
_ERRNO_H


22 #unde‡
EDOM


23 #unde‡
EILSEQ


24 #unde‡
ERANGE


25 
	~<löux/î∫o.h
>

28 
	#ENOTSUP
 
EOPNOTSUPP


	)

31 #i‚de‡
ECANCELED


32 
	#ECANCELED
 125

	)

36 #i‚de‡
EOWNERDEAD


37 
	#EOWNERDEAD
 130

	)

38 
	#ENOTRECOVERABLE
 131

	)

41 #i‚de‡
ERFKILL


42 
	#ERFKILL
 132

	)

45 #i‚de‡
__ASSEMBLER__


47 *
	$__î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

49 #i‡!
deföed
 
_LIBC
 || deföed 
_LIBC_REENTRANT


51 
	#î∫o
 (*
	`__î∫o_loˇti⁄
 ())

	)

56 #i‡!
deföed
 
_ERRNO_H
 && deföed 
__√ed_Em©h


60 
	#EDOM
 33

	)

61 
	#EILSEQ
 84

	)

62 
	#ERANGE
 34

	)

	@/usr/include/bits/fcntl.h

21 #i‚def 
_FCNTL_H


25 
	~<sys/ty≥s.h
>

26 #ifde‡
__USE_GNU


27 
	~<bôs/uio.h
>

33 
	#O_ACCMODE
 0003

	)

34 
	#O_RDONLY
 00

	)

35 
	#O_WRONLY
 01

	)

36 
	#O_RDWR
 02

	)

37 
	#O_CREAT
 0100

	)

38 
	#O_EXCL
 0200

	)

39 
	#O_NOCTTY
 0400

	)

40 
	#O_TRUNC
 01000

	)

41 
	#O_APPEND
 02000

	)

42 
	#O_NONBLOCK
 04000

	)

43 
	#O_NDELAY
 
O_NONBLOCK


	)

44 
	#O_SYNC
 04010000

	)

45 
	#O_FSYNC
 
O_SYNC


	)

46 
	#O_ASYNC
 020000

	)

48 #ifde‡
__USE_XOPEN2K8


49 
	#O_DIRECTORY
 0200000

	)

50 
	#O_NOFOLLOW
 0400000

	)

51 
	#O_CLOEXEC
 02000000

	)

53 #ifde‡
__USE_GNU


54 
	#O_DIRECT
 040000

	)

55 
	#O_NOATIME
 01000000

	)

56 
	#O_PATH
 010000000

	)

62 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


63 
	#O_DSYNC
 010000

	)

64 
	#O_RSYNC
 
O_SYNC


	)

67 #ifde‡
__USE_LARGEFILE64


68 
	#O_LARGEFILE
 0100000

	)

72 
	#F_DUPFD
 0

	)

73 
	#F_GETFD
 1

	)

74 
	#F_SETFD
 2

	)

75 
	#F_GETFL
 3

	)

76 
	#F_SETFL
 4

	)

77 #i‚de‡
__USE_FILE_OFFSET64


78 
	#F_GETLK
 5

	)

79 
	#F_SETLK
 6

	)

80 
	#F_SETLKW
 7

	)

82 
	#F_GETLK
 
F_GETLK64


	)

83 
	#F_SETLK
 
F_SETLK64


	)

84 
	#F_SETLKW
 
F_SETLKW64


	)

86 
	#F_GETLK64
 12

	)

87 
	#F_SETLK64
 13

	)

88 
	#F_SETLKW64
 14

	)

90 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


91 
	#F_SETOWN
 8

	)

92 
	#F_GETOWN
 9

	)

95 #ifde‡
__USE_GNU


96 
	#F_SETSIG
 10

	)

97 
	#F_GETSIG
 11

	)

98 
	#F_SETOWN_EX
 15

	)

99 
	#F_GETOWN_EX
 16

	)

102 #ifde‡
__USE_GNU


103 
	#F_SETLEASE
 1024

	)

104 
	#F_GETLEASE
 1025

	)

105 
	#F_NOTIFY
 1026

	)

106 
	#F_SETPIPE_SZ
 1031

	)

107 
	#F_GETPIPE_SZ
 1032

	)

109 #ifde‡
__USE_XOPEN2K8


110 
	#F_DUPFD_CLOEXEC
 1030

	)

115 
	#FD_CLOEXEC
 1

	)

118 
	#F_RDLCK
 0

	)

119 
	#F_WRLCK
 1

	)

120 
	#F_UNLCK
 2

	)

123 
	#F_EXLCK
 4

	)

124 
	#F_SHLCK
 8

	)

126 #ifde‡
__USE_BSD


128 
	#LOCK_SH
 1

	)

129 
	#LOCK_EX
 2

	)

130 
	#LOCK_NB
 4

	)

132 
	#LOCK_UN
 8

	)

135 #ifde‡
__USE_GNU


136 
	#LOCK_MAND
 32

	)

137 
	#LOCK_READ
 64

	)

138 
	#LOCK_WRITE
 128

	)

139 
	#LOCK_RW
 192

	)

142 #ifde‡
__USE_GNU


144 
	#DN_ACCESS
 0x00000001

	)

145 
	#DN_MODIFY
 0x00000002

	)

146 
	#DN_CREATE
 0x00000004

	)

147 
	#DN_DELETE
 0x00000008

	)

148 
	#DN_RENAME
 0x00000010

	)

149 
	#DN_ATTRIB
 0x00000020

	)

150 
	#DN_MULTISHOT
 0x80000000

	)

153 
	sÊock


155 
	ml_ty≥
;

156 
	ml_whí˚
;

157 #i‚de‡
__USE_FILE_OFFSET64


158 
__off_t
 
	ml_°¨t
;

159 
__off_t
 
	ml_Àn
;

161 
__off64_t
 
	ml_°¨t
;

162 
__off64_t
 
	ml_Àn
;

164 
__pid_t
 
	ml_pid
;

167 #ifde‡
__USE_LARGEFILE64


168 
	sÊock64


170 
	ml_ty≥
;

171 
	ml_whí˚
;

172 
__off64_t
 
	ml_°¨t
;

173 
__off64_t
 
	ml_Àn
;

174 
__pid_t
 
	ml_pid
;

178 #ifde‡
__USE_GNU


180 
	e__pid_ty≥


182 
	mF_OWNER_TID
 = 0,

183 
	mF_OWNER_PID
,

184 
	mF_OWNER_PGRP
,

185 
	mF_OWNER_GID
 = 
F_OWNER_PGRP


189 
	sf_ow√r_ex


191 
__pid_ty≥
 
	mty≥
;

192 
__pid_t
 
	mpid
;

198 #ifdef 
__USE_BSD


199 
	#FAPPEND
 
O_APPEND


	)

200 
	#FFSYNC
 
O_FSYNC


	)

201 
	#FASYNC
 
O_ASYNC


	)

202 
	#FNONBLOCK
 
O_NONBLOCK


	)

203 
	#FNDELAY
 
O_NDELAY


	)

207 #ifde‡
__USE_XOPEN2K


208 
	#POSIX_FADV_NORMAL
 0

	)

209 
	#POSIX_FADV_RANDOM
 1

	)

210 
	#POSIX_FADV_SEQUENTIAL
 2

	)

211 
	#POSIX_FADV_WILLNEED
 3

	)

212 
	#POSIX_FADV_DONTNEED
 4

	)

213 
	#POSIX_FADV_NOREUSE
 5

	)

217 #ifde‡
__USE_GNU


219 
	#SYNC_FILE_RANGE_WAIT_BEFORE
 1

	)

222 
	#SYNC_FILE_RANGE_WRITE
 2

	)

225 
	#SYNC_FILE_RANGE_WAIT_AFTER
 4

	)

230 
	#SPLICE_F_MOVE
 1

	)

231 
	#SPLICE_F_NONBLOCK
 2

	)

234 
	#SPLICE_F_MORE
 4

	)

235 
	#SPLICE_F_GIFT
 8

	)

239 
	sfûe_h™dÀ


241 
	mh™dÀ_byãs
;

242 
	mh™dÀ_ty≥
;

244 
	mf_h™dÀ
[0];

248 
	#MAX_HANDLE_SZ
 128

	)

251 
	g__BEGIN_DECLS


253 #ifde‡
__USE_GNU


256 
ssize_t
 
	$ªadahód
 (
__fd
, 
__off64_t
 
__off£t
, 
size_t
 
__cou¡
)

257 
__THROW
;

261 
	`sync_fûe_ønge
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__cou¡
,

262 
__Êags
);

269 
ssize_t
 
	`vm•li˚
 (
__fdout
, c⁄° 
iovec
 *
__iov
,

270 
size_t
 
__cou¡
, 
__Êags
);

276 
ssize_t
 
	`•li˚
 (
__fdö
, 
__off64_t
 *
__offö
, 
__fdout
,

277 
__off64_t
 *
__offout
, 
size_t
 
__Àn
,

278 
__Êags
);

284 
ssize_t
 
	`ãe
 (
__fdö
, 
__fdout
, 
size_t
 
__Àn
,

285 
__Êags
);

291 #i‚de‡
__USE_FILE_OFFSET64


292 
	`ÁŒoˇã
 (
__fd
, 
__mode
, 
__off_t
 
__off£t
, __off_à
__Àn
);

294 #ifde‡
__REDIRECT


295 
	`__REDIRECT
 (
ÁŒoˇã
, (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

296 
__off64_t
 
__Àn
),

297 
ÁŒoˇã64
);

299 
	#ÁŒoˇã
 
ÁŒoˇã64


	)

302 #ifde‡
__USE_LARGEFILE64


303 
	`ÁŒoˇã64
 (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

304 
__off64_t
 
__Àn
);

309 
	$«me_to_h™dÀ_©
 (
__dfd
, c⁄° *
__«me
,

310 
fûe_h™dÀ
 *
__h™dÀ
, *
__m¡_id
,

311 
__Êags
Ë
__THROW
;

317 
	`›í_by_h™dÀ_©
 (
__mou¡dúfd
, 
fûe_h™dÀ
 *
__h™dÀ
,

318 
__Êags
);

322 
__END_DECLS


	@/usr/include/bits/fcntl2.h

20 #i‚def 
_FCNTL_H


26 #i‚de‡
__USE_FILE_OFFSET64


27 
	$__›í_2
 (
__c⁄°
 *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

28 
	`__REDIRECT
 (
__›í_Æüs
, (
__c⁄°
 *
__∑th
, 
__oÊag
, ...),

29 
›í
Ë
	`__n⁄nuŒ
 ((1));

31 
	`__REDIRECT
 (
__›í_2
, (
__c⁄°
 *
__∑th
, 
__oÊag
),

32 
__›í64_2
Ë
	`__n⁄nuŒ
 ((1));

33 
	`__REDIRECT
 (
__›í_Æüs
, (
__c⁄°
 *
__∑th
, 
__oÊag
, ...),

34 
›í64
Ë
	`__n⁄nuŒ
 ((1));

36 
	`__îr‹de˛
 (
__›í_too_m™y_¨gs
,

38 
	`__îr‹de˛
 (
__›í_missög_mode
,

41 
__exã∫_Æways_ölöe
 

42 
	$›í
 (
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

44 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

45 
	`__›í_too_m™y_¨gs
 ();

47 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

49 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

51 
	`__›í_missög_mode
 ();

52  
	`__›í_2
 (
__∑th
, 
__oÊag
);

54  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

57 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

58  
	`__›í_2
 (
__∑th
, 
__oÊag
);

60  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

61 
	}
}

64 #ifde‡
__USE_LARGEFILE64


65 
	$__›í64_2
 (
__c⁄°
 *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

66 
	`__REDIRECT
 (
__›í64_Æüs
, (
__c⁄°
 *
__∑th
, 
__oÊag
,

67 ...), 
›í64
Ë
	`__n⁄nuŒ
 ((1));

68 
	`__îr‹de˛
 (
__›í64_too_m™y_¨gs
,

70 
	`__îr‹de˛
 (
__›í64_missög_mode
,

73 
__exã∫_Æways_ölöe
 

74 
	$›í64
 (
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

76 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

77 
	`__›í64_too_m™y_¨gs
 ();

79 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

81 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

83 
	`__›í64_missög_mode
 ();

84  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

86  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

89 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

90  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

92  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

93 
	}
}

97 #ifde‡
__USE_ATFILE


98 #i‚de‡
__USE_FILE_OFFSET64


99 
	$__›í©_2
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
)

100 
	`__n⁄nuŒ
 ((2));

101 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, 
__c⁄°
 *
__∑th
,

102 
__oÊag
, ...), 
›í©
)

103 
	`__n⁄nuŒ
 ((2));

105 
	`__REDIRECT
 (
__›í©_2
, (
__fd
, 
__c⁄°
 *
__∑th
,

106 
__oÊag
), 
__›í©64_2
)

107 
	`__n⁄nuŒ
 ((2));

108 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, 
__c⁄°
 *
__∑th
,

109 
__oÊag
, ...), 
›í©64
)

110 
	`__n⁄nuŒ
 ((2));

112 
	`__îr‹de˛
 (
__›í©_too_m™y_¨gs
,

114 
	`__îr‹de˛
 (
__›í©_missög_mode
,

117 
__exã∫_Æways_ölöe
 

118 
	$›í©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

120 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

121 
	`__›í©_too_m™y_¨gs
 ();

123 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

125 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

127 
	`__›í©_missög_mode
 ();

128  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

130  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

133 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

134  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

136  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

137 
	}
}

140 #ifde‡
__USE_LARGEFILE64


141 
	$__›í©64_2
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
)

142 
	`__n⁄nuŒ
 ((2));

143 
	`__REDIRECT
 (
__›í©64_Æüs
, (
__fd
, 
__c⁄°
 *
__∑th
,

144 
__oÊag
, ...), 
›í©64
)

145 
	`__n⁄nuŒ
 ((2));

146 
	`__îr‹de˛
 (
__›í©64_too_m™y_¨gs
,

148 
	`__îr‹de˛
 (
__›í©64_missög_mode
,

151 
__exã∫_Æways_ölöe
 

152 
	$›í©64
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

154 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

155 
	`__›í©64_too_m™y_¨gs
 ();

157 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

159 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

161 
	`__›í©64_missög_mode
 ();

162  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

164  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

167 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

168  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

170  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

171 
	}
}

	@/usr/include/bits/ioctl-types.h

20 #i‚de‡
_SYS_IOCTL_H


25 
	~<asm/io˘ls.h
>

28 
	swösize


30 
	mws_row
;

31 
	mws_cﬁ
;

32 
	mws_xpixñ
;

33 
	mws_ypixñ
;

36 
	#NCC
 8

	)

37 
	sãrmio


39 
	mc_iÊag
;

40 
	mc_oÊag
;

41 
	mc_cÊag
;

42 
	mc_lÊag
;

43 
	mc_löe
;

44 
	mc_cc
[
NCC
];

48 
	#TIOCM_LE
 0x001

	)

49 
	#TIOCM_DTR
 0x002

	)

50 
	#TIOCM_RTS
 0x004

	)

51 
	#TIOCM_ST
 0x008

	)

52 
	#TIOCM_SR
 0x010

	)

53 
	#TIOCM_CTS
 0x020

	)

54 
	#TIOCM_CAR
 0x040

	)

55 
	#TIOCM_RNG
 0x080

	)

56 
	#TIOCM_DSR
 0x100

	)

57 
	#TIOCM_CD
 
TIOCM_CAR


	)

58 
	#TIOCM_RI
 
TIOCM_RNG


	)

63 
	#N_TTY
 0

	)

64 
	#N_SLIP
 1

	)

65 
	#N_MOUSE
 2

	)

66 
	#N_PPP
 3

	)

67 
	#N_STRIP
 4

	)

68 
	#N_AX25
 5

	)

69 
	#N_X25
 6

	)

70 
	#N_6PACK
 7

	)

71 
	#N_MASC
 8

	)

72 
	#N_R3964
 9

	)

73 
	#N_PROFIBUS_FDL
 10

	)

74 
	#N_IRDA
 11

	)

75 
	#N_SMSBLOCK
 12

	)

76 
	#N_HDLC
 13

	)

77 
	#N_SYNC_PPP
 14

	)

78 
	#N_HCI
 15

	)

	@/usr/include/bits/ioctls.h

19 #i‚de‡
_SYS_IOCTL_H


24 
	~<asm/io˘ls.h
>

27 
	#SIOCADDRT
 0x890B

	)

28 
	#SIOCDELRT
 0x890C

	)

29 
	#SIOCRTMSG
 0x890D

	)

32 
	#SIOCGIFNAME
 0x8910

	)

33 
	#SIOCSIFLINK
 0x8911

	)

34 
	#SIOCGIFCONF
 0x8912

	)

35 
	#SIOCGIFFLAGS
 0x8913

	)

36 
	#SIOCSIFFLAGS
 0x8914

	)

37 
	#SIOCGIFADDR
 0x8915

	)

38 
	#SIOCSIFADDR
 0x8916

	)

39 
	#SIOCGIFDSTADDR
 0x8917

	)

40 
	#SIOCSIFDSTADDR
 0x8918

	)

41 
	#SIOCGIFBRDADDR
 0x8919

	)

42 
	#SIOCSIFBRDADDR
 0x891®

	)

43 
	#SIOCGIFNETMASK
 0x891b

	)

44 
	#SIOCSIFNETMASK
 0x891¯

	)

45 
	#SIOCGIFMETRIC
 0x891d

	)

46 
	#SIOCSIFMETRIC
 0x891ê

	)

47 
	#SIOCGIFMEM
 0x891‡

	)

48 
	#SIOCSIFMEM
 0x8920

	)

49 
	#SIOCGIFMTU
 0x8921

	)

50 
	#SIOCSIFMTU
 0x8922

	)

51 
	#SIOCSIFNAME
 0x8923

	)

52 
	#SIOCSIFHWADDR
 0x8924

	)

53 
	#SIOCGIFENCAP
 0x8925

	)

54 
	#SIOCSIFENCAP
 0x8926

	)

55 
	#SIOCGIFHWADDR
 0x8927

	)

56 
	#SIOCGIFSLAVE
 0x8929

	)

57 
	#SIOCSIFSLAVE
 0x8930

	)

58 
	#SIOCADDMULTI
 0x8931

	)

59 
	#SIOCDELMULTI
 0x8932

	)

60 
	#SIOCGIFINDEX
 0x8933

	)

61 
	#SIOGIFINDEX
 
SIOCGIFINDEX


	)

62 
	#SIOCSIFPFLAGS
 0x8934

	)

63 
	#SIOCGIFPFLAGS
 0x8935

	)

64 
	#SIOCDIFADDR
 0x8936

	)

65 
	#SIOCSIFHWBROADCAST
 0x8937

	)

66 
	#SIOCGIFCOUNT
 0x8938

	)

68 
	#SIOCGIFBR
 0x8940

	)

69 
	#SIOCSIFBR
 0x8941

	)

71 
	#SIOCGIFTXQLEN
 0x8942

	)

72 
	#SIOCSIFTXQLEN
 0x8943

	)

77 
	#SIOCDARP
 0x8953

	)

78 
	#SIOCGARP
 0x8954

	)

79 
	#SIOCSARP
 0x8955

	)

82 
	#SIOCDRARP
 0x8960

	)

83 
	#SIOCGRARP
 0x8961

	)

84 
	#SIOCSRARP
 0x8962

	)

88 
	#SIOCGIFMAP
 0x8970

	)

89 
	#SIOCSIFMAP
 0x8971

	)

93 
	#SIOCADDDLCI
 0x8980

	)

94 
	#SIOCDELDLCI
 0x8981

	)

103 
	#SIOCDEVPRIVATE
 0x89F0

	)

109 
	#SIOCPROTOPRIVATE
 0x89E0

	)

	@/usr/include/bits/locale.h

20 #i‡!
deföed
 
_LOCALE_H
 && !deföed 
_LANGINFO_H


24 #i‚de‡
_BITS_LOCALE_H


25 
	#_BITS_LOCALE_H
 1

	)

29 
	m__LC_CTYPE
 = 0,

30 
	m__LC_NUMERIC
 = 1,

31 
	m__LC_TIME
 = 2,

32 
	m__LC_COLLATE
 = 3,

33 
	m__LC_MONETARY
 = 4,

34 
	m__LC_MESSAGES
 = 5,

35 
	m__LC_ALL
 = 6,

36 
	m__LC_PAPER
 = 7,

37 
	m__LC_NAME
 = 8,

38 
	m__LC_ADDRESS
 = 9,

39 
	m__LC_TELEPHONE
 = 10,

40 
	m__LC_MEASUREMENT
 = 11,

41 
	m__LC_IDENTIFICATION
 = 12

	@/usr/include/bits/posix1_lim.h

25 #i‚def 
_BITS_POSIX1_LIM_H


26 
	#_BITS_POSIX1_LIM_H
 1

	)

32 
	#_POSIX_AIO_LISTIO_MAX
 2

	)

35 
	#_POSIX_AIO_MAX
 1

	)

38 
	#_POSIX_ARG_MAX
 4096

	)

41 #ifde‡
__USE_XOPEN2K


42 
	#_POSIX_CHILD_MAX
 25

	)

44 
	#_POSIX_CHILD_MAX
 6

	)

48 
	#_POSIX_DELAYTIMER_MAX
 32

	)

52 
	#_POSIX_HOST_NAME_MAX
 255

	)

55 
	#_POSIX_LINK_MAX
 8

	)

58 
	#_POSIX_LOGIN_NAME_MAX
 9

	)

61 
	#_POSIX_MAX_CANON
 255

	)

65 
	#_POSIX_MAX_INPUT
 255

	)

68 
	#_POSIX_MQ_OPEN_MAX
 8

	)

71 
	#_POSIX_MQ_PRIO_MAX
 32

	)

74 
	#_POSIX_NAME_MAX
 14

	)

77 #ifde‡
__USE_XOPEN2K


78 
	#_POSIX_NGROUPS_MAX
 8

	)

80 
	#_POSIX_NGROUPS_MAX
 0

	)

84 #ifde‡
__USE_XOPEN2K


85 
	#_POSIX_OPEN_MAX
 20

	)

87 
	#_POSIX_OPEN_MAX
 16

	)

90 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


93 
	#_POSIX_FD_SETSIZE
 
_POSIX_OPEN_MAX


	)

97 
	#_POSIX_PATH_MAX
 256

	)

100 
	#_POSIX_PIPE_BUF
 512

	)

104 
	#_POSIX_RE_DUP_MAX
 255

	)

107 
	#_POSIX_RTSIG_MAX
 8

	)

110 
	#_POSIX_SEM_NSEMS_MAX
 256

	)

113 
	#_POSIX_SEM_VALUE_MAX
 32767

	)

116 
	#_POSIX_SIGQUEUE_MAX
 32

	)

119 
	#_POSIX_SSIZE_MAX
 32767

	)

122 
	#_POSIX_STREAM_MAX
 8

	)

125 
	#_POSIX_SYMLINK_MAX
 255

	)

129 
	#_POSIX_SYMLOOP_MAX
 8

	)

132 
	#_POSIX_TIMER_MAX
 32

	)

135 
	#_POSIX_TTY_NAME_MAX
 9

	)

138 
	#_POSIX_TZNAME_MAX
 6

	)

140 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


142 
	#_POSIX_QLIMIT
 1

	)

146 
	#_POSIX_HIWAT
 
_POSIX_PIPE_BUF


	)

149 
	#_POSIX_UIO_MAXIOV
 16

	)

153 
	#_POSIX_CLOCKRES_MIN
 20000000

	)

157 
	~<bôs/loˇl_lim.h
>

160 #i‚def 
SSIZE_MAX


161 
	#SSIZE_MAX
 
LONG_MAX


	)

168 #i‚def 
NGROUPS_MAX


169 
	#NGROUPS_MAX
 8

	)

	@/usr/include/bits/posix_opt.h

20 #i‚def 
_BITS_POSIX_OPT_H


21 
	#_BITS_POSIX_OPT_H
 1

	)

24 
	#_POSIX_JOB_CONTROL
 1

	)

27 
	#_POSIX_SAVED_IDS
 1

	)

30 
	#_POSIX_PRIORITY_SCHEDULING
 200809L

	)

33 
	#_POSIX_SYNCHRONIZED_IO
 200809L

	)

36 
	#_POSIX_FSYNC
 200809L

	)

39 
	#_POSIX_MAPPED_FILES
 200809L

	)

42 
	#_POSIX_MEMLOCK
 200809L

	)

45 
	#_POSIX_MEMLOCK_RANGE
 200809L

	)

48 
	#_POSIX_MEMORY_PROTECTION
 200809L

	)

51 
	#_POSIX_CHOWN_RESTRICTED
 0

	)

55 
	#_POSIX_VDISABLE
 '\0'

	)

58 
	#_POSIX_NO_TRUNC
 1

	)

61 
	#_XOPEN_REALTIME
 1

	)

64 
	#_XOPEN_REALTIME_THREADS
 1

	)

67 
	#_XOPEN_SHM
 1

	)

70 
	#_POSIX_THREADS
 200809L

	)

73 
	#_POSIX_REENTRANT_FUNCTIONS
 1

	)

74 
	#_POSIX_THREAD_SAFE_FUNCTIONS
 200809L

	)

77 
	#_POSIX_THREAD_PRIORITY_SCHEDULING
 200809L

	)

80 
	#_POSIX_THREAD_ATTR_STACKSIZE
 200809L

	)

83 
	#_POSIX_THREAD_ATTR_STACKADDR
 200809L

	)

86 
	#_POSIX_THREAD_PRIO_INHERIT
 200809L

	)

90 
	#_POSIX_THREAD_PRIO_PROTECT
 200809L

	)

92 #ifde‡
__USE_XOPEN2K8


94 
	#_POSIX_THREAD_ROBUST_PRIO_INHERIT
 200809L

	)

97 
	#_POSIX_THREAD_ROBUST_PRIO_PROTECT
 -1

	)

101 
	#_POSIX_SEMAPHORES
 200809L

	)

104 
	#_POSIX_REALTIME_SIGNALS
 200809L

	)

107 
	#_POSIX_ASYNCHRONOUS_IO
 200809L

	)

108 
	#_POSIX_ASYNC_IO
 1

	)

110 
	#_LFS_ASYNCHRONOUS_IO
 1

	)

112 
	#_POSIX_PRIORITIZED_IO
 200809L

	)

115 
	#_LFS64_ASYNCHRONOUS_IO
 1

	)

118 
	#_LFS_LARGEFILE
 1

	)

119 
	#_LFS64_LARGEFILE
 1

	)

120 
	#_LFS64_STDIO
 1

	)

123 
	#_POSIX_SHARED_MEMORY_OBJECTS
 200809L

	)

126 
	#_POSIX_CPUTIME
 0

	)

129 
	#_POSIX_THREAD_CPUTIME
 0

	)

132 
	#_POSIX_REGEXP
 1

	)

135 
	#_POSIX_READER_WRITER_LOCKS
 200809L

	)

138 
	#_POSIX_SHELL
 1

	)

141 
	#_POSIX_TIMEOUTS
 200809L

	)

144 
	#_POSIX_SPIN_LOCKS
 200809L

	)

147 
	#_POSIX_SPAWN
 200809L

	)

150 
	#_POSIX_TIMERS
 200809L

	)

153 
	#_POSIX_BARRIERS
 200809L

	)

156 
	#_POSIX_MESSAGE_PASSING
 200809L

	)

159 
	#_POSIX_THREAD_PROCESS_SHARED
 200809L

	)

162 
	#_POSIX_MONOTONIC_CLOCK
 0

	)

165 
	#_POSIX_CLOCK_SELECTION
 200809L

	)

168 
	#_POSIX_ADVISORY_INFO
 200809L

	)

171 
	#_POSIX_IPV6
 200809L

	)

174 
	#_POSIX_RAW_SOCKETS
 200809L

	)

177 
	#_POSIX2_CHAR_TERM
 200809L

	)

180 
	#_POSIX_SPORADIC_SERVER
 -1

	)

181 
	#_POSIX_THREAD_SPORADIC_SERVER
 -1

	)

184 
	#_POSIX_TRACE
 -1

	)

185 
	#_POSIX_TRACE_EVENT_FILTER
 -1

	)

186 
	#_POSIX_TRACE_INHERIT
 -1

	)

187 
	#_POSIX_TRACE_LOG
 -1

	)

190 
	#_POSIX_TYPED_MEMORY_OBJECTS
 -1

	)

	@/usr/include/bits/pthreadtypes.h

19 #i‚de‡
_BITS_PTHREADTYPES_H


20 
	#_BITS_PTHREADTYPES_H
 1

	)

22 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

23 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

24 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

25 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

26 
	#__SIZEOF_PTHREAD_COND_COMPAT_T
 12

	)

27 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

28 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

29 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

30 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

31 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

36 
	t±hªad_t
;

41 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

42 
	m__Æign
;

43 } 
	t±hªad_©å_t
;

46 
	s__±hªad_öã∫Æ_¶i°


48 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

49 } 
	t__±hªad_¶i°_t
;

56 
	s__±hªad_muãx_s


58 
	m__lock
;

59 
	m__cou¡
;

60 
	m__ow√r
;

63 
	m__köd
;

64 
	m__nu£rs
;

65 
__exãnsi⁄__
 union

67 
	m__•ös
;

68 
__±hªad_¶i°_t
 
	m__li°
;

70 } 
	m__d©a
;

71 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

72 
	m__Æign
;

73 } 
	t±hªad_muãx_t
;

77 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

78 
	m__Æign
;

79 } 
	t±hªad_muãx©å_t
;

88 
	m__lock
;

89 
	m__fuãx
;

90 
__exãnsi⁄__
 
	m__tŸÆ_£q
;

91 
__exãnsi⁄__
 
	m__wakeup_£q
;

92 
__exãnsi⁄__
 
	m__wokí_£q
;

93 *
	m__muãx
;

94 
	m__nwaôîs
;

95 
	m__brﬂdˇ°_£q
;

96 } 
	m__d©a
;

97 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

98 
__exãnsi⁄__
 
	m__Æign
;

99 } 
	t±hªad_c⁄d_t
;

103 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

104 
	m__Æign
;

105 } 
	t±hªad_c⁄d©å_t
;

109 
	t±hªad_key_t
;

113 
	t±hªad_⁄˚_t
;

116 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


123 
	m__lock
;

124 
	m__ƒ_ªadîs
;

125 
	m__ªadîs_wakeup
;

126 
	m__wrôî_wakeup
;

127 
	m__ƒ_ªadîs_queued
;

128 
	m__ƒ_wrôîs_queued
;

131 
	m__Êags
;

132 
	m__sh¨ed
;

133 
	m__∑d1
;

134 
	m__∑d2
;

135 
	m__wrôî
;

136 } 
	m__d©a
;

137 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

138 
	m__Æign
;

139 } 
	t±hªad_rwlock_t
;

143 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

144 
	m__Æign
;

145 } 
	t±hªad_rwlock©å_t
;

149 #ifde‡
__USE_XOPEN2K


151 vﬁ©ûê
	t±hªad_•ölock_t
;

158 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

159 
	m__Æign
;

160 } 
	t±hªad_b¨rõr_t
;

164 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

165 
	m__Æign
;

166 } 
	t±hªad_b¨rõøâr_t
;

171 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/select.h

19 #i‚de‡
_SYS_SELECT_H


24 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

25 
	#__FD_ZERO
(
fd•
) \

27 
__d0
, 
__d1
; \

28 
__asm__
 
	`__vﬁ©ûe__
 ("cld;Ñep; stosl" \

29 : "=c" (
__d0
), "=D" (
__d1
) \

30 : "a" (0), "0" ( (
fd_£t
) \

31 /  (
__fd_mask
)), \

32 "1" (&
	`__FDS_BITS
 (
fd•
)[0]) \

34 } 0)

	)

40 
	#__FD_ZERO
(
£t
) \

42 
__i
; \

43 
fd_£t
 *
__¨r
 = (
£t
); \

44 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

45 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

46 } 0)

	)

50 
	#__FD_SET
(
d
, 
£t
) \

51 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] |
	`__FD_MASK
 (d)))

	)

52 
	#__FD_CLR
(
d
, 
£t
) \

53 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] &~
	`__FD_MASK
 (d)))

	)

54 
	#__FD_ISSET
(
d
, 
£t
) \

55 ((
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] & 
	`__FD_MASK
 (d)Ë!0)

	)

	@/usr/include/bits/select2.h

20 #i‚de‡
_SYS_SELECT_H


25 
__fdñt_chk
 (
__d
);

26 
	$__fdñt_w¨n
 (
__d
)

27 
	`__w¨«âr
 ("bit outside of fd_set selected");

28 #unde‡
__FD_ELT


29 
	#__FD_ELT
(
d
) \

30 
__exãnsi⁄__
 \

31 ({ 
__d
 = (
d
); \

32 (
	`__buûtö_c⁄°™t_p
 (
__d
) \

33 ? (
__d
 >
__FD_SETSIZE
 \

34 ? 
	`__fdñt_w¨n
 (
__d
Ë: (__d / 
__NFDBITS
)) \

35 : 
	`__fdñt_chk
 (
__d
)); 
	}
})

	)

	@/usr/include/bits/setjmp.h

21 #i‚de‡
_BITS_SETJMP_H


22 
	#_BITS_SETJMP_H
 1

	)

24 #i‡!
deföed
 
_SETJMP_H
 && !deföed 
_PTHREAD_H


28 #i‚def 
_ASM


29 
	t__jmp_buf
[6];

	@/usr/include/bits/setjmp2.h

20 #i‚de‡
_SETJMP_H


25 #ifde‡
__REDIRECT_NTH


26 
__REDIRECT_NTHNL
 (
l⁄gjmp
,

27 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
),

28 
__l⁄gjmp_chk
Ë
__©åibuã__
 ((
__n‹ëu∫__
));

29 
__REDIRECT_NTHNL
 (
_l⁄gjmp
,

30 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
),

31 
__l⁄gjmp_chk
Ë
__©åibuã__
 ((
__n‹ëu∫__
));

32 
__REDIRECT_NTHNL
 (
sigl⁄gjmp
,

33 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
),

34 
__l⁄gjmp_chk
Ë
__©åibuã__
 ((
__n‹ëu∫__
));

36 
__l⁄gjmp_chk
 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
),

37 
__THROWNL
 
__©åibuã__
 ((
__n‹ëu∫__
));

38 
	#l⁄gjmp
 
__l⁄gjmp_chk


	)

39 
	#_l⁄gjmp
 
__l⁄gjmp_chk


	)

40 
	#sigl⁄gjmp
 
__l⁄gjmp_chk


	)

	@/usr/include/bits/sigaction.h

20 #i‚de‡
_SIGNAL_H


25 
	ssiga˘i⁄


28 #ifde‡
__USE_POSIX199309


32 
__sigh™dÀr_t
 
	mß_h™dÀr
;

34 (*
	mß_siga˘i⁄
Ë(, 
	msigöfo_t
 *, *);

36 
	m__siga˘i⁄_h™dÀr
;

37 
	#ß_h™dÀr
 
__siga˘i⁄_h™dÀr
.
ß_h™dÀr


	)

38 
	#ß_siga˘i⁄
 
__siga˘i⁄_h™dÀr
.
ß_siga˘i⁄


	)

40 
__sigh™dÀr_t
 
	mß_h™dÀr
;

44 
__sig£t_t
 
	mß_mask
;

47 
	mß_Êags
;

50 (*
	mß_ª°‹î
) ();

54 
	#SA_NOCLDSTOP
 1

	)

55 
	#SA_NOCLDWAIT
 2

	)

56 
	#SA_SIGINFO
 4

	)

58 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_MISC


59 
	#SA_ONSTACK
 0x08000000

	)

61 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


62 
	#SA_RESTART
 0x10000000

	)

63 
	#SA_NODEFER
 0x40000000

	)

65 
	#SA_RESETHAND
 0x80000000

	)

67 #ifde‡
__USE_MISC


68 
	#SA_INTERRUPT
 0x20000000

	)

71 
	#SA_NOMASK
 
SA_NODEFER


	)

72 
	#SA_ONESHOT
 
SA_RESETHAND


	)

73 
	#SA_STACK
 
SA_ONSTACK


	)

77 
	#SIG_BLOCK
 0

	)

78 
	#SIG_UNBLOCK
 1

	)

79 
	#SIG_SETMASK
 2

	)

	@/usr/include/bits/sigcontext.h

19 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_SYS_UCONTEXT_H


23 #i‚de‡
sigc⁄ãxt_°ru˘


26 
	#sigc⁄ãxt_°ru˘
 
sigc⁄ãxt


	)

28 
	~<asm/sigc⁄ãxt.h
>

31 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

	@/usr/include/bits/siginfo.h

20 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
__√ed_sigöfo_t
 \

21 && !
deföed
 
	g__√ed_sigevít_t


25 
	~<bôs/w‹dsize.h
>

27 #i‡(!
deföed
 
__have_sigvÆ_t
 \

28 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
 \

29 || 
deföed
 
	g__√ed_sigevít_t
))

30 
	#__have_sigvÆ_t
 1

	)

33 
	usigvÆ


35 
	msivÆ_öt
;

36 *
	msivÆ_±r
;

37 } 
	tsigvÆ_t
;

40 #i‡(!
deföed
 
__have_sigöfo_t
 \

41 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
))

42 
	#__have_sigöfo_t
 1

	)

44 
	#__SI_MAX_SIZE
 128

	)

45 #i‡
__WORDSIZE
 == 64

46 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 4)

	)

48 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 3)

	)

51 
	ssigöfo


53 
	msi_signo
;

54 
	msi_î∫o
;

56 
	msi_code
;

60 
	m_∑d
[
__SI_PAD_SIZE
];

65 
__pid_t
 
	msi_pid
;

66 
__uid_t
 
	msi_uid
;

67 } 
	m_kûl
;

72 
	msi_tid
;

73 
	msi_ovîrun
;

74 
sigvÆ_t
 
	msi_sigvÆ
;

75 } 
	m_timî
;

80 
__pid_t
 
	msi_pid
;

81 
__uid_t
 
	msi_uid
;

82 
sigvÆ_t
 
	msi_sigvÆ
;

83 } 
	m_π
;

88 
__pid_t
 
	msi_pid
;

89 
__uid_t
 
	msi_uid
;

90 
	msi_°©us
;

91 
__˛ock_t
 
	msi_utime
;

92 
__˛ock_t
 
	msi_°ime
;

93 } 
	m_sigchld
;

98 *
	msi_addr
;

99 } 
	m_sigÁu…
;

104 
	msi_b™d
;

105 
	msi_fd
;

106 } 
	m_sigpﬁl
;

107 } 
	m_sifõlds
;

108 } 
	tsigöfo_t
;

112 
	#si_pid
 
_sifõlds
.
_kûl
.
si_pid


	)

113 
	#si_uid
 
_sifõlds
.
_kûl
.
si_uid


	)

114 
	#si_timîid
 
_sifõlds
.
_timî
.
si_tid


	)

115 
	#si_ovîrun
 
_sifõlds
.
_timî
.
si_ovîrun


	)

116 
	#si_°©us
 
_sifõlds
.
_sigchld
.
si_°©us


	)

117 
	#si_utime
 
_sifõlds
.
_sigchld
.
si_utime


	)

118 
	#si_°ime
 
_sifõlds
.
_sigchld
.
si_°ime


	)

119 
	#si_vÆue
 
_sifõlds
.
_π
.
si_sigvÆ


	)

120 
	#si_öt
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_öt


	)

121 
	#si_±r
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_±r


	)

122 
	#si_addr
 
_sifõlds
.
_sigÁu…
.
si_addr


	)

123 
	#si_b™d
 
_sifõlds
.
_sigpﬁl
.
si_b™d


	)

124 
	#si_fd
 
_sifõlds
.
_sigpﬁl
.
si_fd


	)

131 
	mSI_ASYNCNL
 = -60,

132 
	#SI_ASYNCNL
 
SI_ASYNCNL


	)

133 
	mSI_TKILL
 = -6,

134 
	#SI_TKILL
 
SI_TKILL


	)

135 
	mSI_SIGIO
,

136 
	#SI_SIGIO
 
SI_SIGIO


	)

137 
	mSI_ASYNCIO
,

138 
	#SI_ASYNCIO
 
SI_ASYNCIO


	)

139 
	mSI_MESGQ
,

140 
	#SI_MESGQ
 
SI_MESGQ


	)

141 
	mSI_TIMER
,

142 
	#SI_TIMER
 
SI_TIMER


	)

143 
	mSI_QUEUE
,

144 
	#SI_QUEUE
 
SI_QUEUE


	)

145 
	mSI_USER
,

146 
	#SI_USER
 
SI_USER


	)

147 
	mSI_KERNEL
 = 0x80

148 
	#SI_KERNEL
 
SI_KERNEL


	)

155 
	mILL_ILLOPC
 = 1,

156 
	#ILL_ILLOPC
 
ILL_ILLOPC


	)

157 
	mILL_ILLOPN
,

158 
	#ILL_ILLOPN
 
ILL_ILLOPN


	)

159 
	mILL_ILLADR
,

160 
	#ILL_ILLADR
 
ILL_ILLADR


	)

161 
	mILL_ILLTRP
,

162 
	#ILL_ILLTRP
 
ILL_ILLTRP


	)

163 
	mILL_PRVOPC
,

164 
	#ILL_PRVOPC
 
ILL_PRVOPC


	)

165 
	mILL_PRVREG
,

166 
	#ILL_PRVREG
 
ILL_PRVREG


	)

167 
	mILL_COPROC
,

168 
	#ILL_COPROC
 
ILL_COPROC


	)

169 
	mILL_BADSTK


170 
	#ILL_BADSTK
 
ILL_BADSTK


	)

176 
	mFPE_INTDIV
 = 1,

177 
	#FPE_INTDIV
 
FPE_INTDIV


	)

178 
	mFPE_INTOVF
,

179 
	#FPE_INTOVF
 
FPE_INTOVF


	)

180 
	mFPE_FLTDIV
,

181 
	#FPE_FLTDIV
 
FPE_FLTDIV


	)

182 
	mFPE_FLTOVF
,

183 
	#FPE_FLTOVF
 
FPE_FLTOVF


	)

184 
	mFPE_FLTUND
,

185 
	#FPE_FLTUND
 
FPE_FLTUND


	)

186 
	mFPE_FLTRES
,

187 
	#FPE_FLTRES
 
FPE_FLTRES


	)

188 
	mFPE_FLTINV
,

189 
	#FPE_FLTINV
 
FPE_FLTINV


	)

190 
	mFPE_FLTSUB


191 
	#FPE_FLTSUB
 
FPE_FLTSUB


	)

197 
	mSEGV_MAPERR
 = 1,

198 
	#SEGV_MAPERR
 
SEGV_MAPERR


	)

199 
	mSEGV_ACCERR


200 
	#SEGV_ACCERR
 
SEGV_ACCERR


	)

206 
	mBUS_ADRALN
 = 1,

207 
	#BUS_ADRALN
 
BUS_ADRALN


	)

208 
	mBUS_ADRERR
,

209 
	#BUS_ADRERR
 
BUS_ADRERR


	)

210 
	mBUS_OBJERR


211 
	#BUS_OBJERR
 
BUS_OBJERR


	)

217 
	mTRAP_BRKPT
 = 1,

218 
	#TRAP_BRKPT
 
TRAP_BRKPT


	)

219 
	mTRAP_TRACE


220 
	#TRAP_TRACE
 
TRAP_TRACE


	)

226 
	mCLD_EXITED
 = 1,

227 
	#CLD_EXITED
 
CLD_EXITED


	)

228 
	mCLD_KILLED
,

229 
	#CLD_KILLED
 
CLD_KILLED


	)

230 
	mCLD_DUMPED
,

231 
	#CLD_DUMPED
 
CLD_DUMPED


	)

232 
	mCLD_TRAPPED
,

233 
	#CLD_TRAPPED
 
CLD_TRAPPED


	)

234 
	mCLD_STOPPED
,

235 
	#CLD_STOPPED
 
CLD_STOPPED


	)

236 
	mCLD_CONTINUED


237 
	#CLD_CONTINUED
 
CLD_CONTINUED


	)

243 
	mPOLL_IN
 = 1,

244 
	#POLL_IN
 
POLL_IN


	)

245 
	mPOLL_OUT
,

246 
	#POLL_OUT
 
POLL_OUT


	)

247 
	mPOLL_MSG
,

248 
	#POLL_MSG
 
POLL_MSG


	)

249 
	mPOLL_ERR
,

250 
	#POLL_ERR
 
POLL_ERR


	)

251 
	mPOLL_PRI
,

252 
	#POLL_PRI
 
POLL_PRI


	)

253 
	mPOLL_HUP


254 
	#POLL_HUP
 
POLL_HUP


	)

257 #unde‡
__√ed_sigöfo_t


261 #i‡(
deföed
 
_SIGNAL_H
 || deföed 
__√ed_sigevít_t
) \

262 && !
deföed
 
	g__have_sigevít_t


263 
	#__have_sigevít_t
 1

	)

266 
	#__SIGEV_MAX_SIZE
 64

	)

267 #i‡
__WORDSIZE
 == 64

268 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 4)

	)

270 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 3)

	)

273 
	ssigevít


275 
sigvÆ_t
 
	msigev_vÆue
;

276 
	msigev_signo
;

277 
	msigev_nŸify
;

281 
	m_∑d
[
__SIGEV_PAD_SIZE
];

285 
__pid_t
 
	m_tid
;

289 (*
	m_fun˘i⁄
Ë(
	msigvÆ_t
);

290 *
	m_©åibuã
;

291 } 
	m_sigev_thªad
;

292 } 
	m_sigev_un
;

293 } 
	tsigevít_t
;

296 
	#sigev_nŸify_fun˘i⁄
 
_sigev_un
.
_sigev_thªad
.
_fun˘i⁄


	)

297 
	#sigev_nŸify_©åibuãs
 
_sigev_un
.
_sigev_thªad
.
_©åibuã


	)

302 
	mSIGEV_SIGNAL
 = 0,

303 
	#SIGEV_SIGNAL
 
SIGEV_SIGNAL


	)

304 
	mSIGEV_NONE
,

305 
	#SIGEV_NONE
 
SIGEV_NONE


	)

306 
	mSIGEV_THREAD
,

307 
	#SIGEV_THREAD
 
SIGEV_THREAD


	)

309 
	mSIGEV_THREAD_ID
 = 4

310 
	#SIGEV_THREAD_ID
 
SIGEV_THREAD_ID


	)

	@/usr/include/bits/signum.h

20 #ifdef 
_SIGNAL_H


23 
	#SIG_ERR
 ((
__sigh™dÀr_t
Ë-1Ë

	)

24 
	#SIG_DFL
 ((
__sigh™dÀr_t
Ë0Ë

	)

25 
	#SIG_IGN
 ((
__sigh™dÀr_t
Ë1Ë

	)

27 #ifde‡
__USE_UNIX98


28 
	#SIG_HOLD
 ((
__sigh™dÀr_t
Ë2Ë

	)

33 
	#SIGHUP
 1

	)

34 
	#SIGINT
 2

	)

35 
	#SIGQUIT
 3

	)

36 
	#SIGILL
 4

	)

37 
	#SIGTRAP
 5

	)

38 
	#SIGABRT
 6

	)

39 
	#SIGIOT
 6

	)

40 
	#SIGBUS
 7

	)

41 
	#SIGFPE
 8

	)

42 
	#SIGKILL
 9

	)

43 
	#SIGUSR1
 10

	)

44 
	#SIGSEGV
 11

	)

45 
	#SIGUSR2
 12

	)

46 
	#SIGPIPE
 13

	)

47 
	#SIGALRM
 14

	)

48 
	#SIGTERM
 15

	)

49 
	#SIGSTKFLT
 16

	)

50 
	#SIGCLD
 
SIGCHLD


	)

51 
	#SIGCHLD
 17

	)

52 
	#SIGCONT
 18

	)

53 
	#SIGSTOP
 19

	)

54 
	#SIGTSTP
 20

	)

55 
	#SIGTTIN
 21

	)

56 
	#SIGTTOU
 22

	)

57 
	#SIGURG
 23

	)

58 
	#SIGXCPU
 24

	)

59 
	#SIGXFSZ
 25

	)

60 
	#SIGVTALRM
 26

	)

61 
	#SIGPROF
 27

	)

62 
	#SIGWINCH
 28

	)

63 
	#SIGPOLL
 
SIGIO


	)

64 
	#SIGIO
 29

	)

65 
	#SIGPWR
 30

	)

66 
	#SIGSYS
 31

	)

67 
	#SIGUNUSED
 31

	)

69 
	#_NSIG
 65

	)

72 
	#SIGRTMIN
 (
	`__libc_cuºít_sigπmö
 ())

	)

73 
	#SIGRTMAX
 (
	`__libc_cuºít_sigπmax
 ())

	)

77 
	#__SIGRTMIN
 32

	)

78 
	#__SIGRTMAX
 (
_NSIG
 - 1)

	)

	@/usr/include/bits/sigset.h

21 #i‚def 
_SIGSET_H_ty≥s


22 
	#_SIGSET_H_ty≥s
 1

	)

24 
	t__sig_©omic_t
;

28 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

31 
	m__vÆ
[
_SIGSET_NWORDS
];

32 } 
	t__sig£t_t
;

43 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


44 
	#_SIGSET_H_‚s
 1

	)

46 #i‚de‡
_EXTERN_INLINE


47 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

51 
	#__sigmask
(
sig
) \

52 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

55 
	#__sigw‹d
(
sig
Ë(((sigË- 1Ë/ (8 *  ()))

	)

57 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

58 
	#__sigem±y£t
(
£t
) \

59 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

60 
sig£t_t
 *
__£t
 = (
£t
); \

61 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

62 0; }))

	)

63 
	#__sigfûl£t
(
£t
) \

64 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

65 
sig£t_t
 *
__£t
 = (
£t
); \

66 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

67 0; }))

	)

69 #ifde‡
__USE_GNU


73 
	#__sigi£m±y£t
(
£t
) \

74 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

75 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

76 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

77 !
__ªt
 && --
__˙t
 >= 0) \

78 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

79 
__ªt
 =0; }))

	)

80 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

81 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

82 
sig£t_t
 *
__de°
 = (
de°
); \

83 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

84 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

85 --
__˙t
 >= 0) \

86 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

87 & 
__right
->
__vÆ
[
__˙t
]); \

88 0; }))

	)

89 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

90 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

91 
sig£t_t
 *
__de°
 = (
de°
); \

92 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

93 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

94 --
__˙t
 >= 0) \

95 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

96 | 
__right
->
__vÆ
[
__˙t
]); \

97 0; }))

	)

104 
__sigismembî
 (
__c⁄°
 
__sig£t_t
 *, );

105 
__sigadd£t
 (
__sig£t_t
 *, );

106 
__sigdñ£t
 (
__sig£t_t
 *, );

108 #ifde‡
__USE_EXTERN_INLINES


109 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

110 
_EXTERN_INLINE
 \

111 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

113 
__mask
 = 
	`__sigmask
 (
__sig
); \

114 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

115  
BODY
; \

116 }

	)

118 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
Ë? 1 : 0, 
__c⁄°
)

119 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

120 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

122 #unde‡
__SIGSETFN


	@/usr/include/bits/sigstack.h

20 #i‚de‡
_SIGNAL_H


26 
	ssig°ack


28 *
	mss_•
;

29 
	mss_⁄°ack
;

36 
	mSS_ONSTACK
 = 1,

37 
	#SS_ONSTACK
 
SS_ONSTACK


	)

38 
	mSS_DISABLE


39 
	#SS_DISABLE
 
SS_DISABLE


	)

43 
	#MINSIGSTKSZ
 2048

	)

46 
	#SIGSTKSZ
 8192

	)

50 
	ssigÆt°ack


52 *
	mss_•
;

53 
	mss_Êags
;

54 
size_t
 
	mss_size
;

55 } 
	t°ack_t
;

	@/usr/include/bits/sigthread.h

20 #i‚de‡
_BITS_SIGTHREAD_H


21 
	#_BITS_SIGTHREAD_H
 1

	)

23 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_PTHREAD_H


31 
	$±hªad_sigmask
 (
__how
,

32 
__c⁄°
 
__sig£t_t
 *
__ª°ri˘
 
__√wmask
,

33 
__sig£t_t
 *
__ª°ri˘
 
__ﬁdmask
)
__THROW
;

36 
	$±hªad_kûl
 (
±hªad_t
 
__thªadid
, 
__signo
Ë
__THROW
;

38 #ifde‡
__USE_GNU


40 
	$±hªad_sigqueue
 (
±hªad_t
 
__thªadid
, 
__signo
,

41 c⁄° 
sigvÆ
 
__vÆue
Ë
__THROW
;

	@/usr/include/bits/stat.h

19 #i‡!
deföed
 
_SYS_STAT_H
 && !deföed 
_FCNTL_H


23 #i‚de‡
_BITS_STAT_H


24 
	#_BITS_STAT_H
 1

	)

27 
	#_STAT_VER_LINUX_OLD
 1

	)

28 
	#_STAT_VER_KERNEL
 1

	)

29 
	#_STAT_VER_SVR4
 2

	)

30 
	#_STAT_VER_LINUX
 3

	)

31 
	#_STAT_VER
 
_STAT_VER_LINUX


	)

34 
	#_MKNOD_VER_LINUX
 1

	)

35 
	#_MKNOD_VER_SVR4
 2

	)

36 
	#_MKNOD_VER
 
_MKNOD_VER_LINUX


	)

39 
	s°©


41 
__dev_t
 
	m°_dev
;

42 
	m__∑d1
;

43 #i‚de‡
__USE_FILE_OFFSET64


44 
__öo_t
 
	m°_öo
;

46 
__öo_t
 
	m__°_öo
;

48 
__mode_t
 
	m°_mode
;

49 
__∆ök_t
 
	m°_∆ök
;

50 
__uid_t
 
	m°_uid
;

51 
__gid_t
 
	m°_gid
;

52 
__dev_t
 
	m°_rdev
;

53 
	m__∑d2
;

54 #i‚de‡
__USE_FILE_OFFSET64


55 
__off_t
 
	m°_size
;

57 
__off64_t
 
	m°_size
;

59 
__blksize_t
 
	m°_blksize
;

61 #i‚de‡
__USE_FILE_OFFSET64


62 
__blk˙t_t
 
	m°_blocks
;

64 
__blk˙t64_t
 
	m°_blocks
;

66 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


73 
time•ec
 
	m°_©im
;

74 
time•ec
 
	m°_mtim
;

75 
time•ec
 
	m°_˘im
;

76 
	#°_©ime
 
°_©im
.
tv_£c


	)

77 
	#°_mtime
 
°_mtim
.
tv_£c


	)

78 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

80 
__time_t
 
	m°_©ime
;

81 
	m°_©imí£c
;

82 
__time_t
 
	m°_mtime
;

83 
	m°_mtimí£c
;

84 
__time_t
 
	m°_˘ime
;

85 
	m°_˘imí£c
;

87 #i‚de‡
__USE_FILE_OFFSET64


88 
	m__unu£d4
;

89 
	m__unu£d5
;

91 
__öo64_t
 
	m°_öo
;

95 #ifde‡
__USE_LARGEFILE64


96 
	s°©64


98 
__dev_t
 
	m°_dev
;

99 
	m__∑d1
;

101 
__öo_t
 
	m__°_öo
;

102 
__mode_t
 
	m°_mode
;

103 
__∆ök_t
 
	m°_∆ök
;

104 
__uid_t
 
	m°_uid
;

105 
__gid_t
 
	m°_gid
;

106 
__dev_t
 
	m°_rdev
;

107 
	m__∑d2
;

108 
__off64_t
 
	m°_size
;

109 
__blksize_t
 
	m°_blksize
;

111 
__blk˙t64_t
 
	m°_blocks
;

112 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


119 
time•ec
 
	m°_©im
;

120 
time•ec
 
	m°_mtim
;

121 
time•ec
 
	m°_˘im
;

123 
__time_t
 
	m°_©ime
;

124 
	m°_©imí£c
;

125 
__time_t
 
	m°_mtime
;

126 
	m°_mtimí£c
;

127 
__time_t
 
	m°_˘ime
;

128 
	m°_˘imí£c
;

130 
__öo64_t
 
	m°_öo
;

135 
	#_STATBUF_ST_BLKSIZE


	)

136 
	#_STATBUF_ST_RDEV


	)

138 
	#_STATBUF_ST_NSEC


	)

142 
	#__S_IFMT
 0170000

	)

145 
	#__S_IFDIR
 0040000

	)

146 
	#__S_IFCHR
 0020000

	)

147 
	#__S_IFBLK
 0060000

	)

148 
	#__S_IFREG
 0100000

	)

149 
	#__S_IFIFO
 0010000

	)

150 
	#__S_IFLNK
 0120000

	)

151 
	#__S_IFSOCK
 0140000

	)

155 
	#__S_TYPEISMQ
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

156 
	#__S_TYPEISSEM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

157 
	#__S_TYPEISSHM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

161 
	#__S_ISUID
 04000

	)

162 
	#__S_ISGID
 02000

	)

163 
	#__S_ISVTX
 01000

	)

164 
	#__S_IREAD
 0400

	)

165 
	#__S_IWRITE
 0200

	)

166 
	#__S_IEXEC
 0100

	)

168 #ifde‡
__USE_ATFILE


169 
	#UTIME_NOW
 ((1»<< 30Ë- 1l)

	)

170 
	#UTIME_OMIT
 ((1»<< 30Ë- 2l)

	)

	@/usr/include/bits/stdio-ldbl.h

20 #i‚de‡
_STDIO_H


24 
__BEGIN_NAMESPACE_STD


25 
	$__LDBL_REDIR_DECL
 (
Ârötf
)

26 
	$__LDBL_REDIR_DECL
 (
¥ötf
)

27 
	$__LDBL_REDIR_DECL
 (
•rötf
)

28 
	$__LDBL_REDIR_DECL
 (
vÂrötf
)

29 
	$__LDBL_REDIR_DECL
 (
v¥ötf
)

30 
	$__LDBL_REDIR_DECL
 (
v•rötf
)

31 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

32 && !
deföed
 
__REDIRECT
 \

33 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

34 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__∆dbl___isoc99_fsˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__∆dbl___isoc99_sˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__∆dbl___isoc99_ssˇnf
)

38 
	$__LDBL_REDIR_DECL
 (
fsˇnf
)

39 
	$__LDBL_REDIR_DECL
 (
sˇnf
)

40 
	$__LDBL_REDIR_DECL
 (
ssˇnf
)

42 
__END_NAMESPACE_STD


44 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


45 
__BEGIN_NAMESPACE_C99


46 
	$__LDBL_REDIR_DECL
 (
¢¥ötf
)

47 
	$__LDBL_REDIR_DECL
 (
v¢¥ötf
)

48 
__END_NAMESPACE_C99


51 #ifdef 
__USE_ISOC99


52 
__BEGIN_NAMESPACE_C99


53 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

54 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

55 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__∆dbl___isoc99_vfsˇnf
)

56 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__∆dbl___isoc99_vsˇnf
)

57 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__∆dbl___isoc99_vssˇnf
)

59 
	$__LDBL_REDIR_DECL
 (
vfsˇnf
)

60 
	$__LDBL_REDIR_DECL
 (
vssˇnf
)

61 
	$__LDBL_REDIR_DECL
 (
vsˇnf
)

63 
__END_NAMESPACE_C99


66 #ifde‡
__USE_GNU


67 
	$__LDBL_REDIR_DECL
 (
vd¥ötf
)

68 
	$__LDBL_REDIR_DECL
 (
d¥ötf
)

69 
	$__LDBL_REDIR_DECL
 (
va•rötf
)

70 
	$__LDBL_REDIR_DECL
 (
__a•rötf
)

71 
	$__LDBL_REDIR_DECL
 (
a•rötf
)

72 
	$__LDBL_REDIR_DECL
 (
ob°ack_¥ötf
)

73 
	$__LDBL_REDIR_DECL
 (
ob°ack_v¥ötf
)

76 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


77 
	$__LDBL_REDIR_DECL
 (
__•rötf_chk
)

78 
	$__LDBL_REDIR_DECL
 (
__v•rötf_chk
)

79 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


80 
	$__LDBL_REDIR_DECL
 (
__¢¥ötf_chk
)

81 
	$__LDBL_REDIR_DECL
 (
__v¢¥ötf_chk
)

83 #i‡
__USE_FORTIFY_LEVEL
 > 1

84 
	$__LDBL_REDIR_DECL
 (
__Ârötf_chk
)

85 
	$__LDBL_REDIR_DECL
 (
__¥ötf_chk
)

86 
	$__LDBL_REDIR_DECL
 (
__vÂrötf_chk
)

87 
	$__LDBL_REDIR_DECL
 (
__v¥ötf_chk
)

88 #ifde‡
__USE_GNU


89 
	$__LDBL_REDIR_DECL
 (
__a•rötf_chk
)

90 
	$__LDBL_REDIR_DECL
 (
__va•rötf_chk
)

91 
	$__LDBL_REDIR_DECL
 (
__d¥ötf_chk
)

92 
	$__LDBL_REDIR_DECL
 (
__vd¥ötf_chk
)

93 
	$__LDBL_REDIR_DECL
 (
__ob°ack_¥ötf_chk
)

94 
	$__LDBL_REDIR_DECL
 (
__ob°ack_v¥ötf_chk
)

	@/usr/include/bits/stdio.h

20 #i‚de‡
_STDIO_H


24 #i‚de‡
__exã∫_ölöe


25 
	#__STDIO_INLINE
 
ölöe


	)

27 
	#__STDIO_INLINE
 
__exã∫_ölöe


	)

31 #ifde‡
__USE_EXTERN_INLINES


34 #i‡!(
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe
)

36 
__STDIO_INLINE
 

37 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

39  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

40 
	}
}

44 
__STDIO_INLINE
 

45 
	$gëch¨
 ()

47  
	`_IO_gëc
 (
°dö
);

48 
	}
}

51 #ifde‡
__USE_MISC


53 
__STDIO_INLINE
 

54 
	$fgëc_u∆ocked
 (
FILE
 *
__Â
)

56  
	`_IO_gëc_u∆ocked
 (
__Â
);

57 
	}
}

61 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


63 
__STDIO_INLINE
 

64 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

66  
	`_IO_gëc_u∆ocked
 (
__Â
);

67 
	}
}

70 
__STDIO_INLINE
 

71 
	$gëch¨_u∆ocked
 ()

73  
	`_IO_gëc_u∆ocked
 (
°dö
);

74 
	}
}

79 
__STDIO_INLINE
 

80 
	$putch¨
 (
__c
)

82  
	`_IO_putc
 (
__c
, 
°dout
);

83 
	}
}

86 #ifde‡
__USE_MISC


88 
__STDIO_INLINE
 

89 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

91  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

92 
	}
}

96 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


98 
__STDIO_INLINE
 

99 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

101  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

102 
	}
}

105 
__STDIO_INLINE
 

106 
	$putch¨_u∆ocked
 (
__c
)

108  
	`_IO_putc_u∆ocked
 (
__c
, 
°dout
);

109 
	}
}

113 #ifdef 
__USE_GNU


115 
__STDIO_INLINE
 
_IO_ssize_t


116 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

118  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

119 
	}
}

123 #ifde‡
__USE_MISC


125 
__STDIO_INLINE
 

126 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

128  
	`_IO_„of_u∆ocked
 (
__°ªam
);

129 
	}
}

132 
__STDIO_INLINE
 

133 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

135  
	`_IO_„º‹_u∆ocked
 (
__°ªam
);

136 
	}
}

142 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__
 \

143 && !
deföed
 
	g__˝lu•lus


145 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

146 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

147 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

148 && (
size_t
Ë(
size
) != 0) \

149 ? ({ *
__±r
 = (*Ë(
±r
); \

150 
FILE
 *
__°ªam
 = (
°ªam
); \

151 
size_t
 
__˙t
; \

152 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

153 
__˙t
 > 0; --__cnt) \

155 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
); \

156 i‡(
__c
 =
EOF
) \

158 *
__±r
++ = 
__c
; \

160 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

161 / (
size_t
Ë(
size
); }) \

162 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

163 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

165 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

166 (Ë(
n
), (
size_t
) 0) \

167 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

169 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

170 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

171 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

172 && (
size_t
Ë(
size
) != 0) \

173 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

174 
FILE
 *
__°ªam
 = (
°ªam
); \

175 
size_t
 
__˙t
; \

176 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

177 
__˙t
 > 0; --__cnt) \

178 i‡(
	`_IO_putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

180 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

181 / (
size_t
Ë(
size
); }) \

182 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

183 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

185 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

186 (Ë(
n
), (
size_t
) 0) \

187 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

191 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2.h

20 #i‚de‡
_STDIO_H


24 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

25 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

26 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

27 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

28 
_G_va_li°
 
__≠
Ë
__THROW
;

30 #ifde‡
__va_¨g_∑ck


31 
__exã∫_Æways_ölöe
 

32 
	`__NTH
 (
	$•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...))

34  
	`__buûtö___•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

35 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

36 
	}
}

37 #ñi‡!
deföed
 
__˝lu•lus


38 
	#•rötf
(
°r
, ...) \

39 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

40 
__VA_ARGS__
)

	)

43 
__exã∫_Æways_ölöe
 

44 
__NTH
 (
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

45 
_G_va_li°
 
__≠
))

47  
	`__buûtö___v•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

48 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

49 
	}
}

51 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


53 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

54 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

55 ...Ë
__THROW
;

56 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

57 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

58 
_G_va_li°
 
__≠
Ë
__THROW
;

60 #ifde‡
__va_¨g_∑ck


61 
__exã∫_Æways_ölöe
 

62 
	`__NTH
 (
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

63 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...))

65  
	`__buûtö___¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

66 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

67 
	}
}

68 #ñi‡!
deföed
 
__˝lu•lus


69 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

70 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

71 
__VA_ARGS__
)

	)

74 
__exã∫_Æways_ölöe
 

75 
__NTH
 (
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

76 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

78  
	`__buûtö___v¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

79 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

80 
	}
}

84 #i‡
__USE_FORTIFY_LEVEL
 > 1

86 
__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

87 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

88 
__¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

89 
__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

90 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__≠
);

91 
__v¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

92 
_G_va_li°
 
__≠
);

94 #ifde‡
__va_¨g_∑ck


95 
__exã∫_Æways_ölöe
 

96 
	$Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...)

98  
	`__Ârötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

99 
	`__va_¨g_∑ck
 ());

100 
	}
}

102 
__exã∫_Æways_ölöe
 

103 
	$¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

105  
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

106 
	}
}

107 #ñi‡!
deföed
 
__˝lu•lus


108 
	#¥ötf
(...) \

109 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

110 
	#Ârötf
(
°ªam
, ...) \

111 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

114 
__exã∫_Æways_ölöe
 

115 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

117 #ifde‡
__USE_EXTERN_INLINES


118  
	`__vÂrötf_chk
 (
°dout
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

120  
	`__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

122 
	}
}

124 
__exã∫_Æways_ölöe
 

125 
	$vÂrötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

126 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

128  
	`__vÂrötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

129 
	}
}

131 #ifde‡
__USE_GNU


133 
	$__a•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

134 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

135 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 4))Ë
__wur
;

136 
	$__va•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

137 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

138 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 0))Ë
__wur
;

139 
	$__d¥ötf_chk
 (
__fd
, 
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

140 ...Ë
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

141 
	$__vd¥ötf_chk
 (
__fd
, 
__Êag
,

142 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

143 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

144 
	$__ob°ack_¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

145 
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

147 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

148 
	$__ob°ack_v¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

149 
__Êag
,

150 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

151 
_G_va_li°
 
__¨gs
)

152 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

154 #ifde‡
__va_¨g_∑ck


155 
__exã∫_Æways_ölöe
 

156 
	`__NTH
 (
	$a•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...))

158  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

159 
	`__va_¨g_∑ck
 ());

160 
	}
}

162 
__exã∫_Æways_ölöe
 

163 
__NTH
 (
	$__a•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

166  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

167 
	`__va_¨g_∑ck
 ());

168 
	}
}

170 
__exã∫_Æways_ölöe
 

171 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

173  
	`__d¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

174 
	`__va_¨g_∑ck
 ());

175 
	}
}

177 
__exã∫_Æways_ölöe
 

178 
__NTH
 (
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

179 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...))

181  
	`__ob°ack_¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

182 
	`__va_¨g_∑ck
 ());

183 
	}
}

184 #ñi‡!
deföed
 
__˝lu•lus


185 
	#a•rötf
(
±r
, ...) \

186 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

187 
	#__a•rötf
(
±r
, ...) \

188 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

189 
	#d¥ötf
(
fd
, ...) \

190 
	`__d¥ötf_chk
 (
fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

191 
	#ob°ack_¥ötf
(
ob°ack
, ...) \

192 
	`__ob°ack_¥ötf_chk
 (
ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

195 
__exã∫_Æways_ölöe
 

196 
__NTH
 (
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

197 
_G_va_li°
 
__≠
))

199  
	`__va•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

200 
	}
}

202 
__exã∫_Æways_ölöe
 

203 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

205  
	`__vd¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

206 
	}
}

208 
__exã∫_Æways_ölöe
 

209 
__NTH
 (
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

210 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

212  
	`__ob°ack_v¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

213 
__≠
);

214 
	}
}

220 *
	$__gës_chk
 (*
__°r
, 
size_t
Ë
__wur
;

221 *
	`__REDIRECT
 (
__gës_w¨n
, (*
__°r
), 
gës
)

222 
__wur
 
	`__w¨«âr
 ("please use fgets or getline instead, gets can't "

225 
__exã∫_Æways_ölöe
 
__wur
 *

226 
	$gës
 (*
__°r
)

228 i‡(
	`__bos
 (
__°r
Ë!(
size_t
) -1)

229  
	`__gës_chk
 (
__°r
, 
	`__bos
 (__str));

230  
	`__gës_w¨n
 (
__°r
);

231 
	}
}

233 *
	$__fgës_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

234 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

235 *
	`__REDIRECT
 (
__fgës_Æüs
,

236 (*
__ª°ri˘
 
__s
, 
__n
,

237 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës
Ë
__wur
;

238 *
	`__REDIRECT
 (
__fgës_chk_w¨n
,

239 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

240 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_chk
)

241 
__wur
 
	`__w¨«âr
 ("fgets called with bigger sizeÅhanÜength "

244 
__exã∫_Æways_ölöe
 
__wur
 *

245 
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

247 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

249 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

250  
	`__fgës_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

252 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

253  
	`__fgës_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

255  
	`__fgës_Æüs
 (
__s
, 
__n
, 
__°ªam
);

256 
	}
}

258 
size_t
 
	$__‰ód_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

259 
size_t
 
__size
, size_à
__n
,

260 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

261 
size_t
 
	`__REDIRECT
 (
__‰ód_Æüs
,

262 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

263 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

264 
‰ód
Ë
__wur
;

265 
size_t
 
	`__REDIRECT
 (
__‰ód_chk_w¨n
,

266 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

267 
size_t
 
__size
, size_à
__n
,

268 
FILE
 *
__ª°ri˘
 
__°ªam
),

269 
__‰ód_chk
)

270 
__wur
 
	`__w¨«âr
 ("fread called with bigger size *ÇmembÅhanÜength "

273 
__exã∫_Æways_ölöe
 
__wur
 
size_t


274 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

275 
FILE
 *
__ª°ri˘
 
__°ªam
)

277 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

279 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

280 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

281 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

282  
	`__‰ód_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

284 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

285  
	`__‰ód_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

287  
	`__‰ód_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

288 
	}
}

290 #ifde‡
__USE_GNU


291 *
	$__fgës_u∆ocked_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
,

292 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

293 *
	`__REDIRECT
 (
__fgës_u∆ocked_Æüs
,

294 (*
__ª°ri˘
 
__s
, 
__n
,

295 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës_u∆ocked
Ë
__wur
;

296 *
	`__REDIRECT
 (
__fgës_u∆ocked_chk_w¨n
,

297 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

298 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_u∆ocked_chk
)

299 
__wur
 
	`__w¨«âr
 ("fgets_unlocked called with bigger sizeÅhanÜength "

302 
__exã∫_Æways_ölöe
 
__wur
 *

303 
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

305 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

307 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

308  
	`__fgës_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

310 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

311  
	`__fgës_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

313  
	`__fgës_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

314 
	}
}

317 #ifde‡
__USE_MISC


318 #unde‡
‰ód_u∆ocked


319 
size_t
 
	$__‰ód_u∆ocked_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

320 
size_t
 
__size
, size_à
__n
,

321 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

322 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_Æüs
,

323 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

324 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

325 
‰ód_u∆ocked
Ë
__wur
;

326 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_chk_w¨n
,

327 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

328 
size_t
 
__size
, size_à
__n
,

329 
FILE
 *
__ª°ri˘
 
__°ªam
),

330 
__‰ód_u∆ocked_chk
)

331 
__wur
 
	`__w¨«âr
 ("fread_unlocked called with bigger size *ÇmembÅhan "

334 
__exã∫_Æways_ölöe
 
__wur
 
size_t


335 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

336 
FILE
 *
__ª°ri˘
 
__°ªam
)

338 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

340 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

341 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

342 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

343  
	`__‰ód_u∆ocked_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

344 
__°ªam
);

346 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

347  
	`__‰ód_u∆ocked_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

348 
__°ªam
);

351 #ifde‡
__USE_EXTERN_INLINES


352 i‡(
	`__buûtö_c⁄°™t_p
 (
__size
)

353 && 
	`__buûtö_c⁄°™t_p
 (
__n
)

354 && (
__size
 | 
__n
Ë< (((
size_t
) 1) << (8 *  (size_t) / 2))

355 && 
__size
 * 
__n
 <= 8)

357 
size_t
 
__˙t
 = 
__size
 * 
__n
;

358 *
__˝å
 = (*Ë
__±r
;

359 i‡(
__˙t
 == 0)

362 ; 
__˙t
 > 0; --__cnt)

364 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
);

365 i‡(
__c
 =
EOF
)

367 *
__˝å
++ = 
__c
;

369  (
__˝å
 - (*Ë
__±r
Ë/ 
__size
;

372  
	`__‰ód_u∆ocked_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

373 
	}
}

	@/usr/include/bits/stdio_lim.h

19 #i‡!
deföed
 
_STDIO_H
 && !deföed 
__√ed_FOPEN_MAX
 && !deföed 
__√ed_IOV_MAX


23 #ifde‡
_STDIO_H


24 
	#L_tm≤am
 20

	)

25 
	#TMP_MAX
 238328

	)

26 
	#FILENAME_MAX
 4096

	)

28 #ifde‡
__USE_POSIX


29 
	#L_˘îmid
 9

	)

30 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


31 
	#L_cu£rid
 9

	)

36 #i‡
deföed
 
__√ed_FOPEN_MAX
 || deföed 
_STDIO_H


37 #unde‡
FOPEN_MAX


38 
	#FOPEN_MAX
 16

	)

41 #i‡
deföed
 
__√ed_IOV_MAX
 && !deföed 
IOV_MAX


42 
	#IOV_MAX
 1024

	)

	@/usr/include/bits/stdlib-ldbl.h

20 #i‚de‡
_STDLIB_H


24 #ifdef 
__USE_ISOC99


25 
__BEGIN_NAMESPACE_C99


26 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

27 
__END_NAMESPACE_C99


30 #ifde‡
__USE_GNU


31 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

34 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


35 #ifde‡
__USE_MISC


36 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

37 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

38 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

39 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

40 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

20 #i‚de‡
_STDLIB_H


24 *
	$__ªÆ∑th_chk
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

25 *
__ª°ri˘
 
__ªsﬁved
,

26 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

27 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

28 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

29 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

30 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

31 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

32 *
__ª°ri˘
 
__ªsﬁved
,

33 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


34 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

37 
__exã∫_Æways_ölöe
 
__wur
 *

38 
	`__NTH
 (
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

40 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

42 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


43 i‡(
	`__bos
 (
__ªsﬁved
Ë< 
PATH_MAX
)

44  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

46  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

49  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

50 
	}
}

53 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

54 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

55 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

56 
size_t
 
__buÊí
), 
±¢ame_r
)

57 
	`__n⁄nuŒ
 ((2));

58 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

59 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

60 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

61 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

64 
__exã∫_Æways_ölöe
 

65 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

67 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

69 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

70  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

71 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

72  
	`__±¢ame_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

74  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

75 
	}
}

78 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

79 
__THROW
 
__wur
;

80 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

81 
w˘omb
Ë
__wur
;

83 
__exã∫_Æways_ölöe
 
__wur
 

84 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

89 
	#__STDLIB_MB_LEN_MAX
 16

	)

90 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


93 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

94  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

95  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

96 
	}
}

99 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

100 
__c⁄°
 *
__ª°ri˘
 
__§c
,

101 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

102 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

103 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

104 
__c⁄°
 *
__ª°ri˘
 
__§c
,

105 
size_t
 
__Àn
), 
mb°owcs
);

106 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

107 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

108 
__c⁄°
 *
__ª°ri˘
 
__§c
,

109 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

110 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

113 
__exã∫_Æways_ölöe
 
size_t


114 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

115 
size_t
 
__Àn
))

117 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

119 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

120  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

121 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

123 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

124  
	`__mb°owcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
,

125 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

127  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

128 
	}
}

131 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

132 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

133 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

134 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

135 (*
__ª°ri˘
 
__d°
,

136 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

137 
size_t
 
__Àn
), 
wc°ombs
);

138 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

139 (*
__ª°ri˘
 
__d°
,

140 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

141 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

142 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

144 
__exã∫_Æways_ölöe
 
size_t


145 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__§c
,

146 
size_t
 
__Àn
))

148 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

150 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

151  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

152 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

153  
	`__wc°ombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

155  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

156 
	}
}

	@/usr/include/bits/string.h

21 #i‚de‡
_STRING_H


26 
	#_STRING_ARCH_u«lig√d
 1

	)

31 #i‡!
deföed
 
__NO_STRING_INLINES
 && deföed 
__USE_STRING_INLINES
 \

32 && 
deföed
 
	g__GNUC__
 && __GNUC__ >2 && !
__BOUNDED_POINTERS__


34 #i‚de‡
__STRING_INLINE


35 #i‚de‡
__exã∫_ölöe


36 
	#__STRING_INLINE
 
ölöe


	)

38 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

43 
	#__STRING_SMALL_GET16
(
§c
, 
idx
) \

44 ((((
__c⁄°
 *Ë(
§c
))[
idx
 + 1] << 8) \

45 | ((
__c⁄°
 *Ë(
§c
))[
idx
])

	)

46 
	#__STRING_SMALL_GET32
(
§c
, 
idx
) \

47 (((((
__c⁄°
 *Ë(
§c
))[
idx
 + 3] << 8 \

48 | ((
__c⁄°
 *Ë(
§c
))[
idx
 + 2]) << 8 \

49 | ((
__c⁄°
 *Ë(
§c
))[
idx
 + 1]) << 8 \

50 | ((
__c⁄°
 *Ë(
§c
))[
idx
])

	)

54 
	#_HAVE_STRING_ARCH_mem˝y
 1

	)

55 
	#mem˝y
(
de°
, 
§c
, 
n
) \

56 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

57 ? 
	`__mem˝y_c
 ((
de°
), (
§c
), (
n
)) \

58 : 
	`__mem˝y_g
 ((
de°
), (
§c
), (
n
))))

	)

59 
	#__mem˝y_c
(
de°
, 
§c
, 
n
) \

60 ((
n
) == 0 \

61 ? (
de°
) \

62 : (((
n
) % 4 == 0) \

63 ? 
	`__mem˝y_by4
 (
de°
, 
§c
, 
n
) \

64 : (((
n
) % 2 == 0) \

65 ? 
	`__mem˝y_by2
 (
de°
, 
§c
, 
n
) \

66 : 
	`__mem˝y_g
 (
de°
, 
§c
, 
n
))))

	)

68 
__STRING_INLINE
 *
__mem˝y_by4
 (*
__de°
, 
__c⁄°
 *
__§c
,

69 
size_t
 
__n
);

71 
__STRING_INLINE
 *

72 
	$__mem˝y_by4
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

74 
__d0
, 
__d1
;

75 *
__tmp
 = 
__de°
;

76 
__asm__
 
__vﬁ©ûe__


84 : "=&r" (
__d0
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

85 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
 / 4)

87  
__de°
;

88 
	}
}

90 
__STRING_INLINE
 *
__mem˝y_by2
 (*
__de°
, 
__c⁄°
 *
__§c
,

91 
size_t
 
__n
);

93 
__STRING_INLINE
 *

94 
	$__mem˝y_by2
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

96 
__d0
, 
__d1
;

97 *
__tmp
 = 
__de°
;

98 
__asm__
 
__vﬁ©ûe__


111 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

112 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
 / 2)

114  
__de°
;

115 
	}
}

117 
__STRING_INLINE
 *
__mem˝y_g
 (*
__de°
, 
__c⁄°
 *
__§c
,

118 
size_t
 
__n
);

120 
__STRING_INLINE
 *

121 
	$__mem˝y_g
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

123 
__d0
, 
__d1
, 
__d2
;

124 *
__tmp
 = 
__de°
;

125 
__asm__
 
__vﬁ©ûe__


136 : "=&c" (
__d0
), "=&D" (
__d1
), "=&S" (
__d2
),

137 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

138 : "0" (
__n
), "1" (
__tmp
), "2" (
__§c
),

139 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
)

141  
__de°
;

142 
	}
}

144 
	#_HAVE_STRING_ARCH_memmove
 1

	)

145 #i‚de‡
_FORCE_INLINES


148 
	#memmove
(
de°
, 
§c
, 
n
Ë
	`__memmove_g
 (de°, src,Ç)

	)

150 
__STRING_INLINE
 *
	$__memmove_g
 (*, 
__c⁄°
 *, 
size_t
)

151 
	`__asm__
 ("memmove");

153 
__STRING_INLINE
 *

154 
	$__memmove_g
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

156 
__d0
, 
__d1
, 
__d2
;

157 *
__tmp
 = 
__de°
;

158 i‡(
__de°
 < 
__§c
)

159 
__asm__
 
__vﬁ©ûe__


162 : "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
),

163 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

164 : "0" (
__n
), "1" (
__§c
), "2" (
__tmp
),

165 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
));

167 
__asm__
 
__vﬁ©ûe__


171 : "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
),

172 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

173 : "0" (
__n
), "1" (__¿- 1 + (
__c⁄°
 *Ë
__§c
),

174 "2" (
__n
 - 1 + (*Ë
__tmp
),

175 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
));

176  
__de°
;

177 
	}
}

181 
	#_HAVE_STRING_ARCH_memcmp
 1

	)

182 #i‚de‡
_FORCE_INLINES


183 #i‚de‡
__PIC__


185 
__STRING_INLINE
 

186 
	$memcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

188 
__d0
, 
__d1
, 
__d2
;

189 
__ªs
;

190 
__asm__
 
__vﬁ©ûe__


198 : "=&a" (
__ªs
), "=&S" (
__d0
), "=&D" (
__d1
), "=&c" (
__d2
)

199 : "0" (0), "1" (
__s1
), "2" (
__s2
), "3" (
__n
),

200 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s1
),

201 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s2
)

203  
__ªs
;

204 
	}
}

209 
	#_HAVE_STRING_ARCH_mem£t
 1

	)

210 
	#_USE_STRING_ARCH_mem£t
 1

	)

211 
	#mem£t
(
s
, 
c
, 
n
) \

212 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

213 ? ((
n
) == 1 \

214 ? 
	`__mem£t_c1
 ((
s
), (
c
)) \

215 : 
	`__mem£t_gc
 ((
s
), (
c
), (
n
))) \

216 : (
	`__buûtö_c⁄°™t_p
 (
c
) \

217 ? (
	`__buûtö_c⁄°™t_p
 (
n
) \

218 ? 
	`__mem£t_c˙
 ((
s
), (
c
), (
n
)) \

219 : 
	`mem£t
 ((
s
), (
c
), (
n
))) \

220 : (
	`__buûtö_c⁄°™t_p
 (
n
) \

221 ? 
	`__mem£t_g˙
 ((
s
), (
c
), (
n
)) \

222 : 
	`mem£t
 ((
s
), (
c
), (
n
))))))

	)

224 
	#__mem£t_c1
(
s
, 
c
Ë({ *
__s
 = (s); \

225 *((*Ë
__s
Ë(Ë(
c
); \

226 
__s
; })

	)

228 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

229 ({ *
__s
 = (
s
); \

231 
__ui
; \

232 
__usi
; \

233 
__uc
; \

234 } *
__u
 = 
__s
; \

235 
__c
 = ((Ë((Ë(
c
))) * 0x01010101; \

241 i‡((
n
) == 3 || (n) >= 5) \

242 
__asm__
 
	`__vﬁ©ûe__
 ("" : "Ù" (
__c
) : "0" (__c)); \

245 
n
) \

248 
__u
->
__ui
 = 
__c
; \

249 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

251 
__u
->
__ui
 = 
__c
; \

252 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

254 
__u
->
__ui
 = 
__c
; \

255 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

257 
__u
->
__usi
 = (Ë
__c
; \

258 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

259 
__u
->
__uc
 = (Ë
__c
; \

263 
__u
->
__ui
 = 
__c
; \

264 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

266 
__u
->
__ui
 = 
__c
; \

267 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

269 
__u
->
__ui
 = 
__c
; \

270 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

272 
__u
->
__usi
 = (Ë
__c
; \

276 
__u
->
__ui
 = 
__c
; \

277 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

279 
__u
->
__ui
 = 
__c
; \

280 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

282 
__u
->
__ui
 = 
__c
; \

283 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

285 
__u
->
__uc
 = (Ë
__c
; \

289 
__u
->
__ui
 = 
__c
; \

290 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

292 
__u
->
__ui
 = 
__c
; \

293 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

295 
__u
->
__ui
 = 
__c
; \

296 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

298 
__u
->
__ui
 = 
__c
; \

303 
__s
; })

	)

305 
	#__mem£t_c˙
(
s
, 
c
, 
n
) \

306 (((
n
) % 4 == 0) \

307 ? 
	`__mem£t_c˙_by4
 (
s
, ((Ë((Ë(
c
))) * 0x01010101,\

308 
n
) \

309 : (((
n
) % 2 == 0) \

310 ? 
	`__mem£t_c˙_by2
 (
s
, \

311 ((Ë((Ë(
c
))) * 0x01010101,\

312 
n
) \

313 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

315 
__STRING_INLINE
 *
__mem£t_c˙_by4
 (*
__s
, 
__c
,

316 
size_t
 
__n
);

318 
__STRING_INLINE
 *

319 
	$__mem£t_c˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
)

321 *
__tmp
 = 
__s
;

322 
__d0
;

323 #ifde‡
__i686__


324 
__asm__
 
__vﬁ©ûe__


327 : "=&a" (
__c
), "=&D" (
__tmp
), "=&c" (
__d0
),

328 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

329 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

332 
__asm__
 
__vﬁ©ûe__


338 : "=&r" (
__c
), "=&r" (
__tmp
), "=&r" (
__d0
),

339 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

340 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

343  
__s
;

344 
	}
}

346 
__STRING_INLINE
 *
__mem£t_c˙_by2
 (*
__s
, 
__c
,

347 
size_t
 
__n
);

349 
__STRING_INLINE
 *

350 
	$__mem£t_c˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
)

352 
__d0
, 
__d1
;

353 *
__tmp
 = 
__s
;

354 #ifde‡
__i686__


355 
__asm__
 
__vﬁ©ûe__


359 : "=&a" (
__d0
), "=&D" (
__tmp
), "=&c" (
__d1
),

360 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

361 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

364 
__asm__
 
__vﬁ©ûe__


370 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__d1
),

371 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

372 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

375  
__s
;

376 
	}
}

378 
	#__mem£t_g˙
(
s
, 
c
, 
n
) \

379 (((
n
) % 4 == 0) \

380 ? 
	`__mem£t_g˙_by4
 (
s
, 
c
, 
n
) \

381 : (((
n
) % 2 == 0) \

382 ? 
	`__mem£t_g˙_by2
 (
s
, 
c
, 
n
) \

383 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

385 
__STRING_INLINE
 *
__mem£t_g˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
);

387 
__STRING_INLINE
 *

388 
	$__mem£t_g˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
)

390 *
__tmp
 = 
__s
;

391 
__d0
;

392 
__asm__
 
__vﬁ©ûe__


402 : "=&q" (
__c
), "=&r" (
__tmp
), "=&r" (
__d0
),

403 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

404 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

406  
__s
;

407 
	}
}

409 
__STRING_INLINE
 *
__mem£t_g˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
);

411 
__STRING_INLINE
 *

412 
	$__mem£t_g˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
)

414 
__d0
, 
__d1
;

415 *
__tmp
 = 
__s
;

416 
__asm__
 
__vﬁ©ûe__


427 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__d1
),

428 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

429 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

431  
__s
;

432 
	}
}

436 
	#_HAVE_STRING_ARCH_memchr
 1

	)

437 #i‚de‡
_FORCE_INLINES


438 
__STRING_INLINE
 *

439 
	$memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

441 
__d0
;

442 #ifde‡
__i686__


443 
__d1
;

445 *
__ªs
;

446 i‡(
__n
 == 0)

447  
NULL
;

448 #ifde‡
__i686__


449 
__asm__
 
__vﬁ©ûe__


453 : "=D" (
__ªs
), "=&c" (
__d0
), "=&r" (
__d1
)

454 : "a" (
__c
), "0" (
__s
), "1" (
__n
), "2" (1),

455 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

458 
__asm__
 
__vﬁ©ûe__


464 : "=D" (
__ªs
), "=&c" (
__d0
)

465 : "a" (
__c
), "0" (
__s
), "1" (
__n
),

466 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

469  
__ªs
 - 1;

470 
	}
}

473 
	#_HAVE_STRING_ARCH_memrchr
 1

	)

474 #i‚de‡
_FORCE_INLINES


475 
__STRING_INLINE
 *
__memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
);

477 
__STRING_INLINE
 *

478 
	$__memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

480 
__d0
;

481 #ifde‡
__i686__


482 
__d1
;

484 *
__ªs
;

485 i‡(
__n
 == 0)

486  
NULL
;

487 #ifde‡
__i686__


488 
__asm__
 
__vﬁ©ûe__


494 : "=D" (
__ªs
), "=&c" (
__d0
), "=&r" (
__d1
)

495 : "a" (
__c
), "0" (
__s
 + 
__n
 - 1), "1" (__n), "2" (-1),

496 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

499 
__asm__
 
__vﬁ©ûe__


506 : "=D" (
__ªs
), "=&c" (
__d0
)

507 : "a" (
__c
), "0" (
__s
 + 
__n
 - 1), "1" (__n),

508 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

511  
__ªs
;

512 
	}
}

513 #ifde‡
__USE_GNU


514 
	#memrchr
(
s
, 
c
, 
n
Ë
	`__memrchr
 ((s), (c), (n))

	)

519 
	#_HAVE_STRING_ARCH_øwmemchr
 1

	)

520 
__STRING_INLINE
 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

522 #i‚de‡
_FORCE_INLINES


523 
__STRING_INLINE
 *

524 
	$__øwmemchr
 (c⁄° *
__s
, 
__c
)

526 
__d0
;

527 *
__ªs
;

528 
__asm__
 
__vﬁ©ûe__


531 : "=D" (
__ªs
), "=&c" (
__d0
)

532 : "a" (
__c
), "0" (
__s
), "1" (0xffffffff),

533 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

535  
__ªs
 - 1;

536 
	}
}

537 #ifde‡
__USE_GNU


538 
__STRING_INLINE
 *

539 
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

541  
	`__øwmemchr
 (
__s
, 
__c
);

542 
	}
}

548 
	#_HAVE_STRING_ARCH_°æí
 1

	)

549 
	#°æí
(
°r
) \

550 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
°r
) \

551 ? 
	`__buûtö_°æí
 (
°r
) \

552 : 
	`__°æí_g
 (
°r
)))

	)

553 
__STRING_INLINE
 
size_t
 
__°æí_g
 (
__c⁄°
 *
__°r
);

555 
__STRING_INLINE
 
size_t


556 
	$__°æí_g
 (
__c⁄°
 *
__°r
)

558 
__dummy
;

559 
__c⁄°
 *
__tmp
 = 
__°r
;

560 
__asm__
 
__vﬁ©ûe__


566 : "Ù" (
__tmp
), "=&q" (
__dummy
)

567 : "0" (
__°r
),

568 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__°r
)

570  
__tmp
 - 
__°r
 - 1;

571 
	}
}

575 
	#_HAVE_STRING_ARCH_°r˝y
 1

	)

576 
	#°r˝y
(
de°
, 
§c
) \

577 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

578 ? ( ((
§c
)[0]Ë=1 && 
	`°æí
 (src) + 1 <= 8 \

579 ? 
	`__°r˝y_a_smÆl
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

580 : (*Ë
	`mem˝y
 ((*Ë(
de°
), \

581 (
__c⁄°
 *Ë(
§c
), \

582 
	`°æí
 (
§c
) + 1)) \

583 : 
	`__°r˝y_g
 ((
de°
), (
§c
))))

	)

585 
	#__°r˝y_a_smÆl
(
de°
, 
§c
, 
§˛í
) \

586 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

588 
__ui
; \

589 
__usi
; \

590 
__uc
; \

591 
__c
; \

592 } *
__u
 = (*Ë
__de°
; \

593 
§˛í
) \

596 
__u
->
__uc
 = '\0'; \

599 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

602 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

603 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

604 
__u
->
__uc
 = '\0'; \

607 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

610 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

611 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

612 
__u
->
__uc
 = '\0'; \

615 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

616 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

617 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

620 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

621 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

622 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

623 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

624 
__u
->
__uc
 = '\0'; \

627 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

628 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

629 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 4); \

632 (*Ë
__de°
; }))

	)

634 
__STRING_INLINE
 *
__°r˝y_g
 (*
__de°
, 
__c⁄°
 *
__§c
);

636 
__STRING_INLINE
 *

637 
	$__°r˝y_g
 (*
__de°
, 
__c⁄°
 *
__§c
)

639 *
__tmp
 = 
__de°
;

640 
__dummy
;

641 
__asm__
 
__vﬁ©ûe__


650 : "=&r" (
__§c
), "=&r" (
__tmp
), "=&q" (
__dummy
),

651 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

652 : "0" (
__§c
), "1" (
__tmp
),

653 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

655  
__de°
;

656 
	}
}

659 #ifde‡
__USE_GNU


660 
	#_HAVE_STRING_ARCH_°p˝y
 1

	)

662 
	#__°p˝y
(
de°
, 
§c
) \

663 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

664 ? (
	`°æí
 (
§c
) + 1 <= 8 \

665 ? 
	`__°p˝y_a_smÆl
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

666 : 
	`__°p˝y_c
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1)) \

667 : 
	`__°p˝y_g
 ((
de°
), (
§c
))))

	)

668 
	#__°p˝y_c
(
de°
, 
§c
, 
§˛í
) \

669 ((
§˛í
) % 4 == 0 \

670 ? 
	`__memp˝y_by4
 (
de°
, 
§c
, 
§˛í
) - 1 \

671 : ((
§˛í
) % 2 == 0 \

672 ? 
	`__memp˝y_by2
 (
de°
, 
§c
, 
§˛í
) - 1 \

673 : 
	`__memp˝y_byn
 (
de°
, 
§c
, 
§˛í
Ë- 1))

	)

676 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 ((de°), (§c))

	)

678 
	#__°p˝y_a_smÆl
(
de°
, 
§c
, 
§˛í
) \

679 (
	`__exãnsi⁄__
 ({ union { \

680 
__ui
; \

681 
__usi
; \

682 
__uc
; \

683 
__c
; \

684 } *
__u
 = (*Ë(
de°
); \

685 
§˛í
) \

688 
__u
->
__uc
 = '\0'; \

691 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

692 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1); \

695 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

696 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

697 
__u
->
__uc
 = '\0'; \

700 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

701 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3); \

704 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

705 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

706 
__u
->
__uc
 = '\0'; \

709 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

710 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

711 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

712 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1); \

715 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

716 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

717 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

718 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

719 
__u
->
__uc
 = '\0'; \

722 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

723 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

724 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 4); \

725 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3); \

728 (*Ë
__u
; }))

	)

730 
__STRING_INLINE
 *
__memp˝y_by4
 (*
__de°
, 
__c⁄°
 *
__§c
,

731 
size_t
 
__§˛í
);

733 
__STRING_INLINE
 *

734 
	$__memp˝y_by4
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__§˛í
)

736 *
__tmp
 = 
__de°
;

737 
__d0
, 
__d1
;

738 
__asm__
 
__vﬁ©ûe__


746 : "=&r" (
__d0
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

747 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 4)

749  
__tmp
;

750 
	}
}

752 
__STRING_INLINE
 *
__memp˝y_by2
 (*
__de°
, 
__c⁄°
 *
__§c
,

753 
size_t
 
__§˛í
);

755 
__STRING_INLINE
 *

756 
	$__memp˝y_by2
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__§˛í
)

758 *
__tmp
 = 
__de°
;

759 
__d0
, 
__d1
;

760 
__asm__
 
__vﬁ©ûe__


773 : "=&q" (
__d0
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
),

774 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

775 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 2),

776 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

778  
__tmp
 + 2;

779 
	}
}

781 
__STRING_INLINE
 *
__memp˝y_byn
 (*
__de°
, 
__c⁄°
 *
__§c
,

782 
size_t
 
__§˛í
);

784 
__STRING_INLINE
 *

785 
	$__memp˝y_byn
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__§˛í
)

787 
__d0
, 
__d1
;

788 *
__tmp
 = 
__de°
;

789 
__asm__
 
__vﬁ©ûe__


800 : "=D" (
__tmp
), "=&c" (
__d0
), "=&S" (
__d1
),

801 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

802 : "0" (
__tmp
), "1" (
__§˛í
), "2" (
__§c
),

803 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

805  
__tmp
;

806 
	}
}

808 
__STRING_INLINE
 *
__°p˝y_g
 (*
__de°
, 
__c⁄°
 *
__§c
);

810 
__STRING_INLINE
 *

811 
	$__°p˝y_g
 (*
__de°
, 
__c⁄°
 *
__§c
)

813 *
__tmp
 = 
__de°
;

814 
__dummy
;

815 
__asm__
 
__vﬁ©ûe__


824 : "=&r" (
__§c
), "Ù" (
__tmp
), "=&q" (
__dummy
),

825 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

826 : "0" (
__§c
), "1" (
__tmp
),

827 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

829  
__tmp
 - 1;

830 
	}
}

835 
	#_HAVE_STRING_ARCH_°∫˝y
 1

	)

836 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

837 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

838 ? ((
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

839 ? (*Ë
	`mem˝y
 ((*Ë(
de°
), \

840 (
__c⁄°
 *Ë(
§c
), 
n
) \

841 : 
	`__°∫˝y_cg
 ((
de°
), (
§c
), 
	`°æí
 (§cË+ 1, 
n
))) \

842 : 
	`__°∫˝y_gg
 ((
de°
), (
§c
), 
n
)))

	)

843 
	#__°∫˝y_cg
(
de°
, 
§c
, 
§˛í
, 
n
) \

844 (((
§˛í
) % 4 == 0) \

845 ? 
	`__°∫˝y_by4
 (
de°
, 
§c
, 
§˛í
, 
n
) \

846 : (((
§˛í
) % 2 == 0) \

847 ? 
	`__°∫˝y_by2
 (
de°
, 
§c
, 
§˛í
, 
n
) \

848 : 
	`__°∫˝y_byn
 (
de°
, 
§c
, 
§˛í
, 
n
)))

	)

850 
__STRING_INLINE
 *
__°∫˝y_by4
 (*
__de°
, 
__c⁄°
 
__§c
[],

851 
size_t
 
__§˛í
, size_à
__n
);

853 
__STRING_INLINE
 *

854 
	$__°∫˝y_by4
 (*
__de°
, 
__c⁄°
 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

856 *
__tmp
 = 
__de°
;

857 
__dummy1
, 
__dummy2
;

858 
__asm__
 
__vﬁ©ûe__


866 : "=&r" (
__dummy1
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__dummy2
),

867 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

868 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 4),

869 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

871 (Ë
	`mem£t
 (
__tmp
, '\0', 
__n
 - 
__§˛í
);

872  
__de°
;

873 
	}
}

875 
__STRING_INLINE
 *
__°∫˝y_by2
 (*
__de°
, 
__c⁄°
 
__§c
[],

876 
size_t
 
__§˛í
, size_à
__n
);

878 
__STRING_INLINE
 *

879 
	$__°∫˝y_by2
 (*
__de°
, 
__c⁄°
 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

881 *
__tmp
 = 
__de°
;

882 
__dummy1
, 
__dummy2
;

883 
__asm__
 
__vﬁ©ûe__


896 : "=&q" (
__dummy1
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__dummy2
),

897 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

898 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 2),

899 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

901 (Ë
	`mem£t
 (
__tmp
 + 2, '\0', 
__n
 - 
__§˛í
);

902  
__de°
;

903 
	}
}

905 
__STRING_INLINE
 *
__°∫˝y_byn
 (*
__de°
, 
__c⁄°
 
__§c
[],

906 
size_t
 
__§˛í
, size_à
__n
);

908 
__STRING_INLINE
 *

909 
	$__°∫˝y_byn
 (*
__de°
, 
__c⁄°
 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

911 
__d0
, 
__d1
;

912 *
__tmp
 = 
__de°
;

913 
__asm__
 
__vﬁ©ûe__


924 : "=D" (
__tmp
), "=&c" (
__d0
), "=&S" (
__d1
),

925 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

926 : "1" (
__§˛í
), "0" (
__tmp
),"2" (
__§c
),

927 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

929 (Ë
	`mem£t
 (
__tmp
, '\0', 
__n
 - 
__§˛í
);

930  
__de°
;

931 
	}
}

933 
__STRING_INLINE
 *
__°∫˝y_gg
 (*
__de°
, 
__c⁄°
 *
__§c
,

934 
size_t
 
__n
);

936 
__STRING_INLINE
 *

937 
	$__°∫˝y_gg
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

939 *
__tmp
 = 
__de°
;

940 
__dummy
;

941 i‡(
__n
 > 0)

942 
__asm__
 
__vﬁ©ûe__


958 : "=&r" (
__§c
), "=&r" (
__tmp
), "=&q" (
__dummy
), "=&r" (
__n
)

959 : "0" (
__§c
), "1" (
__tmp
), "3" (
__n
)

962  
__de°
;

963 
	}
}

967 
	#_HAVE_STRING_ARCH_°rˇt
 1

	)

968 
	#°rˇt
(
de°
, 
§c
) \

969 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

970 ? 
	`__°rˇt_c
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

971 : 
	`__°rˇt_g
 ((
de°
), (
§c
))))

	)

973 
__STRING_INLINE
 *
__°rˇt_c
 (*
__de°
, 
__c⁄°
 
__§c
[],

974 
size_t
 
__§˛í
);

976 
__STRING_INLINE
 *

977 
	$__°rˇt_c
 (*
__de°
, 
__c⁄°
 
__§c
[], 
size_t
 
__§˛í
)

979 #ifde‡
__i686__


980 
__d0
;

981 *
__tmp
;

982 
__asm__
 
__vﬁ©ûe__


984 : "=D" (
__tmp
), "=&c" (
__d0
),

985 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

986 : "0" (
__de°
), "1" (0xffffffff), "a" (0),

987 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

989 --
__tmp
;

991 *
__tmp
 = 
__de°
 - 1;

992 
__asm__
 
__vﬁ©ûe__


997 : "Ù" (
__tmp
),

998 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

999 : "0" (
__tmp
),

1000 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

1003 (Ë
	`mem˝y
 (
__tmp
, 
__§c
, 
__§˛í
);

1004  
__de°
;

1005 
	}
}

1007 
__STRING_INLINE
 *
__°rˇt_g
 (*
__de°
, 
__c⁄°
 *
__§c
);

1009 
__STRING_INLINE
 *

1010 
	$__°rˇt_g
 (*
__de°
, 
__c⁄°
 *
__§c
)

1012 *
__tmp
 = 
__de°
 - 1;

1013 
__dummy
;

1014 
__asm__
 
__vﬁ©ûe__


1026 : "=&q" (
__dummy
), "=&r" (
__tmp
), "=&r" (
__§c
),

1027 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

1028 : "1" (
__tmp
), "2" (
__§c
),

1029 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

1031  
__de°
;

1032 
	}
}

1036 
	#_HAVE_STRING_ARCH_°∫ˇt
 1

	)

1037 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

1038 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

1039 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

1040 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

1041 ? 
	`°rˇt
 (
__de°
, (
§c
)) \

1042 : (*(*)
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

1043 (
__c⁄°
 *Ë(
§c
), \

1044 (
n
)Ë0, 
__de°
)) \

1045 : 
	`__°∫ˇt_g
 (
__de°
, (
§c
), (
n
)); }))

	)

1047 
__STRING_INLINE
 *
__°∫ˇt_g
 (*
__de°
, 
__c⁄°
 
__§c
[],

1048 
size_t
 
__n
);

1050 
__STRING_INLINE
 *

1051 
	$__°∫ˇt_g
 (*
__de°
, 
__c⁄°
 
__§c
[], 
size_t
 
__n
)

1053 *
__tmp
 = 
__de°
;

1054 
__dummy
;

1055 #ifde‡
__i686__


1056 
__asm__
 
__vﬁ©ûe__


1070 : "=&a" (
__dummy
), "=&D" (
__tmp
), "=&S" (
__§c
), "=&c" (
__n
)

1071 : "g" (
__n
), "0" (0), "1" (
__tmp
), "2" (
__§c
), "3" (0xffffffff)

1074 --
__tmp
;

1075 
__asm__
 
__vﬁ©ûe__


1092 : "=&q" (
__dummy
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__n
)

1093 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
)

1096  
__de°
;

1097 
	}
}

1101 
	#_HAVE_STRING_ARCH_°rcmp
 1

	)

1102 
	#°rcmp
(
s1
, 
s2
) \

1103 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

1104 && ( ((
s1
)[0]Ë!1 || 
	`°æí
 (s1) >= 4) \

1105 && ( ((
s2
)[0]Ë!1 || 
	`°æí
 (s2) >= 4) \

1106 ? 
	`memcmp
 ((
__c⁄°
 *Ë(
s1
), (__c⁄° *Ë(
s2
), \

1107 (
	`°æí
 (
s1
Ë< såÀ¿(
s2
) \

1108 ? 
	`°æí
 (
s1
Ë: såÀ¿(
s2
)) + 1) \

1109 : (
	`__buûtö_c⁄°™t_p
 (
s1
) &&  ((s1)[0]) == 1 \

1110 &&  ((
s2
)[0]Ë=1 && 
	`°æí
 (
s1
) < 4 \

1111 ? (
	`__buûtö_c⁄°™t_p
 (
s2
) &&  ((s2)[0]) == 1 \

1112 ? 
	`__°rcmp_cc
 ((
__c⁄°
 *Ë(
s1
), \

1113 (
__c⁄°
 *Ë(
s2
), \

1114 
	`°æí
 (
s1
)) \

1115 : 
	`__°rcmp_cg
 ((
__c⁄°
 *Ë(
s1
), \

1116 (
__c⁄°
 *Ë(
s2
), \

1117 
	`°æí
 (
s1
))) \

1118 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&&  ((
s1
)[0]) == 1 \

1119 &&  ((
s2
)[0]Ë=1 && 
	`°æí
 (s2) < 4 \

1120 ? (
	`__buûtö_c⁄°™t_p
 (
s1
) \

1121 ? 
	`__°rcmp_cc
 ((
__c⁄°
 *Ë(
s1
), \

1122 (
__c⁄°
 *Ë(
s2
), \

1123 
	`°æí
 (
s2
)) \

1124 : 
	`__°rcmp_gc
 ((
__c⁄°
 *Ë(
s1
), \

1125 (
__c⁄°
 *Ë(
s2
), \

1126 
	`°æí
 (
s2
))) \

1127 : 
	`__°rcmp_gg
 ((
s1
), (
s2
))))))

	)

1129 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

1130 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = (
s1
)[0] - (
s2
)[0]; \

1131 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

1133 
__ªsu…
 = (
s1
)[1] - (
s2
)[1]; \

1134 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

1136 
__ªsu…
 = (
s1
)[2] - (
s2
)[2]; \

1137 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

1138 
__ªsu…
 = (
s1
)[3] - (
s2
)[3]; \

1141 
__ªsu…
; }))

	)

1143 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

1144 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s2
 = (
s2
); \

1145 
__ªsu…
 = (
s1
)[0] - 
__s2
[0]; \

1146 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

1148 
__ªsu…
 = (
s1
)[1] - 
__s2
[1]; \

1149 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

1151 
__ªsu…
 = (
s1
)[2] - 
__s2
[2]; \

1152 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

1153 
__ªsu…
 = (
s1
)[3] - 
__s2
[3]; \

1156 
__ªsu…
; }))

	)

1158 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

1159 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s1
 = (
s1
); \

1160 
__ªsu…
 = 
__s1
[0] - (
s2
)[0]; \

1161 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

1163 
__ªsu…
 = 
__s1
[1] - (
s2
)[1]; \

1164 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

1166 
__ªsu…
 = 
__s1
[2] - (
s2
)[2]; \

1167 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

1168 
__ªsu…
 = 
__s1
[3] - (
s2
)[3]; \

1171 
__ªsu…
; }))

	)

1173 
__STRING_INLINE
 
__°rcmp_gg
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
);

1175 
__STRING_INLINE
 

1176 
	$__°rcmp_gg
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

1178 
__ªs
;

1179 
__asm__
 
__vﬁ©ûe__


1195 : "=q" (
__ªs
), "=&r" (
__s1
), "=&r" (
__s2
)

1196 : "1" (
__s1
), "2" (
__s2
),

1197 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s1
),

1198 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s2
)

1200  
__ªs
;

1201 
	}
}

1205 
	#_HAVE_STRING_ARCH_°∫cmp
 1

	)

1206 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

1207 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`°æí
 (s1Ë< ((
size_t
Ë(
n
)) \

1208 ? 
	`°rcmp
 ((
s1
), (
s2
)) \

1209 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`°æí
 (s2Ë< ((
size_t
Ë(
n
))\

1210 ? 
	`°rcmp
 ((
s1
), (
s2
)) \

1211 : 
	`__°∫cmp_g
 ((
s1
), (
s2
), (
n
)))))

	)

1213 
__STRING_INLINE
 
__°∫cmp_g
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

1214 
size_t
 
__n
);

1216 
__STRING_INLINE
 

1217 
	$__°∫cmp_g
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

1219 
__ªs
;

1220 
__asm__
 
__vﬁ©ûe__


1239 : "=q" (
__ªs
), "=&r" (
__s1
), "=&r" (
__s2
), "=&r" (
__n
)

1240 : "1" (
__s1
), "2" (
__s2
), "3" (
__n
),

1241 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s1
),

1242 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s2
)

1244  
__ªs
;

1245 
	}
}

1249 
	#_HAVE_STRING_ARCH_°rchr
 1

	)

1250 
	#_USE_STRING_ARCH_°rchr
 1

	)

1251 
	#°rchr
(
s
, 
c
) \

1252 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1253 ? ((
c
) == '\0' \

1254 ? (*Ë
	`__øwmemchr
 ((
s
), (
c
)) \

1255 : 
	`__°rchr_c
 ((
s
), ((
c
) & 0xff) << 8)) \

1256 : 
	`__°rchr_g
 ((
s
), (
c
))))

	)

1258 
__STRING_INLINE
 *
__°rchr_c
 (
__c⁄°
 *
__s
, 
__c
);

1260 
__STRING_INLINE
 *

1261 
	$__°rchr_c
 (
__c⁄°
 *
__s
, 
__c
)

1263 
__d0
;

1264 *
__ªs
;

1265 
__asm__
 
__vﬁ©ûe__


1275 : "Ù" (
__ªs
), "=&a" (
__d0
)

1276 : "0" (
__s
), "1" (
__c
),

1277 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1279  
__ªs
;

1280 
	}
}

1282 
__STRING_INLINE
 *
__°rchr_g
 (
__c⁄°
 *
__s
, 
__c
);

1284 
__STRING_INLINE
 *

1285 
	$__°rchr_g
 (
__c⁄°
 *
__s
, 
__c
)

1287 
__d0
;

1288 *
__ªs
;

1289 
__asm__
 
__vﬁ©ûe__


1300 : "Ù" (
__ªs
), "=&a" (
__d0
)

1301 : "0" (
__s
), "1" (
__c
),

1302 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1304  
__ªs
;

1305 
	}
}

1309 
	#_HAVE_STRING_ARCH_°rch∫ul
 1

	)

1310 
	#__°rch∫ul
(
s
, 
c
) \

1311 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1312 ? ((
c
) == '\0' \

1313 ? (*Ë
	`__øwmemchr
 ((
s
), 
c
) \

1314 : 
	`__°rch∫ul_c
 ((
s
), ((
c
) & 0xff) << 8)) \

1315 : 
	`__°rch∫ul_g
 ((
s
), 
c
)))

	)

1317 
__STRING_INLINE
 *
__°rch∫ul_c
 (
__c⁄°
 *
__s
, 
__c
);

1319 
__STRING_INLINE
 *

1320 
	$__°rch∫ul_c
 (
__c⁄°
 *
__s
, 
__c
)

1322 
__d0
;

1323 *
__ªs
;

1324 
__asm__
 
__vﬁ©ûe__


1334 : "Ù" (
__ªs
), "=&a" (
__d0
)

1335 : "0" (
__s
), "1" (
__c
),

1336 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1338  
__ªs
;

1339 
	}
}

1341 
__STRING_INLINE
 *
__°rch∫ul_g
 (
__c⁄°
 *
__s
, 
__c
);

1343 
__STRING_INLINE
 *

1344 
	$__°rch∫ul_g
 (
__c⁄°
 *
__s
, 
__c
)

1346 
__d0
;

1347 *
__ªs
;

1348 
__asm__
 
__vﬁ©ûe__


1359 : "Ù" (
__ªs
), "=&a" (
__d0
)

1360 : "0" (
__s
), "1" (
__c
),

1361 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1363  
__ªs
;

1364 
	}
}

1365 #ifde‡
__USE_GNU


1366 
	#°rch∫ul
(
s
, 
c
Ë
	`__°rch∫ul
 ((s), (c))

	)

1370 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1372 
	#_HAVE_STRING_ARCH_ödex
 1

	)

1373 
	#ödex
(
s
, 
c
) \

1374 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1375 ? 
	`__°rchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1376 : 
	`__°rchr_g
 ((
s
), (
c
))))

	)

1381 
	#_HAVE_STRING_ARCH_°ºchr
 1

	)

1382 
	#°ºchr
(
s
, 
c
) \

1383 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1384 ? 
	`__°ºchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1385 : 
	`__°ºchr_g
 ((
s
), (
c
))))

	)

1387 #ifde‡
__i686__


1388 
__STRING_INLINE
 *
__°ºchr_c
 (
__c⁄°
 *
__s
, 
__c
);

1390 
__STRING_INLINE
 *

1391 
	$__°ºchr_c
 (
__c⁄°
 *
__s
, 
__c
)

1393 
__d0
, 
__d1
;

1394 *
__ªs
;

1395 
__asm__
 
__vﬁ©ûe__


1403 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1404 : "0" (1), "1" (
__s
), "2" (
__c
),

1405 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1407  
__ªs
 - 1;

1408 
	}
}

1410 
__STRING_INLINE
 *
__°ºchr_g
 (
__c⁄°
 *
__s
, 
__c
);

1412 
__STRING_INLINE
 *

1413 
	$__°ºchr_g
 (
__c⁄°
 *
__s
, 
__c
)

1415 
__d0
, 
__d1
;

1416 *
__ªs
;

1417 
__asm__
 
__vﬁ©ûe__


1426 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1427 : "0" (1), "1" (
__s
), "2" (
__c
),

1428 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1430  
__ªs
 - 1;

1431 
	}
}

1433 
__STRING_INLINE
 *
__°ºchr_c
 (
__c⁄°
 *
__s
, 
__c
);

1435 
__STRING_INLINE
 *

1436 
	$__°ºchr_c
 (
__c⁄°
 *
__s
, 
__c
)

1438 
__d0
, 
__d1
;

1439 *
__ªs
;

1440 
__asm__
 
__vﬁ©ûe__


1450 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1451 : "0" (0), "1" (
__s
), "2" (
__c
),

1452 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1454  
__ªs
;

1455 
	}
}

1457 
__STRING_INLINE
 *
__°ºchr_g
 (
__c⁄°
 *
__s
, 
__c
);

1459 
__STRING_INLINE
 *

1460 
	$__°ºchr_g
 (
__c⁄°
 *
__s
, 
__c
)

1462 
__d0
, 
__d1
;

1463 *
__ªs
;

1464 
__asm__
 
__vﬁ©ûe__


1475 : "Ù" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1476 : "0" (0), "1" (
__s
), "2" (
__c
),

1477 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1479  
__ªs
;

1480 
	}
}

1484 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1486 
	#_HAVE_STRING_ARCH_rödex
 1

	)

1487 
	#rödex
(
s
, 
c
) \

1488 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1489 ? 
	`__°ºchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1490 : 
	`__°ºchr_g
 ((
s
), (
c
))))

	)

1496 
	#_HAVE_STRING_ARCH_°rc•n
 1

	)

1497 
	#°rc•n
(
s
, 
ªje˘
) \

1498 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
) &&  ((reject)[0]) == 1 \

1499 ? ((
ªje˘
)[0] == '\0' \

1500 ? 
	`°æí
 (
s
) \

1501 : ((
ªje˘
)[1] == '\0' \

1502 ? 
	`__°rc•n_c1
 ((
s
), (((
ªje˘
)[0] << 8) & 0xff00)) \

1503 : 
	`__°rc•n_cg
 ((
s
), (
ªje˘
), 
	`°æí
 (reject)))) \

1504 : 
	`__°rc•n_g
 ((
s
), (
ªje˘
))))

	)

1506 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
);

1508 #i‚de‡
_FORCE_INLINES


1509 
__STRING_INLINE
 
size_t


1510 
	$__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
)

1512 
__d0
;

1513 *
__ªs
;

1514 
__asm__
 
__vﬁ©ûe__


1523 : "Ù" (
__ªs
), "=&a" (
__d0
)

1524 : "0" (
__s
), "1" (
__ªje˘
),

1525 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1527  (
__ªs
 - 1Ë- 
__s
;

1528 
	}
}

1531 
__STRING_INLINE
 
size_t
 
__°rc•n_cg
 (
__c⁄°
 *
__s
, __c⁄° 
__ªje˘
[],

1532 
size_t
 
__ªje˘_Àn
);

1534 
__STRING_INLINE
 
size_t


1535 
	$__°rc•n_cg
 (
__c⁄°
 *
__s
, __c⁄° 
__ªje˘
[], 
size_t
 
__ªje˘_Àn
)

1537 
__d0
, 
__d1
, 
__d2
;

1538 
__c⁄°
 *
__ªs
;

1539 
__asm__
 
__vﬁ©ûe__


1550 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1551 : "0" (
__s
), "d" (
__ªje˘
), "g" (
__ªje˘_Àn
)

1553  (
__ªs
 - 1Ë- 
__s
;

1554 
	}
}

1556 
__STRING_INLINE
 
size_t
 
__°rc•n_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
);

1557 #ifde‡
__PIC__


1559 
__STRING_INLINE
 
size_t


1560 
	$__°rc•n_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

1562 
__d0
, 
__d1
, 
__d2
;

1563 
__c⁄°
 *
__ªs
;

1564 
__asm__
 
__vﬁ©ûe__


1581 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1582 : "r" (
__ªje˘
), "0" (
__s
), "1" (0), "2" (0xffffffff)

1584  (
__ªs
 - 1Ë- 
__s
;

1585 
	}
}

1587 
__STRING_INLINE
 
size_t


1588 
	$__°rc•n_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

1590 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1591 
__c⁄°
 *
__ªs
;

1592 
__asm__
 
__vﬁ©ûe__


1606 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1607 : "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (
__ªje˘
), "b" (__reject)

1610  (
__ªs
 - 1Ë- 
__s
;

1611 
	}
}

1617 
	#_HAVE_STRING_ARCH_°r•n
 1

	)

1618 
	#°r•n
(
s
, 
ac˚±
) \

1619 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
) &&  ((accept)[0]) == 1 \

1620 ? ((
ac˚±
)[0] == '\0' \

1621 ? ((Ë(
s
), 0) \

1622 : ((
ac˚±
)[1] == '\0' \

1623 ? 
	`__°r•n_c1
 ((
s
), (((
ac˚±
)[0] << 8 ) & 0xff00)) \

1624 : 
	`__°r•n_cg
 ((
s
), (
ac˚±
), 
	`°æí
 (accept)))) \

1625 : 
	`__°r•n_g
 ((
s
), (
ac˚±
))))

	)

1627 #i‚de‡
_FORCE_INLINES


1628 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
);

1630 
__STRING_INLINE
 
size_t


1631 
	$__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
)

1633 
__d0
;

1634 *
__ªs
;

1636 
__asm__
 
__vﬁ©ûe__


1642 : "Ù" (
__ªs
), "=&q" (
__d0
)

1643 : "0" (
__s
), "1" (
__ac˚±
),

1644 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1646  (
__ªs
 - 1Ë- 
__s
;

1647 
	}
}

1650 
__STRING_INLINE
 
size_t
 
__°r•n_cg
 (
__c⁄°
 *
__s
, __c⁄° 
__ac˚±
[],

1651 
size_t
 
__ac˚±_Àn
);

1653 
__STRING_INLINE
 
size_t


1654 
	$__°r•n_cg
 (
__c⁄°
 *
__s
, __c⁄° 
__ac˚±
[], 
size_t
 
__ac˚±_Àn
)

1656 
__d0
, 
__d1
, 
__d2
;

1657 
__c⁄°
 *
__ªs
;

1658 
__asm__
 
__vﬁ©ûe__


1669 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1670 : "0" (
__s
), "g" (
__ac˚±
), "g" (
__ac˚±_Àn
),

1673 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
),

1674 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__ac˚±_Àn
]; } *)
__ac˚±
)

1676  (
__ªs
 - 1Ë- 
__s
;

1677 
	}
}

1679 
__STRING_INLINE
 
size_t
 
__°r•n_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
);

1680 #ifde‡
__PIC__


1682 
__STRING_INLINE
 
size_t


1683 
	$__°r•n_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

1685 
__d0
, 
__d1
, 
__d2
;

1686 
__c⁄°
 *
__ªs
;

1687 
__asm__
 
__vﬁ©ûe__


1703 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1704 : "d" (
__ac˚±
), "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (__accept)

1706  (
__ªs
 - 1Ë- 
__s
;

1707 
	}
}

1709 
__STRING_INLINE
 
size_t


1710 
	$__°r•n_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

1712 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1713 
__c⁄°
 *
__ªs
;

1714 
__asm__
 
__vﬁ©ûe__


1728 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1729 : "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (
__ac˚±
), "b" (__accept)

1731  (
__ªs
 - 1Ë- 
__s
;

1732 
	}
}

1737 
	#_HAVE_STRING_ARCH_°Ωbrk
 1

	)

1738 
	#°Ωbrk
(
s
, 
ac˚±
) \

1739 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
) &&  ((accept)[0]) == 1 \

1740 ? ((
ac˚±
)[0] == '\0' \

1741 ? ((Ë(
s
), (*) 0) \

1742 : ((
ac˚±
)[1] == '\0' \

1743 ? 
	`°rchr
 ((
s
), (
ac˚±
)[0]) \

1744 : 
	`__°Ωbrk_cg
 ((
s
), (
ac˚±
), 
	`°æí
 (accept)))) \

1745 : 
	`__°Ωbrk_g
 ((
s
), (
ac˚±
))))

	)

1747 
__STRING_INLINE
 *
__°Ωbrk_cg
 (
__c⁄°
 *
__s
, __c⁄° 
__ac˚±
[],

1748 
size_t
 
__ac˚±_Àn
);

1750 
__STRING_INLINE
 *

1751 
	$__°Ωbrk_cg
 (
__c⁄°
 *
__s
, __c⁄° 
__ac˚±
[], 
size_t
 
__ac˚±_Àn
)

1753 
__d0
, 
__d1
, 
__d2
;

1754 *
__ªs
;

1755 
__asm__
 
__vﬁ©ûe__


1770 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1771 : "0" (
__s
), "d" (
__ac˚±
), "g" (
__ac˚±_Àn
)

1773  
__ªs
;

1774 
	}
}

1776 
__STRING_INLINE
 *
__°Ωbrk_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
);

1777 #ifde‡
__PIC__


1779 
__STRING_INLINE
 *

1780 
	$__°Ωbrk_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

1782 
__d0
, 
__d1
, 
__d2
;

1783 *
__ªs
;

1784 
__asm__
 
__vﬁ©ûe__


1805 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1806 : "d" (
__ac˚±
), "0" (
__s
), "1" (0), "2" (0xffffffff)

1808  
__ªs
;

1809 
	}
}

1811 
__STRING_INLINE
 *

1812 
	$__°Ωbrk_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

1814 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1815 *
__ªs
;

1816 
__asm__
 
__vﬁ©ûe__


1835 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&d" (
__d2
), "=&D" (
__d3
)

1836 : "0" (
__s
), "1" (0), "2" (0xffffffff), "b" (
__ac˚±
)

1838  
__ªs
;

1839 
	}
}

1844 
	#_HAVE_STRING_ARCH_°r°r
 1

	)

1845 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1846 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
) &&  ((needle)[0]) == 1 \

1847 ? ((
√edÀ
)[0] == '\0' \

1848 ? (
hay°ack
) \

1849 : ((
√edÀ
)[1] == '\0' \

1850 ? 
	`°rchr
 ((
hay°ack
), (
√edÀ
)[0]) \

1851 : 
	`__°r°r_cg
 ((
hay°ack
), (
√edÀ
), \

1852 
	`°æí
 (
√edÀ
)))) \

1853 : 
	`__°r°r_g
 ((
hay°ack
), (
√edÀ
))))

	)

1857 
__STRING_INLINE
 *
__°r°r_cg
 (
__c⁄°
 *
__hay°ack
, __c⁄° 
__√edÀ
[],

1858 
size_t
 
__√edÀ_Àn
);

1860 
__STRING_INLINE
 *

1861 
	$__°r°r_cg
 (
__c⁄°
 *
__hay°ack
, __c⁄° 
__√edÀ
[],

1862 
size_t
 
__√edÀ_Àn
)

1864 
__d0
, 
__d1
, 
__d2
;

1865 *
__ªs
;

1866 
__asm__
 
__vﬁ©ûe__


1879 : "=&a" (
__ªs
), "=&S" (
__d0
), "=&D" (
__d1
), "=&c" (
__d2
)

1880 : "g" (
__√edÀ_Àn
), "1" (
__hay°ack
), "d" (
__√edÀ
)

1882  
__ªs
;

1883 
	}
}

1885 
__STRING_INLINE
 *
__°r°r_g
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
);

1886 #ifde‡
__PIC__


1888 
__STRING_INLINE
 *

1889 
	$__°r°r_g
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

1891 
__d0
, 
__d1
, 
__d2
;

1892 *
__ªs
;

1893 
__asm__
 
__vﬁ©ûe__


1912 : "=&a" (
__ªs
), "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
)

1913 : "0" (0), "1" (0xffffffff), "2" (
__hay°ack
), "3" (
__√edÀ
),

1914 "d" (
__√edÀ
)

1916  
__ªs
;

1917 
	}
}

1919 
__STRING_INLINE
 *

1920 
	$__°r°r_g
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

1922 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1923 *
__ªs
;

1924 
__asm__
 
__vﬁ©ûe__


1941 : "=&a" (
__ªs
), "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1942 : "0" (0), "1" (0xffffffff), "2" (
__hay°ack
), "3" (
__√edÀ
),

1943 "b" (
__√edÀ
)

1945  
__ªs
;

1946 
	}
}

1952 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1953 #ifde‡
__i686__


1954 
	#_HAVE_STRING_ARCH_ffs
 1

	)

1955 
	#ffs
(
w‹d
Ë(
	`__buûtö_c⁄°™t_p
 (word) \

1956 ? 
	`__buûtö_ffs
 (
w‹d
) \

1957 : ({ 
__˙t
, 
__tmp
; \

1958 
__asm__
 
__vﬁ©ûe__
 \

1961 : "=&r" (
__˙t
), "Ù" (
__tmp
) \

1962 : "rm" (
w‹d
), "1" (-1)); \

1963 
__˙t
 + 1; }))

	)

1965 #i‚de‡
ff¶


1966 
	#ff¶
(
w‹d
Ë
	`ffs
(w‹d)

	)

1971 #i‚de‡
_FORCE_INLINES


1972 #unde‡
__STRING_INLINE


	@/usr/include/bits/string2.h

21 #i‚de‡
_STRING_H


25 #i‡!
deföed
 
__NO_STRING_INLINES
 && !deföed 
__BOUNDED_POINTERS__


42 #i‚de‡
__STRING_INLINE


43 #ifde‡
__˝lu•lus


44 
	#__STRING_INLINE
 
ölöe


	)

46 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

50 #i‡
_STRING_ARCH_u«lig√d


52 
	~<ídün.h
>

53 
	~<bôs/ty≥s.h
>

55 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


56 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

57 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1] << 8 \

58 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

59 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

60 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

61 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

62 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

63 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

65 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

66 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

67 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1])

	)

68 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

69 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

70 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

71 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

72 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3])

	)

77 
	#__STRING2_COPY_TYPE
(
N
) \

78 °ru˘ { 
__¨r
[
N
]; } \

79 
	t__©åibuã__
 ((
	t__∑cked__
)Ë
	t__STRING2_COPY_ARR
##
	tN


	)

80 
	t__STRING2_COPY_TYPE
 (2);

81 
__STRING2_COPY_TYPE
 (3);

82 
__STRING2_COPY_TYPE
 (4);

83 
__STRING2_COPY_TYPE
 (5);

84 
__STRING2_COPY_TYPE
 (6);

85 
__STRING2_COPY_TYPE
 (7);

86 
__STRING2_COPY_TYPE
 (8);

87 #unde‡
__STRING2_COPY_TYPE


93 
	#__°rög2_1b±r_p
(
__x
) \

94 ((
size_t
)(c⁄° *)((
__x
Ë+ 1Ë- (size_t)(c⁄° *)(__xË=1)

	)

97 #i‡!
deföed
 
_HAVE_STRING_ARCH_mem£t


98 #i‡!
__GNUC_PREREQ
 (3, 0)

99 #i‡
_STRING_ARCH_u«lig√d


100 
	#mem£t
(
s
, 
c
, 
n
) \

101 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

102 ? ((
n
) == 1 \

103 ? 
	`__mem£t_1
 (
s
, 
c
) \

104 : 
	`__mem£t_gc
 (
s
, 
c
, 
n
)) \

105 : (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

106 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

107 : 
	`mem£t
 (
s
, 
c
, 
n
))))

	)

109 
	#__mem£t_1
(
s
, 
c
Ë({ *
__s
 = (s); \

110 *((
__uöt8_t
 *Ë
__s
Ë(__uöt8_tË
c
; __s; })

	)

112 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

113 ({ *
__s
 = (
s
); \

115 
__ui
; \

116 
__usi
; \

117 
__uc
; \

118 } *
__u
 = 
__s
; \

119 
__uöt8_t
 
__c
 = (__uöt8_tË(
c
); \

122 (Ë(
n
)) \

125 
__u
->
__ui
 = 
__c
 * 0x01010101; \

126 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

128 
__u
->
__ui
 = 
__c
 * 0x01010101; \

129 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

131 
__u
->
__ui
 = 
__c
 * 0x01010101; \

132 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

134 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

135 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

136 
__u
->
__uc
 = (Ë
__c
; \

140 
__u
->
__ui
 = 
__c
 * 0x01010101; \

141 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

143 
__u
->
__ui
 = 
__c
 * 0x01010101; \

144 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

146 
__u
->
__ui
 = 
__c
 * 0x01010101; \

147 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

149 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

153 
__u
->
__ui
 = 
__c
 * 0x01010101; \

154 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

156 
__u
->
__ui
 = 
__c
 * 0x01010101; \

157 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

159 
__u
->
__ui
 = 
__c
 * 0x01010101; \

160 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

162 
__u
->
__uc
 = (Ë
__c
; \

166 
__u
->
__ui
 = 
__c
 * 0x01010101; \

167 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

169 
__u
->
__ui
 = 
__c
 * 0x01010101; \

170 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

172 
__u
->
__ui
 = 
__c
 * 0x01010101; \

173 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

175 
__u
->
__ui
 = 
__c
 * 0x01010101; \

180 
__s
; })

	)

182 
	#mem£t
(
s
, 
c
, 
n
) \

183 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

184 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

185 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

194 #i‡
__GNUC_PREREQ
 (2, 91)

195 
	#__bzîo
(
s
, 
n
Ë
	`__buûtö_mem£t
 (s, '\0',Ç)

	)

203 #ifde‡
__USE_GNU


204 #i‡!
deföed
 
_HAVE_STRING_ARCH_memp˝y
 || deföed 
_FORCE_INLINES


205 #i‚de‡
_HAVE_STRING_ARCH_memp˝y


206 #i‡
__GNUC_PREREQ
 (3, 4)

207 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_memp˝y
 (de°, src,Ç)

	)

208 #ñi‡
__GNUC_PREREQ
 (3, 0)

209 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

210 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

211 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

212 ? 
	`__buûtö_mem˝y
 (
de°
, 
§c
, 
n
) + (n) \

213 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

215 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

216 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

217 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

218 ? 
	`__memp˝y_smÆl
 (
de°
, 
	`__memp˝y_¨gs
 (
§c
), 
n
) \

219 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

223 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y
 (de°, src,Ç)

	)

226 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


227 #i‡
_STRING_ARCH_u«lig√d


228 #i‚de‡
_FORCE_INLINES


229 
	#__memp˝y_¨gs
(
§c
) \

230 ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[2], \

231 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[6], \

232 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

233 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

234 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

235 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

237 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , , , ,

238 
__uöt16_t
, __uöt16_t, 
__uöt32_t
,

239 
__uöt32_t
, 
size_t
);

240 
__STRING_INLINE
 *

241 
	$__memp˝y_smÆl
 (*
__de°1
,

242 
__§c0_1
, 
__§c2_1
, 
__§c4_1
, 
__§c6_1
,

243 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

244 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

245 
size_t
 
__§˛í
)

248 
__uöt32_t
 
__ui
;

249 
__uöt16_t
 
__usi
;

250 
__uc
;

251 
__c
;

252 } *
__u
 = 
__de°1
;

253 (Ë
__§˛í
)

256 
__u
->
__c
 = 
__§c0_1
;

257 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

260 
__u
->
__usi
 = 
__§c0_2
;

261 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

264 
__u
->
__usi
 = 
__§c0_2
;

265 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

266 
__u
->
__c
 = 
__§c2_1
;

267 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

270 
__u
->
__ui
 = 
__§c0_4
;

271 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

274 
__u
->
__ui
 = 
__§c0_4
;

275 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

276 
__u
->
__c
 = 
__§c4_1
;

277 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

280 
__u
->
__ui
 = 
__§c0_4
;

281 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

282 
__u
->
__usi
 = 
__§c4_2
;

283 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

286 
__u
->
__ui
 = 
__§c0_4
;

287 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

288 
__u
->
__usi
 = 
__§c4_2
;

289 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

290 
__u
->
__c
 = 
__§c6_1
;

291 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

294 
__u
->
__ui
 = 
__§c0_4
;

295 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

296 
__u
->
__ui
 = 
__§c4_4
;

297 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

300  (*Ë
__u
;

301 
	}
}

303 #i‚de‡
_FORCE_INLINES


304 
	#__memp˝y_¨gs
(
§c
) \

305 ((
__c⁄°
 *Ë(
§c
))[0], \

306 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

307 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1] } }), \

308 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

309 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

310 ((
__c⁄°
 *Ë(
§c
))[2] } }), \

311 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

312 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

313 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3] } }), \

314 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

315 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

316 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

317 ((
__c⁄°
 *Ë(
§c
))[4] } }), \

318 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

319 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

320 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

321 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5] } }), \

322 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

323 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

324 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

325 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

326 ((
__c⁄°
 *Ë(
§c
))[6] } }), \

327 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

328 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

329 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

330 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

331 ((
__c⁄°
 *Ë(
§c
))[6], ((__c⁄° *Ë(§c))[7] } })

	)

333 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , 
__STRING2_COPY_ARR2
,

334 
__STRING2_COPY_ARR3
,

335 
__STRING2_COPY_ARR4
,

336 
__STRING2_COPY_ARR5
,

337 
__STRING2_COPY_ARR6
,

338 
__STRING2_COPY_ARR7
,

339 
__STRING2_COPY_ARR8
, 
size_t
);

340 
__STRING_INLINE
 *

341 
	$__memp˝y_smÆl
 (*
__de°
, 
__§c1
,

342 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

343 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

344 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

345 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

348 
__c
;

349 
__STRING2_COPY_ARR2
 
__sˇ2
;

350 
__STRING2_COPY_ARR3
 
__sˇ3
;

351 
__STRING2_COPY_ARR4
 
__sˇ4
;

352 
__STRING2_COPY_ARR5
 
__sˇ5
;

353 
__STRING2_COPY_ARR6
 
__sˇ6
;

354 
__STRING2_COPY_ARR7
 
__sˇ7
;

355 
__STRING2_COPY_ARR8
 
__sˇ8
;

356 } *
__u
 = 
__de°
;

357 (Ë
__§˛í
)

360 
__u
->
__c
 = 
__§c1
;

363 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

366 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

369 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

372 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

375 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

378 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

381 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

384  
	`__exãnsi⁄__
 ((*Ë
__u
 + 
__§˛í
);

385 
	}
}

393 #i‚de‡
_HAVE_STRING_ARCH_°rchr


394 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

395 #i‡
__GNUC_PREREQ
 (3, 2)

396 
	#°rchr
(
s
, 
c
) \

397 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
Ë&& !__buûtö_c⁄°™t_∞(
s
) \

398 && (
c
) == '\0' \

399 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

400 : 
	`__buûtö_°rchr
 (
s
, 
c
)))

	)

402 
	#°rchr
(
s
, 
c
) \

403 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

404 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

405 : 
	`°rchr
 (
s
, 
c
)))

	)

411 #i‡(!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)) \

412 || 
deföed
 
	g_FORCE_INLINES


413 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)

414 
	#°r˝y
(
de°
, 
§c
) \

415 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

416 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

417 ? 
	`__°r˝y_smÆl
 (
de°
, 
	`__°r˝y_¨gs
 (
§c
), \

418 
	`°æí
 (
§c
) + 1) \

419 : (*Ë
	`mem˝y
 (
de°
, 
§c
, 
	`°æí
 (src) + 1)) \

420 : 
	`°r˝y
 (
de°
, 
§c
)))

	)

423 #i‡
_STRING_ARCH_u«lig√d


424 #i‚de‡
_FORCE_INLINES


425 
	#__°r˝y_¨gs
(
§c
) \

426 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

427 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

428 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

429 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

431 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

432 
__uöt32_t
, __uöt32_t, 
size_t
);

433 
__STRING_INLINE
 *

434 
	$__°r˝y_smÆl
 (*
__de°
,

435 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

436 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

437 
size_t
 
__§˛í
)

440 
__uöt32_t
 
__ui
;

441 
__uöt16_t
 
__usi
;

442 
__uc
;

443 } *
__u
 = (*Ë
__de°
;

444 (Ë
__§˛í
)

447 
__u
->
__uc
 = '\0';

450 
__u
->
__usi
 = 
__§c0_2
;

453 
__u
->
__usi
 = 
__§c0_2
;

454 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

455 
__u
->
__uc
 = '\0';

458 
__u
->
__ui
 = 
__§c0_4
;

461 
__u
->
__ui
 = 
__§c0_4
;

462 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

463 
__u
->
__uc
 = '\0';

466 
__u
->
__ui
 = 
__§c0_4
;

467 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

468 
__u
->
__usi
 = 
__§c4_2
;

471 
__u
->
__ui
 = 
__§c0_4
;

472 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

473 
__u
->
__usi
 = 
__§c4_2
;

474 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

475 
__u
->
__uc
 = '\0';

478 
__u
->
__ui
 = 
__§c0_4
;

479 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

480 
__u
->
__ui
 = 
__§c4_4
;

483  
__de°
;

484 
	}
}

486 #i‚de‡
_FORCE_INLINES


487 
	#__°r˝y_¨gs
(
§c
) \

488 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

489 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

490 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

491 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

493 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

494 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

495 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

496 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

497 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

498 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

500 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

501 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

502 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

503 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

504 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

505 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

506 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

507 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

509 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

510 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

511 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

512 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

513 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

515 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

516 
__STRING2_COPY_ARR3
,

517 
__STRING2_COPY_ARR4
,

518 
__STRING2_COPY_ARR5
,

519 
__STRING2_COPY_ARR6
,

520 
__STRING2_COPY_ARR7
,

521 
__STRING2_COPY_ARR8
, 
size_t
);

522 
__STRING_INLINE
 *

523 
	$__°r˝y_smÆl
 (*
__de°
,

524 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

525 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

526 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

527 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

530 
__c
;

531 
__STRING2_COPY_ARR2
 
__sˇ2
;

532 
__STRING2_COPY_ARR3
 
__sˇ3
;

533 
__STRING2_COPY_ARR4
 
__sˇ4
;

534 
__STRING2_COPY_ARR5
 
__sˇ5
;

535 
__STRING2_COPY_ARR6
 
__sˇ6
;

536 
__STRING2_COPY_ARR7
 
__sˇ7
;

537 
__STRING2_COPY_ARR8
 
__sˇ8
;

538 } *
__u
 = (*Ë
__de°
;

539 (Ë
__§˛í
)

542 
__u
->
__c
 = '\0';

545 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

548 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

551 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

554 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

557 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

560 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

563 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

566  
__de°
;

567 
	}
}

573 #ifde‡
__USE_GNU


574 #i‡!
deföed
 
_HAVE_STRING_ARCH_°p˝y
 || deföed 
_FORCE_INLINES


575 #i‚de‡
_HAVE_STRING_ARCH_°p˝y


576 #i‡
__GNUC_PREREQ
 (3, 4)

577 
	#__°p˝y
(
de°
, 
§c
Ë
	`__buûtö_°p˝y
 (de°, src)

	)

578 #ñi‡
__GNUC_PREREQ
 (3, 0)

579 
	#__°p˝y
(
de°
, 
§c
) \

580 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

581 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

582 ? 
	`__buûtö_°r˝y
 (
de°
, 
§c
Ë+ 
	`°æí
 (src) \

583 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

585 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

587 
	#__°p˝y
(
de°
, 
§c
) \

588 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

589 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

590 ? 
	`__°p˝y_smÆl
 (
de°
, 
	`__°p˝y_¨gs
 (
§c
), \

591 
	`°æí
 (
§c
) + 1) \

592 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

594 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

598 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 (de°, src)

	)

601 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


602 #i‡
_STRING_ARCH_u«lig√d


603 #i‚de‡
_FORCE_INLINES


604 
	#__°p˝y_¨gs
(
§c
) \

605 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

606 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

607 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

608 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

610 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

611 
__uöt32_t
, __uöt32_t, 
size_t
);

612 
__STRING_INLINE
 *

613 
	$__°p˝y_smÆl
 (*
__de°
,

614 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

615 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

616 
size_t
 
__§˛í
)

619 
__ui
;

620 
__usi
;

621 
__uc
;

622 
__c
;

623 } *
__u
 = (*Ë
__de°
;

624 (Ë
__§˛í
)

627 
__u
->
__uc
 = '\0';

630 
__u
->
__usi
 = 
__§c0_2
;

631 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

634 
__u
->
__usi
 = 
__§c0_2
;

635 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

636 
__u
->
__uc
 = '\0';

639 
__u
->
__ui
 = 
__§c0_4
;

640 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

643 
__u
->
__ui
 = 
__§c0_4
;

644 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

645 
__u
->
__uc
 = '\0';

648 
__u
->
__ui
 = 
__§c0_4
;

649 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

650 
__u
->
__usi
 = 
__§c4_2
;

651 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

654 
__u
->
__ui
 = 
__§c0_4
;

655 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

656 
__u
->
__usi
 = 
__§c4_2
;

657 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

658 
__u
->
__uc
 = '\0';

661 
__u
->
__ui
 = 
__§c0_4
;

662 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

663 
__u
->
__ui
 = 
__§c4_4
;

664 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

667  &
__u
->
__c
;

668 
	}
}

670 #i‚de‡
_FORCE_INLINES


671 
	#__°p˝y_¨gs
(
§c
) \

672 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

673 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

674 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

675 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

677 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

678 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

679 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

680 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

681 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

682 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

684 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

685 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

686 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

687 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

688 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

689 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

690 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

691 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

693 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

694 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

695 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

696 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

697 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

699 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

700 
__STRING2_COPY_ARR3
,

701 
__STRING2_COPY_ARR4
,

702 
__STRING2_COPY_ARR5
,

703 
__STRING2_COPY_ARR6
,

704 
__STRING2_COPY_ARR7
,

705 
__STRING2_COPY_ARR8
, 
size_t
);

706 
__STRING_INLINE
 *

707 
	$__°p˝y_smÆl
 (*
__de°
,

708 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

709 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

710 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

711 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

714 
__c
;

715 
__STRING2_COPY_ARR2
 
__sˇ2
;

716 
__STRING2_COPY_ARR3
 
__sˇ3
;

717 
__STRING2_COPY_ARR4
 
__sˇ4
;

718 
__STRING2_COPY_ARR5
 
__sˇ5
;

719 
__STRING2_COPY_ARR6
 
__sˇ6
;

720 
__STRING2_COPY_ARR7
 
__sˇ7
;

721 
__STRING2_COPY_ARR8
 
__sˇ8
;

722 } *
__u
 = (*Ë
__de°
;

723 (Ë
__§˛í
)

726 
__u
->
__c
 = '\0';

729 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

732 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

735 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

738 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

741 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

744 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

747 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

750  
__de°
 + 
__§˛í
 - 1;

751 
	}
}

759 #i‚de‡
_HAVE_STRING_ARCH_°∫˝y


760 #i‡
__GNUC_PREREQ
 (3, 2)

761 
	#°∫˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫˝y
 (de°, src,Ç)

	)

763 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

764 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

765 ? (
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

766 ? (*Ë
	`mem˝y
 (
de°
, 
§c
, 
n
) \

767 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)) \

768 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)))

	)

774 #i‚de‡
_HAVE_STRING_ARCH_°∫ˇt


775 #ifde‡
_USE_STRING_ARCH_°rchr


776 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

777 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

778 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

779 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

780 ? 
	`°rˇt
 (
__de°
, 
§c
) \

781 : (*((*Ë
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

782 
§c
, 
n
)Ë'\0', 
__de°
)) \

783 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
); }))

	)

784 #ñi‡
__GNUC_PREREQ
 (3, 2)

785 
	#°∫ˇt
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫ˇt
 (de°, src,Ç)

	)

787 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

788 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

789 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

790 ? 
	`°rˇt
 (
de°
, 
§c
) \

791 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)) \

792 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)))

	)

798 #i‚de‡
_HAVE_STRING_ARCH_°rcmp


799 #i‡
__GNUC_PREREQ
 (3, 2)

800 
	#°rcmp
(
s1
, 
s2
) \

801 
__exãnsi⁄__
 \

802 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

803 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

804 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

805 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

806 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

807 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

808 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

809 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

810 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

811 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

812 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

813 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

814 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

815 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

816 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

817 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

818 : 
	`__buûtö_°rcmp
 (
s1
, 
s2
)))); })

	)

820 
	#°rcmp
(
s1
, 
s2
) \

821 
__exãnsi⁄__
 \

822 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

823 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

824 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

825 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

826 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

827 ? 
	`memcmp
 ((
__c⁄°
 *Ë(
s1
), (__c⁄° *Ë(
s2
), \

828 (
__s1_Àn
 < 
__s2_Àn
 ? __s1_len : __s2_len) + 1) \

829 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

830 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

831 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

832 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s1_Àn
) \

833 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

834 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

835 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

836 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

837 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s2_Àn
) \

838 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

839 : 
	`°rcmp
 (
s1
, 
s2
)))); })

	)

842 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

843 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = \

844 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

845 - ((
__c⁄°
 *Ë(__c⁄° *)(
s2
))[0]);\

846 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

848 
__ªsu…
 = (((
__c⁄°
 *) \

849 (
__c⁄°
 *Ë(
s1
))[1] \

850 - ((
__c⁄°
 *) \

851 (
__c⁄°
 *Ë(
s2
))[1]); \

852 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

854 
__ªsu…
 = \

855 (((
__c⁄°
 *) \

856 (
__c⁄°
 *Ë(
s1
))[2] \

857 - ((
__c⁄°
 *) \

858 (
__c⁄°
 *Ë(
s2
))[2]); \

859 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

860 
__ªsu…
 = \

861 (((
__c⁄°
 *) \

862 (
__c⁄°
 *Ë(
s1
))[3] \

863 - ((
__c⁄°
 *) \

864 (
__c⁄°
 *Ë(
s2
))[3]); \

867 
__ªsu…
; }))

	)

869 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

870 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s2
 = \

871 (
__c⁄°
 *Ë(__c⁄° *Ë(
s2
); \

872 
__ªsu…
 = \

873 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

874 - 
__s2
[0]); \

875 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

877 
__ªsu…
 = (((
__c⁄°
 *) \

878 (
__c⁄°
 *Ë(
s1
))[1] - 
__s2
[1]); \

879 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

881 
__ªsu…
 = (((
__c⁄°
 *) \

882 (
__c⁄°
 *Ë(
s1
))[2] - 
__s2
[2]);\

883 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

884 
__ªsu…
 = (((
__c⁄°
 *) \

885 (
__c⁄°
 *Ë(
s1
))[3] \

886 - 
__s2
[3]); \

889 
__ªsu…
; }))

	)

891 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

892 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s1
 = \

893 (
__c⁄°
 *Ë(__c⁄° *Ë(
s1
); \

894 
__ªsu…
 = \

895 
__s1
[0] - ((
__c⁄°
 *) \

896 (
__c⁄°
 *Ë(
s2
))[0]; \

897 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

899 
__ªsu…
 = (
__s1
[1] \

900 - ((
__c⁄°
 *) \

901 (
__c⁄°
 *Ë(
s2
))[1]); \

902 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

904 
__ªsu…
 = \

905 (
__s1
[2] - ((
__c⁄°
 *) \

906 (
__c⁄°
 *Ë(
s2
))[2]); \

907 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

908 
__ªsu…
 = \

909 (
__s1
[3] \

910 - ((
__c⁄°
 *) \

911 (
__c⁄°
 *Ë(
s2
))[3]); \

914 
__ªsu…
; }))

	)

919 #i‚de‡
_HAVE_STRING_ARCH_°∫cmp


920 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

921 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

922 && ((
	`__buûtö_c⁄°™t_p
 (
s1
) \

923 && 
	`°æí
 (
s1
Ë< ((
size_t
Ë(
n
))) \

924 || (
	`__buûtö_c⁄°™t_p
 (
s2
) \

925 && 
	`°æí
 (
s2
Ë< ((
size_t
Ë(
n
)))) \

926 ? 
	`°rcmp
 (
s1
, 
s2
Ë: 
	`°∫cmp
 (s1, s2, 
n
)))

	)

932 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rc•n
 || deföed 
_FORCE_INLINES


933 #i‚de‡
_HAVE_STRING_ARCH_°rc•n


934 #i‡
__GNUC_PREREQ
 (3, 2)

935 
	#°rc•n
(
s
, 
ªje˘
) \

936 
__exãnsi⁄__
 \

937 ({ 
__r0
, 
__r1
, 
__r2
; \

938 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

939 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

940 ? 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
) \

941 : ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

942 ? 
	`°æí
 (
s
) \

943 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

944 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

945 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

946 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

947 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

948 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

949 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)))))) \

950 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)); })

	)

952 
	#°rc•n
(
s
, 
ªje˘
) \

953 
__exãnsi⁄__
 \

954 ({ 
__r0
, 
__r1
, 
__r2
; \

955 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

956 ? ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

957 ? 
	`°æí
 (
s
) \

958 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

959 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

960 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

961 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

962 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

963 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

964 : 
	`°rc•n
 (
s
, 
ªje˘
))))) \

965 : 
	`°rc•n
 (
s
, 
ªje˘
)); })

	)

969 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
);

970 
__STRING_INLINE
 
size_t


971 
	$__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
)

973 
size_t
 
__ªsu…
 = 0;

974 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘
)

975 ++
__ªsu…
;

976  
__ªsu…
;

977 
	}
}

979 
__STRING_INLINE
 
size_t
 
__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

980 
__ªje˘2
);

981 
__STRING_INLINE
 
size_t


982 
	$__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
)

984 
size_t
 
__ªsu…
 = 0;

985 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


986 && 
__s
[
__ªsu…
] !
__ªje˘2
)

987 ++
__ªsu…
;

988  
__ªsu…
;

989 
	}
}

991 
__STRING_INLINE
 
size_t
 
__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

992 
__ªje˘2
, 
__ªje˘3
);

993 
__STRING_INLINE
 
size_t


994 
	$__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
,

995 
__ªje˘3
)

997 
size_t
 
__ªsu…
 = 0;

998 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


999 && 
__s
[
__ªsu…
] !
__ªje˘2
 && __s[__ªsu…] !
__ªje˘3
)

1000 ++
__ªsu…
;

1001  
__ªsu…
;

1002 
	}
}

1008 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r•n
 || deföed 
_FORCE_INLINES


1009 #i‚de‡
_HAVE_STRING_ARCH_°r•n


1010 #i‡
__GNUC_PREREQ
 (3, 2)

1011 
	#°r•n
(
s
, 
ac˚±
) \

1012 
__exãnsi⁄__
 \

1013 ({ 
__a0
, 
__a1
, 
__a2
; \

1014 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1015 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1016 ? 
	`__buûtö_°r•n
 (
s
, 
ac˚±
) \

1017 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1018 ? ((Ë(
s
), 0) \

1019 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1020 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1021 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1022 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1023 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1024 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1025 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)))))) \

1026 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)); })

	)

1028 
	#°r•n
(
s
, 
ac˚±
) \

1029 
__exãnsi⁄__
 \

1030 ({ 
__a0
, 
__a1
, 
__a2
; \

1031 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1032 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1033 ? ((Ë(
s
), 0) \

1034 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1035 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1036 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1037 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1038 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1039 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1040 : 
	`°r•n
 (
s
, 
ac˚±
))))) \

1041 : 
	`°r•n
 (
s
, 
ac˚±
)); })

	)

1045 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
);

1046 
__STRING_INLINE
 
size_t


1047 
	$__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
)

1049 
size_t
 
__ªsu…
 = 0;

1051 
__s
[
__ªsu…
] =
__ac˚±
)

1052 ++
__ªsu…
;

1053  
__ªsu…
;

1054 
	}
}

1056 
__STRING_INLINE
 
size_t
 
__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1057 
__ac˚±2
);

1058 
__STRING_INLINE
 
size_t


1059 
	$__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1061 
size_t
 
__ªsu…
 = 0;

1063 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2
)

1064 ++
__ªsu…
;

1065  
__ªsu…
;

1066 
	}
}

1068 
__STRING_INLINE
 
size_t
 
__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1069 
__ac˚±2
, 
__ac˚±3
);

1070 
__STRING_INLINE
 
size_t


1071 
	$__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1073 
size_t
 
__ªsu…
 = 0;

1075 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2


1076 || 
__s
[
__ªsu…
] =
__ac˚±3
)

1077 ++
__ªsu…
;

1078  
__ªsu…
;

1079 
	}
}

1084 #i‡!
deföed
 
_HAVE_STRING_ARCH_°Ωbrk
 || deföed 
_FORCE_INLINES


1085 #i‚de‡
_HAVE_STRING_ARCH_°Ωbrk


1086 #i‡
__GNUC_PREREQ
 (3, 2)

1087 
	#°Ωbrk
(
s
, 
ac˚±
) \

1088 
__exãnsi⁄__
 \

1089 ({ 
__a0
, 
__a1
, 
__a2
; \

1090 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1091 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1092 ? 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
) \

1093 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1094 ? ((Ë(
s
), (*Ë
NULL
) \

1095 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1096 ? 
	`__buûtö_°rchr
 (
s
, 
__a0
) \

1097 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1098 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1099 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1100 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1101 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)))))) \

1102 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1104 
	#°Ωbrk
(
s
, 
ac˚±
) \

1105 
__exãnsi⁄__
 \

1106 ({ 
__a0
, 
__a1
, 
__a2
; \

1107 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1108 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1109 ? ((Ë(
s
), (*Ë
NULL
) \

1110 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1111 ? 
	`°rchr
 (
s
, 
__a0
) \

1112 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1113 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1114 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1115 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1116 : 
	`°Ωbrk
 (
s
, 
ac˚±
))))) \

1117 : 
	`°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1121 
__STRING_INLINE
 *
__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1122 
__ac˚±2
);

1123 
__STRING_INLINE
 *

1124 
	$__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1127 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2
)

1128 ++
__s
;

1129  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1130 
	}
}

1132 
__STRING_INLINE
 *
__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1133 
__ac˚±2
, 
__ac˚±3
);

1134 
__STRING_INLINE
 *

1135 
	$__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
,

1136 
__ac˚±3
)

1139 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2


1140 && *
__s
 !
__ac˚±3
)

1141 ++
__s
;

1142  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1143 
	}
}

1149 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r°r
 && !
__GNUC_PREREQ
 (2, 97)

1150 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1151 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
Ë&& 
	`__°rög2_1b±r_p
 (needle) \

1152 ? (((
__c⁄°
 *Ë(
√edÀ
))[0] == '\0' \

1153 ? (*Ë(
size_t
Ë(
hay°ack
) \

1154 : (((
__c⁄°
 *Ë(
√edÀ
))[1] == '\0' \

1155 ? 
	`°rchr
 (
hay°ack
, \

1156 ((
__c⁄°
 *Ë(
√edÀ
))[0]) \

1157 : 
	`°r°r
 (
hay°ack
, 
√edÀ
))) \

1158 : 
	`°r°r
 (
hay°ack
, 
√edÀ
)))

	)

1162 #i‡!
deföed
 
_HAVE_STRING_ARCH_°πok_r
 || deföed 
_FORCE_INLINES


1163 #i‚de‡
_HAVE_STRING_ARCH_°πok_r


1164 
	#__°πok_r
(
s
, 
£p
, 
√xç
) \

1165 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
£p
Ë&& 
	`__°rög2_1b±r_p
 (sep) \

1166 && ((
__c⁄°
 *Ë(
£p
))[0] != '\0' \

1167 && ((
__c⁄°
 *Ë(
£p
))[1] == '\0' \

1168 ? 
	`__°πok_r_1c
 (
s
, ((
__c⁄°
 *Ë(
£p
))[0], 
√xç
) \

1169 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)))

	)

1172 
__STRING_INLINE
 *
__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
);

1173 
__STRING_INLINE
 *

1174 
	$__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
)

1176 *
__ªsu…
;

1177 i‡(
__s
 =
NULL
)

1178 
__s
 = *
__√xç
;

1179 *
__s
 =
__£p
)

1180 ++
__s
;

1181 
__ªsu…
 = 
NULL
;

1182 i‡(*
__s
 != '\0')

1184 
__ªsu…
 = 
__s
++;

1185 *
__s
 != '\0')

1186 i‡(*
__s
++ =
__£p
)

1188 
__s
[-1] = '\0';

1192 *
__√xç
 = 
__s
;

1193  
__ªsu…
;

1194 
	}
}

1195 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


1196 
	#°πok_r
(
s
, 
£p
, 
√xç
Ë
	`__°πok_r
 (s, sï,Çexç)

	)

1201 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r£p
 || deföed 
_FORCE_INLINES


1202 #i‚de‡
_HAVE_STRING_ARCH_°r£p


1204 *
__°r£p_g
 (**
__°rögp
, 
__c⁄°
 *
__dñim
);

1205 
	#__°r£p
(
s
, 
ªje˘
) \

1206 
__exãnsi⁄__
 \

1207 ({ 
__r0
, 
__r1
, 
__r2
; \

1208 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

1209 && (
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], \

1210 ((
__c⁄°
 *Ë(
ªje˘
))[0] != '\0') \

1211 ? ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], \

1212 ((
__c⁄°
 *Ë(
ªje˘
))[1] == '\0') \

1213 ? 
	`__°r£p_1c
 (
s
, 
__r0
) \

1214 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

1215 ? 
	`__°r£p_2c
 (
s
, 
__r0
, 
__r1
) \

1216 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

1217 ? 
	`__°r£p_3c
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

1218 : 
	`__°r£p_g
 (
s
, 
ªje˘
)))) \

1219 : 
	`__°r£p_g
 (
s
, 
ªje˘
)); })

	)

1222 
__STRING_INLINE
 *
__°r£p_1c
 (**
__s
, 
__ªje˘
);

1223 
__STRING_INLINE
 *

1224 
	$__°r£p_1c
 (**
__s
, 
__ªje˘
)

1226 *
__ªtvÆ
 = *
__s
;

1227 i‡(
__ªtvÆ
 !
NULL
 && (*
__s
 = 
	`°rchr
 (__ªtvÆ, 
__ªje˘
)) != NULL)

1228 *(*
__s
)++ = '\0';

1229  
__ªtvÆ
;

1230 
	}
}

1232 
__STRING_INLINE
 *
__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
);

1233 
__STRING_INLINE
 *

1234 
	$__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
)

1236 *
__ªtvÆ
 = *
__s
;

1237 i‡(
__ªtvÆ
 !
NULL
)

1239 *
__˝
 = 
__ªtvÆ
;

1242 i‡(*
__˝
 == '\0')

1244 
__˝
 = 
NULL
;

1247 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
)

1249 *
__˝
++ = '\0';

1252 ++
__˝
;

1254 *
__s
 = 
__˝
;

1256  
__ªtvÆ
;

1257 
	}
}

1259 
__STRING_INLINE
 *
__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
,

1260 
__ªje˘3
);

1261 
__STRING_INLINE
 *

1262 
	$__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
, 
__ªje˘3
)

1264 *
__ªtvÆ
 = *
__s
;

1265 i‡(
__ªtvÆ
 !
NULL
)

1267 *
__˝
 = 
__ªtvÆ
;

1270 i‡(*
__˝
 == '\0')

1272 
__˝
 = 
NULL
;

1275 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
 || *__˝ =
__ªje˘3
)

1277 *
__˝
++ = '\0';

1280 ++
__˝
;

1282 *
__s
 = 
__˝
;

1284  
__ªtvÆ
;

1285 
	}
}

1286 #ifde‡
__USE_BSD


1287 
	#°r£p
(
s
, 
ªje˘
Ë
	`__°r£p
 (s,Ñeje˘)

	)

1294 #ifde‡
__USE_MISC


1296 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rdup
 || !deföed 
_HAVE_STRING_ARCH_°∫dup


1297 
	#__√ed_mÆloc_™d_ˇŒoc


	)

1298 
	~<°dlib.h
>

1301 #i‚de‡
_HAVE_STRING_ARCH_°rdup


1303 *
	$__°rdup
 (
__c⁄°
 *
__°rög
Ë
__THROW
 
__©åibuã_mÆloc__
;

1304 
	#__°rdup
(
s
) \

1305 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1306 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1307 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1308 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1309 *
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1310 i‡(
__ªtvÆ
 !
NULL
) \

1311 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, 
__Àn
); \

1312 
__ªtvÆ
; 
	}
})) \

1313 : 
	`__°rdup
 (
s
)))

	)

1315 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1316 
	#°rdup
(
s
Ë
	`__°rdup
 (s)

	)

1320 #i‚de‡
_HAVE_STRING_ARCH_°∫dup


1322 *
	$__°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

1323 
__THROW
 
__©åibuã_mÆloc__
;

1324 
	#__°∫dup
(
s
, 
n
) \

1325 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1326 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1327 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1328 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1329 
size_t
 
__n
 = (
n
); \

1330 *
__ªtvÆ
; \

1331 i‡(
__n
 < 
__Àn
) \

1332 
__Àn
 = 
__n
 + 1; \

1333 
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1334 i‡(
__ªtvÆ
 !
NULL
) \

1336 
__ªtvÆ
[
__Àn
 - 1] = '\0'; \

1337 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, \

1338 
__Àn
 - 1); \

1340 
__ªtvÆ
; 
	}
})) \

1341 : 
	`__°∫dup
 (
s
, 
n
)))

	)

1343 #ifde‡
__USE_GNU


1344 
	#°∫dup
(
s
, 
n
Ë
	`__°∫dup
 (s,Ç)

	)

1350 #i‚de‡
_FORCE_INLINES


1351 #unde‡
__STRING_INLINE


	@/usr/include/bits/string3.h

19 #i‚de‡
_STRING_H


23 
__w¨nde˛
 (
__w¨n_mem£t_zîo_Àn
,

26 #i‚de‡
__˝lu•lus


30 #unde‡
mem˝y


31 #unde‡
memmove


32 #unde‡
mem£t


33 #unde‡
°rˇt


34 #unde‡
°r˝y


35 #unde‡
°∫ˇt


36 #unde‡
°∫˝y


37 #ifde‡
__USE_GNU


38 #unde‡
memp˝y


39 #unde‡
°p˝y


41 #ifde‡
__USE_BSD


42 #unde‡
bc›y


43 #unde‡
bzîo


48 
__exã∫_Æways_ölöe
 *

49 
__NTH
 (
	$mem˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

50 
size_t
 
__Àn
))

52  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

53 
	}
}

55 
__exã∫_Æways_ölöe
 *

56 
__NTH
 (
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__Àn
))

58  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

59 
	}
}

61 #ifde‡
__USE_GNU


62 
__exã∫_Æways_ölöe
 *

63 
__NTH
 (
	$memp˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

64 
size_t
 
__Àn
))

66  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

67 
	}
}

76 
__exã∫_Æways_ölöe
 *

77 
__NTH
 (
	$mem£t
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

79 i‡(
	`__buûtö_c⁄°™t_p
 (
__Àn
) && __len == 0

80 && (!
	`__buûtö_c⁄°™t_p
 (
__ch
) || __ch != 0))

82 
	`__w¨n_mem£t_zîo_Àn
 ();

83  
__de°
;

85  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
, 
	`__bos0
 (__dest));

86 
	}
}

88 #ifde‡
__USE_BSD


89 
__exã∫_Æways_ölöe
 

90 
__NTH
 (
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__Àn
))

92 (Ë
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

93 
	}
}

95 
__exã∫_Æways_ölöe
 

96 
__NTH
 (
	$bzîo
 (*
__de°
, 
size_t
 
__Àn
))

98 (Ë
	`__buûtö___mem£t_chk
 (
__de°
, '\0', 
__Àn
, 
	`__bos0
 (__dest));

99 
	}
}

102 
__exã∫_Æways_ölöe
 *

103 
__NTH
 (
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

105  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

106 
	}
}

108 #ifde‡
__USE_GNU


109 
__exã∫_Æways_ölöe
 *

110 
__NTH
 (
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

112  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

113 
	}
}

117 
__exã∫_Æways_ölöe
 *

118 
__NTH
 (
	$°∫˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

119 
size_t
 
__Àn
))

121  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

122 
	}
}

125 *
	$__°≤˝y_chk
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

126 
size_t
 
__de°Àn
Ë
__THROW
;

127 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
,

128 
__c⁄°
 *
__§c
,

129 
size_t
 
__n
), 
°≤˝y
);

131 
__exã∫_Æways_ölöe
 *

132 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
))

134 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

135 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿<
	`__bos
 (
__de°
)))

136  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

137  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

138 
	}
}

141 
__exã∫_Æways_ölöe
 *

142 
__NTH
 (
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

144  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

145 
	}
}

148 
__exã∫_Æways_ölöe
 *

149 
__NTH
 (
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

150 
size_t
 
__Àn
))

152  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

153 
	}
}

	@/usr/include/bits/sys_errlist.h

20 #i‚de‡
_STDIO_H


26 #ifde‡ 
__USE_BSD


27 
sys_√º
;

28 
__c⁄°
 *__c⁄° 
sys_îæi°
[];

30 #ifde‡ 
__USE_GNU


31 
_sys_√º
;

32 
__c⁄°
 *__c⁄° 
_sys_îæi°
[];

	@/usr/include/bits/termios.h

20 #i‚de‡
_TERMIOS_H


24 
	tcc_t
;

25 
	t•ìd_t
;

26 
	ttcÊag_t
;

28 
	#NCCS
 32

	)

29 
	sãrmios


31 
tcÊag_t
 
	mc_iÊag
;

32 
tcÊag_t
 
	mc_oÊag
;

33 
tcÊag_t
 
	mc_cÊag
;

34 
tcÊag_t
 
	mc_lÊag
;

35 
cc_t
 
	mc_löe
;

36 
cc_t
 
	mc_cc
[
NCCS
];

37 
•ìd_t
 
	mc_i•ìd
;

38 
•ìd_t
 
	mc_o•ìd
;

39 
	#_HAVE_STRUCT_TERMIOS_C_ISPEED
 1

	)

40 
	#_HAVE_STRUCT_TERMIOS_C_OSPEED
 1

	)

44 
	#VINTR
 0

	)

45 
	#VQUIT
 1

	)

46 
	#VERASE
 2

	)

47 
	#VKILL
 3

	)

48 
	#VEOF
 4

	)

49 
	#VTIME
 5

	)

50 
	#VMIN
 6

	)

51 
	#VSWTC
 7

	)

52 
	#VSTART
 8

	)

53 
	#VSTOP
 9

	)

54 
	#VSUSP
 10

	)

55 
	#VEOL
 11

	)

56 
	#VREPRINT
 12

	)

57 
	#VDISCARD
 13

	)

58 
	#VWERASE
 14

	)

59 
	#VLNEXT
 15

	)

60 
	#VEOL2
 16

	)

63 
	#IGNBRK
 0000001

	)

64 
	#BRKINT
 0000002

	)

65 
	#IGNPAR
 0000004

	)

66 
	#PARMRK
 0000010

	)

67 
	#INPCK
 0000020

	)

68 
	#ISTRIP
 0000040

	)

69 
	#INLCR
 0000100

	)

70 
	#IGNCR
 0000200

	)

71 
	#ICRNL
 0000400

	)

72 
	#IUCLC
 0001000

	)

73 
	#IXON
 0002000

	)

74 
	#IXANY
 0004000

	)

75 
	#IXOFF
 0010000

	)

76 
	#IMAXBEL
 0020000

	)

77 
	#IUTF8
 0040000

	)

80 
	#OPOST
 0000001

	)

81 
	#OLCUC
 0000002

	)

82 
	#ONLCR
 0000004

	)

83 
	#OCRNL
 0000010

	)

84 
	#ONOCR
 0000020

	)

85 
	#ONLRET
 0000040

	)

86 
	#OFILL
 0000100

	)

87 
	#OFDEL
 0000200

	)

88 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


89 
	#NLDLY
 0000400

	)

90 
	#NL0
 0000000

	)

91 
	#NL1
 0000400

	)

92 
	#CRDLY
 0003000

	)

93 
	#CR0
 0000000

	)

94 
	#CR1
 0001000

	)

95 
	#CR2
 0002000

	)

96 
	#CR3
 0003000

	)

97 
	#TABDLY
 0014000

	)

98 
	#TAB0
 0000000

	)

99 
	#TAB1
 0004000

	)

100 
	#TAB2
 0010000

	)

101 
	#TAB3
 0014000

	)

102 
	#BSDLY
 0020000

	)

103 
	#BS0
 0000000

	)

104 
	#BS1
 0020000

	)

105 
	#FFDLY
 0100000

	)

106 
	#FF0
 0000000

	)

107 
	#FF1
 0100000

	)

110 
	#VTDLY
 0040000

	)

111 
	#VT0
 0000000

	)

112 
	#VT1
 0040000

	)

114 #ifde‡
__USE_MISC


115 
	#XTABS
 0014000

	)

119 #ifde‡
__USE_MISC


120 
	#CBAUD
 0010017

	)

122 
	#B0
 0000000

	)

123 
	#B50
 0000001

	)

124 
	#B75
 0000002

	)

125 
	#B110
 0000003

	)

126 
	#B134
 0000004

	)

127 
	#B150
 0000005

	)

128 
	#B200
 0000006

	)

129 
	#B300
 0000007

	)

130 
	#B600
 0000010

	)

131 
	#B1200
 0000011

	)

132 
	#B1800
 0000012

	)

133 
	#B2400
 0000013

	)

134 
	#B4800
 0000014

	)

135 
	#B9600
 0000015

	)

136 
	#B19200
 0000016

	)

137 
	#B38400
 0000017

	)

138 #ifde‡
__USE_MISC


139 
	#EXTA
 
B19200


	)

140 
	#EXTB
 
B38400


	)

142 
	#CSIZE
 0000060

	)

143 
	#CS5
 0000000

	)

144 
	#CS6
 0000020

	)

145 
	#CS7
 0000040

	)

146 
	#CS8
 0000060

	)

147 
	#CSTOPB
 0000100

	)

148 
	#CREAD
 0000200

	)

149 
	#PARENB
 0000400

	)

150 
	#PARODD
 0001000

	)

151 
	#HUPCL
 0002000

	)

152 
	#CLOCAL
 0004000

	)

153 #ifde‡
__USE_MISC


154 
	#CBAUDEX
 0010000

	)

156 
	#B57600
 0010001

	)

157 
	#B115200
 0010002

	)

158 
	#B230400
 0010003

	)

159 
	#B460800
 0010004

	)

160 
	#B500000
 0010005

	)

161 
	#B576000
 0010006

	)

162 
	#B921600
 0010007

	)

163 
	#B1000000
 0010010

	)

164 
	#B1152000
 0010011

	)

165 
	#B1500000
 0010012

	)

166 
	#B2000000
 0010013

	)

167 
	#B2500000
 0010014

	)

168 
	#B3000000
 0010015

	)

169 
	#B3500000
 0010016

	)

170 
	#B4000000
 0010017

	)

171 
	#__MAX_BAUD
 
B4000000


	)

172 #ifde‡
__USE_MISC


173 
	#CIBAUD
 002003600000

	)

174 
	#CMSPAR
 010000000000

	)

175 
	#CRTSCTS
 020000000000

	)

179 
	#ISIG
 0000001

	)

180 
	#ICANON
 0000002

	)

181 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


182 
	#XCASE
 0000004

	)

184 
	#ECHO
 0000010

	)

185 
	#ECHOE
 0000020

	)

186 
	#ECHOK
 0000040

	)

187 
	#ECHONL
 0000100

	)

188 
	#NOFLSH
 0000200

	)

189 
	#TOSTOP
 0000400

	)

190 #ifde‡
__USE_MISC


191 
	#ECHOCTL
 0001000

	)

192 
	#ECHOPRT
 0002000

	)

193 
	#ECHOKE
 0004000

	)

194 
	#FLUSHO
 0010000

	)

195 
	#PENDIN
 0040000

	)

197 
	#IEXTEN
 0100000

	)

198 #ifde‡
__USE_BSD


199 
	#EXTPROC
 0200000

	)

203 
	#TCOOFF
 0

	)

204 
	#TCOON
 1

	)

205 
	#TCIOFF
 2

	)

206 
	#TCION
 3

	)

209 
	#TCIFLUSH
 0

	)

210 
	#TCOFLUSH
 1

	)

211 
	#TCIOFLUSH
 2

	)

214 
	#TCSANOW
 0

	)

215 
	#TCSADRAIN
 1

	)

216 
	#TCSAFLUSH
 2

	)

219 
	#_IOT_ãrmios
 \

220 
	`_IOT
 (
	`_IOTS
 (
cÊag_t
), 4, _IOTS (
cc_t
), 
NCCS
, _IOTS (
•ìd_t
), 2)

	)

	@/usr/include/bits/time.h

24 #i‡
deföed
 
__√ed_timevÆ
 || deföed 
__USE_GNU


25 #i‚de‡
_STRUCT_TIMEVAL


26 
	#_STRUCT_TIMEVAL
 1

	)

27 
	~<bôs/ty≥s.h
>

31 
	stimevÆ


33 
__time_t
 
	mtv_£c
;

34 
__su£c⁄ds_t
 
	mtv_u£c
;

39 #i‚de‡
__√ed_timevÆ


40 #i‚de‡
_BITS_TIME_H


41 
	#_BITS_TIME_H
 1

	)

49 
	#CLOCKS_PER_SEC
 1000000l

	)

51 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


54 
	~<bôs/ty≥s.h
>

55 
__sysc⁄f
 ();

56 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

59 #ifde‡
__USE_POSIX199309


61 
	#CLOCK_REALTIME
 0

	)

63 
	#CLOCK_MONOTONIC
 1

	)

65 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

67 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

69 
	#CLOCK_MONOTONIC_RAW
 4

	)

71 
	#CLOCK_REALTIME_COARSE
 5

	)

73 
	#CLOCK_MONOTONIC_COARSE
 6

	)

75 
	#CLOCK_BOOTTIME
 7

	)

77 
	#CLOCK_REALTIME_ALARM
 8

	)

79 
	#CLOCK_BOOTTIME_ALARM
 9

	)

82 
	#TIMER_ABSTIME
 1

	)

85 #ifde‡
__USE_GNU


86 
	~<bôs/timex.h
>

88 
__BEGIN_DECLS


91 
	$˛ock_adjtime
 (
__˛ockid_t
 
__˛ock_id
, 
timex
 *
__utx
Ë
__THROW
;

93 
__END_DECLS


99 #unde‡
__√ed_timevÆ


	@/usr/include/bits/types.h

24 #i‚def 
_BITS_TYPES_H


25 
	#_BITS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/w‹dsize.h
>

31 
	t__u_ch¨
;

32 
	t__u_sh‹t
;

33 
	t__u_öt
;

34 
	t__u_l⁄g
;

37 sig√d 
	t__öt8_t
;

38 
	t__uöt8_t
;

39 sig√d 
	t__öt16_t
;

40 
	t__uöt16_t
;

41 sig√d 
	t__öt32_t
;

42 
	t__uöt32_t
;

43 #i‡
__WORDSIZE
 == 64

44 sig√d 
	t__öt64_t
;

45 
	t__uöt64_t
;

46 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


47 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

48 
__exãnsi⁄__
 
	t__uöt64_t
;

52 #i‡
__WORDSIZE
 == 64

53 
	t__quad_t
;

54 
	t__u_quad_t
;

55 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


56 
__exãnsi⁄__
 
	t__quad_t
;

57 
__exãnsi⁄__
 
	t__u_quad_t
;

61 
	m__vÆ
[2];

62 } 
	t__quad_t
;

65 
__u_l⁄g
 
	m__vÆ
[2];

66 } 
	t__u_quad_t
;

99 
	#__S16_TYPE
 

	)

100 
	#__U16_TYPE
 

	)

101 
	#__S32_TYPE
 

	)

102 
	#__U32_TYPE
 

	)

103 
	#__SLONGWORD_TYPE
 

	)

104 
	#__ULONGWORD_TYPE
 

	)

105 #i‡
__WORDSIZE
 == 32

106 
	#__SQUAD_TYPE
 
__quad_t


	)

107 
	#__UQUAD_TYPE
 
__u_quad_t


	)

108 
	#__SWORD_TYPE
 

	)

109 
	#__UWORD_TYPE
 

	)

110 
	#__SLONG32_TYPE
 

	)

111 
	#__ULONG32_TYPE
 

	)

112 
	#__S64_TYPE
 
__quad_t


	)

113 
	#__U64_TYPE
 
__u_quad_t


	)

116 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

117 #ñi‡
__WORDSIZE
 == 64

118 
	t__SQUAD_TYPE
 

	)

119 
	t__UQUAD_TYPE
 

	)

120 
	t__SWORD_TYPE
 

	)

121 
	t__UWORD_TYPE
 

	)

122 
	t__SLONG32_TYPE
 

	)

123 
	t__ULONG32_TYPE
 

	)

124 
	t__S64_TYPE
 

	)

125 
	t__U64_TYPE
 

	)

127 
	t__STD_TYPE
 

	)

131 
	~<bôs/ty≥sizes.h
>

134 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

135 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

136 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

137 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

138 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

139 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

140 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

141 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

142 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

143 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

144 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

145 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

146 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

147 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

148 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

149 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

150 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

151 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

153 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

154 
__STD_TYPE
 
__SWBLK_T_TYPE
 
	g__swblk_t
;

155 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

158 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

161 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

164 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

169 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

170 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

173 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

174 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

177 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

178 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

180 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

184 
__off64_t
 
	t__loff_t
;

185 
__quad_t
 *
	t__qaddr_t
;

186 *
	t__ˇddr_t
;

189 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

192 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

195 #unde‡
__STD_TYPE


	@/usr/include/bits/unistd.h

20 #i‚de‡
_UNISTD_H


24 
ssize_t
 
	$__ªad_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

25 
size_t
 
__buÊí
Ë
__wur
;

26 
ssize_t
 
	`__REDIRECT
 (
__ªad_Æüs
, (
__fd
, *
__buf
,

27 
size_t
 
__nbyãs
), 
ªad
Ë
__wur
;

28 
ssize_t
 
	`__REDIRECT
 (
__ªad_chk_w¨n
,

29 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

30 
size_t
 
__buÊí
), 
__ªad_chk
)

31 
__wur
 
	`__w¨«âr
 ("read called with biggerÜengthÅhan size of "

34 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


35 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
)

37 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

39 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

40  
	`__ªad_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

42 i‡(
__nbyãs
 > 
	`__bos0
 (
__buf
))

43  
	`__ªad_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

45  
	`__ªad_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
);

46 
	}
}

48 #ifde‡
__USE_UNIX98


49 
ssize_t
 
	$__¥ód_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

50 
__off_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

51 
ssize_t
 
	$__¥ód64_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

52 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

53 
ssize_t
 
	`__REDIRECT
 (
__¥ód_Æüs
,

54 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

55 
__off_t
 
__off£t
), 
¥ód
Ë
__wur
;

56 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_Æüs
,

57 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

58 
__off64_t
 
__off£t
), 
¥ód64
Ë
__wur
;

59 
ssize_t
 
	`__REDIRECT
 (
__¥ód_chk_w¨n
,

60 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

61 
__off_t
 
__off£t
, 
size_t
 
__bufsize
), 
__¥ód_chk
)

62 
__wur
 
	`__w¨«âr
 ("pread called with biggerÜengthÅhan size of "

64 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_chk_w¨n
,

65 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

66 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
),

67 
__¥ód64_chk
)

68 
__wur
 
	`__w¨«âr
 ("pread64 called with biggerÜengthÅhan size of "

71 #i‚de‡
__USE_FILE_OFFSET64


72 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


73 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off_t
 
__off£t
)

75 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

77 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

78  
	`__¥ód_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

80 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

81  
	`__¥ód_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

82 
	`__bos0
 (
__buf
));

84  
	`__¥ód_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

85 
	}
}

87 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


88 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

90 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

92 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

93  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

95 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

96  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

97 
	`__bos0
 (
__buf
));

100  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

101 
	}
}

104 #ifde‡
__USE_LARGEFILE64


105 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


106 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

108 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

110 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

111  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

113 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

114  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

115 
	`__bos0
 (
__buf
));

118  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

119 
	}
}

123 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


124 
ssize_t
 
	$__ªadlök_chk
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

125 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

126 
size_t
 
__buÊí
)

127 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

128 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_Æüs
,

129 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

130 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
), 
ªadlök
)

131 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

132 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_chk_w¨n
,

133 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

134 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

135 
size_t
 
__buÊí
), 
__ªadlök_chk
)

136 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
	`__w¨«âr
 ("readlink called with biggerÜength "

139 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
ssize_t


140 
	`__NTH
 (
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
, *__ª°ri˘ 
__buf
,

141 
size_t
 
__Àn
))

143 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

145 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

146  
	`__ªadlök_chk
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

148 i‡–
__Àn
 > 
	`__bos
 (
__buf
))

149  
	`__ªadlök_chk_w¨n
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

151  
	`__ªadlök_Æüs
 (
__∑th
, 
__buf
, 
__Àn
);

152 
	}
}

155 #ifde‡
__USE_ATFILE


156 
ssize_t
 
	$__ªadlök©_chk
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

157 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

158 
size_t
 
__buÊí
)

159 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

160 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_Æüs
,

161 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

162 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
),

163 
ªadlök©
)

164 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

165 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_chk_w¨n
,

166 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

167 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

168 
size_t
 
__buÊí
), 
__ªadlök©_chk
)

169 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
	`__w¨«âr
 ("readlinkat called with bigger "

173 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
ssize_t


174 
	`__NTH
 (
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

175 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
))

177 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

179 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

180  
	`__ªadlök©_chk
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

182 i‡(
__Àn
 > 
	`__bos
 (
__buf
))

183  
	`__ªadlök©_chk_w¨n
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
,

184 
	`__bos
 (
__buf
));

186  
	`__ªadlök©_Æüs
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
);

187 
	}
}

190 *
	$__gëcwd_chk
 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
)

191 
__THROW
 
__wur
;

192 *
	`__REDIRECT_NTH
 (
__gëcwd_Æüs
,

193 (*
__buf
, 
size_t
 
__size
), 
gëcwd
Ë
__wur
;

194 *
	`__REDIRECT_NTH
 (
__gëcwd_chk_w¨n
,

195 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
),

196 
__gëcwd_chk
)

197 
__wur
 
	`__w¨«âr
 ("getcwd caller with biggerÜengthÅhan size of "

200 
__exã∫_Æways_ölöe
 
__wur
 *

201 
	`__NTH
 (
	$gëcwd
 (*
__buf
, 
size_t
 
__size
))

203 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

205 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
))

206  
	`__gëcwd_chk
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

208 i‡(
__size
 > 
	`__bos
 (
__buf
))

209  
	`__gëcwd_chk_w¨n
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

211  
	`__gëcwd_Æüs
 (
__buf
, 
__size
);

212 
	}
}

214 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


215 *
	$__gëwd_chk
 (*
__buf
, 
size_t
 
buÊí
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

217 *
	`__REDIRECT_NTH
 (
__gëwd_w¨n
, (*
__buf
), 
gëwd
)

218 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("please use getcwd instead,ás getwd "

221 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
 *

222 
	`__NTH
 (
	$gëwd
 (*
__buf
))

224 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

225  
	`__gëwd_chk
 (
__buf
, 
	`__bos
 (__buf));

226  
	`__gëwd_w¨n
 (
__buf
);

227 
	}
}

230 
size_t
 
	$__c⁄f°r_chk
 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

231 
size_t
 
__buÊí
Ë
__THROW
;

232 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_Æüs
, (
__«me
, *
__buf
,

233 
size_t
 
__Àn
), 
c⁄f°r
);

234 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_chk_w¨n
,

235 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

236 
size_t
 
__buÊí
), 
__c⁄f°r_chk
)

237 
	`__w¨«âr
 ("confstr called with biggerÜengthÅhan size of destination "

240 
__exã∫_Æways_ölöe
 
size_t


241 
	`__NTH
 (
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
))

243 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

245 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

246  
	`__c⁄f°r_chk
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

248 i‡(
	`__bos
 (
__buf
Ë< 
__Àn
)

249  
	`__c⁄f°r_chk_w¨n
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

251  
	`__c⁄f°r_Æüs
 (
__«me
, 
__buf
, 
__Àn
);

252 
	}
}

255 
	$__gëgroups_chk
 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
)

256 
__THROW
 
__wur
;

257 
	`__REDIRECT_NTH
 (
__gëgroups_Æüs
, (
__size
, 
__gid_t
 
__li°
[]),

258 
gëgroups
Ë
__wur
;

259 
	`__REDIRECT_NTH
 (
__gëgroups_chk_w¨n
,

260 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
),

261 
__gëgroups_chk
)

262 
__wur
 
	`__w¨«âr
 ("getgroups called with bigger group countÅhan what "

265 
__exã∫_Æways_ölöe
 

266 
	`__NTH
 (
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]))

268 i‡(
	`__bos
 (
__li°
Ë!(
size_t
) -1)

270 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
) || __size < 0)

271  
	`__gëgroups_chk
 (
__size
, 
__li°
, 
	`__bos
 (__list));

273 i‡(
__size
 *  (
__gid_t
Ë> 
	`__bos
 (
__li°
))

274  
	`__gëgroups_chk_w¨n
 (
__size
, 
__li°
, 
	`__bos
 (__list));

276  
	`__gëgroups_Æüs
 (
__size
, 
__li°
);

277 
	}
}

280 
	$__ây«me_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

281 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

282 
	`__REDIRECT_NTH
 (
__ây«me_r_Æüs
, (
__fd
, *
__buf
,

283 
size_t
 
__buÊí
), 
ây«me_r
)

284 
	`__n⁄nuŒ
 ((2));

285 
	`__REDIRECT_NTH
 (
__ây«me_r_chk_w¨n
,

286 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

287 
size_t
 
__ƒól
), 
__ây«me_r_chk
)

288 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ttyname_r called with bigger buflenÅhan "

291 
__exã∫_Æways_ölöe
 

292 
	`__NTH
 (
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

294 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

296 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

297  
	`__ây«me_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

299 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

300  
	`__ây«me_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

302  
	`__ây«me_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

303 
	}
}

306 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


307 
	$__gëlogö_r_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

308 
	`__n⁄nuŒ
 ((1));

309 
	`__REDIRECT
 (
__gëlogö_r_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

310 
gëlogö_r
Ë
	`__n⁄nuŒ
 ((1));

311 
	`__REDIRECT
 (
__gëlogö_r_chk_w¨n
,

312 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

313 
__gëlogö_r_chk
)

314 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("getlogin_r called with bigger buflenÅhan "

317 
__exã∫_Æways_ölöe
 

318 
	$gëlogö_r
 (*
__buf
, 
size_t
 
__buÊí
)

320 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

322 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

323  
	`__gëlogö_r_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

325 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

326  
	`__gëlogö_r_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

328  
	`__gëlogö_r_Æüs
 (
__buf
, 
__buÊí
);

329 
	}
}

333 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


334 
	$__gëho°«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

335 
__THROW
 
	`__n⁄nuŒ
 ((1));

336 
	`__REDIRECT_NTH
 (
__gëho°«me_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

337 
gëho°«me
Ë
	`__n⁄nuŒ
 ((1));

338 
	`__REDIRECT_NTH
 (
__gëho°«me_chk_w¨n
,

339 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

340 
__gëho°«me_chk
)

341 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("gethostname called with bigger buflenÅhan "

344 
__exã∫_Æways_ölöe
 

345 
	`__NTH
 (
	$gëho°«me
 (*
__buf
, 
size_t
 
__buÊí
))

347 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

349 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

350  
	`__gëho°«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

352 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

353  
	`__gëho°«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

355  
	`__gëho°«me_Æüs
 (
__buf
, 
__buÊí
);

356 
	}
}

360 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

361 
	$__gëdomaö«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

362 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

363 
	`__REDIRECT_NTH
 (
__gëdomaö«me_Æüs
, (*
__buf
,

364 
size_t
 
__buÊí
),

365 
gëdomaö«me
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

366 
	`__REDIRECT_NTH
 (
__gëdomaö«me_chk_w¨n
,

367 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

368 
__gëdomaö«me_chk
)

369 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("getdomainname called with bigger "

373 
__exã∫_Æways_ölöe
 

374 
	`__NTH
 (
	$gëdomaö«me
 (*
__buf
, 
size_t
 
__buÊí
))

376 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

378 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

379  
	`__gëdomaö«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

381 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

382  
	`__gëdomaö«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

384  
	`__gëdomaö«me_Æüs
 (
__buf
, 
__buÊí
);

385 
	}
}

	@/usr/include/bits/waitflags.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


26 
	#WNOHANG
 1

	)

27 
	#WUNTRACED
 2

	)

30 
	#WSTOPPED
 2

	)

31 
	#WEXITED
 4

	)

32 
	#WCONTINUED
 8

	)

33 
	#WNOWAIT
 0x01000000

	)

35 
	#__WNOTHREAD
 0x20000000

	)

37 
	#__WALL
 0x40000000

	)

38 
	#__WCLONE
 0x80000000

	)

	@/usr/include/bits/waitstatus.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


29 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

32 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

35 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

38 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

41 
	#__WIFSIGNALED
(
°©us
) \

42 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

45 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

49 #ifde‡
WCONTINUED


50 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

54 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

57 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

58 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

59 
	#__W_CONTINUED
 0xffff

	)

60 
	#__WCOREFLAG
 0x80

	)

63 #ifdef 
__USE_BSD


65 
	~<ídün.h
>

67 
	uwaô


69 
	mw_°©us
;

72 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


73 
	m__w_ãrmsig
:7;

74 
	m__w_c‹edump
:1;

75 
	m__w_ªtcode
:8;

78 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


80 
	m__w_ªtcode
:8;

81 
	m__w_c‹edump
:1;

82 
	m__w_ãrmsig
:7;

84 } 
	m__waô_ãrmö©ed
;

87 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


88 
	m__w_°›vÆ
:8;

89 
	m__w_°›sig
:8;

92 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


94 
	m__w_°›sig
:8;

95 
	m__w_°›vÆ
:8;

97 } 
	m__waô_°›≥d
;

100 
	#w_ãrmsig
 
__waô_ãrmö©ed
.
__w_ãrmsig


	)

101 
	#w_c‹edump
 
__waô_ãrmö©ed
.
__w_c‹edump


	)

102 
	#w_ªtcode
 
__waô_ãrmö©ed
.
__w_ªtcode


	)

103 
	#w_°›sig
 
__waô_°›≥d
.
__w_°›sig


	)

104 
	#w_°›vÆ
 
__waô_°›≥d
.
__w_°›vÆ


	)

	@/usr/include/endian.h

19 #i‚def 
_ENDIAN_H


20 
	#_ENDIAN_H
 1

	)

22 
	~<„©uªs.h
>

32 
	#__LITTLE_ENDIAN
 1234

	)

33 
	#__BIG_ENDIAN
 4321

	)

34 
	#__PDP_ENDIAN
 3412

	)

37 
	~<bôs/ídün.h
>

41 #i‚de‡
__FLOAT_WORD_ORDER


42 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

45 #ifdef 
__USE_BSD


46 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

47 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

48 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

49 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

52 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


53 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

54 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


55 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

59 #ifde‡
__USE_BSD


61 
	~<bôs/byãsw≠.h
>

63 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


64 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

65 
	#htﬁe16
(
x
Ë(x)

	)

66 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

67 
	#À16toh
(
x
Ë(x)

	)

69 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

70 
	#htﬁe32
(
x
Ë(x)

	)

71 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

72 
	#À32toh
(
x
Ë(x)

	)

74 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

75 
	#htﬁe64
(
x
Ë(x)

	)

76 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

77 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/gnu/stubs.h

4 
	~<bôs/w‹dsize.h
>

6 #i‡
__WORDSIZE
 == 32

7 
	~<gnu/°ubs-32.h
>

8 #ñi‡
__WORDSIZE
 == 64

9 
	~<gnu/°ubs-64.h
>

	@/usr/include/libio.h

29 #i‚de‡
_IO_STDIO_H


30 
	#_IO_STDIO_H


	)

32 
	~<_G_c⁄fig.h
>

34 
	#_IO_pos_t
 
_G_Âos_t


	)

35 
	#_IO_Âos_t
 
_G_Âos_t


	)

36 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

37 
	#_IO_size_t
 
_G_size_t


	)

38 
	#_IO_ssize_t
 
_G_ssize_t


	)

39 
	#_IO_off_t
 
_G_off_t


	)

40 
	#_IO_off64_t
 
_G_off64_t


	)

41 
	#_IO_pid_t
 
_G_pid_t


	)

42 
	#_IO_uid_t
 
_G_uid_t


	)

43 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

44 
	#_IO_HAVE_SYS_WAIT
 
_G_HAVE_SYS_WAIT


	)

45 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

46 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

47 
	#_IO_va_li°
 
_G_va_li°


	)

48 
	#_IO_wöt_t
 
_G_wöt_t


	)

50 #ifde‡
_G_NEED_STDARG_H


52 
	#__√ed___va_li°


	)

53 
	~<°d¨g.h
>

54 #ifde‡
__GNUC_VA_LIST


55 #unde‡
_IO_va_li°


56 
	#_IO_va_li°
 
__gnuc_va_li°


	)

60 #i‚de‡
__P


61 #i‡
_G_HAVE_SYS_CDEFS


62 
	~<sys/cdefs.h
>

64 #ifde‡
__STDC__


65 
	#__P
(
p
Ë
	)
p

66 
	#__PMT
(
p
Ë
	)
p

68 
	#__P
(
p
Ë()

	)

69 
	#__PMT
(
p
Ë()

	)

75 #i‚de‡
_PARAMS


76 
	#_PARAMS
(
¥Ÿos
Ë
	`__P
’rŸos)

	)

79 #i‚de‡
__STDC__


81 c⁄°

	)

84 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

85 #i‚de‡
_G_HAVE_PRINTF_FP


86 
	#_IO_USE_DTOA
 1

	)

89 #i‚de‡
EOF


90 
	#EOF
 (-1)

	)

92 #i‚de‡
NULL


93 #i‡
deföed
 
__GNUG__
 && \

94 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

95 
	#NULL
 (
__nuŒ
)

	)

97 #i‡!
deföed
(
__˝lu•lus
)

98 
	#NULL
 ((*)0)

	)

100 
	#NULL
 (0)

	)

105 
	#_IOS_INPUT
 1

	)

106 
	#_IOS_OUTPUT
 2

	)

107 
	#_IOS_ATEND
 4

	)

108 
	#_IOS_APPEND
 8

	)

109 
	#_IOS_TRUNC
 16

	)

110 
	#_IOS_NOCREATE
 32

	)

111 
	#_IOS_NOREPLACE
 64

	)

112 
	#_IOS_BIN
 128

	)

120 
	#_IO_MAGIC
 0xFBAD0000

	)

121 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

122 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

123 
	#_IO_USER_BUF
 1

	)

124 
	#_IO_UNBUFFERED
 2

	)

125 
	#_IO_NO_READS
 4

	)

126 
	#_IO_NO_WRITES
 8

	)

127 
	#_IO_EOF_SEEN
 0x10

	)

128 
	#_IO_ERR_SEEN
 0x20

	)

129 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

130 
	#_IO_LINKED
 0x80

	)

131 
	#_IO_IN_BACKUP
 0x100

	)

132 
	#_IO_LINE_BUF
 0x200

	)

133 
	#_IO_TIED_PUT_GET
 0x400

	)

134 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

135 
	#_IO_IS_APPENDING
 0x1000

	)

136 
	#_IO_IS_FILEBUF
 0x2000

	)

137 
	#_IO_BAD_SEEN
 0x4000

	)

138 
	#_IO_USER_LOCK
 0x8000

	)

140 
	#_IO_FLAGS2_MMAP
 1

	)

141 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

142 #ifde‡
_LIBC


143 
	#_IO_FLAGS2_FORTIFY
 4

	)

145 
	#_IO_FLAGS2_USER_WBUF
 8

	)

146 #ifde‡
_LIBC


147 
	#_IO_FLAGS2_SCANF_STD
 16

	)

148 
	#_IO_FLAGS2_NOCLOSE
 32

	)

149 
	#_IO_FLAGS2_CLOEXEC
 64

	)

153 
	#_IO_SKIPWS
 01

	)

154 
	#_IO_LEFT
 02

	)

155 
	#_IO_RIGHT
 04

	)

156 
	#_IO_INTERNAL
 010

	)

157 
	#_IO_DEC
 020

	)

158 
	#_IO_OCT
 040

	)

159 
	#_IO_HEX
 0100

	)

160 
	#_IO_SHOWBASE
 0200

	)

161 
	#_IO_SHOWPOINT
 0400

	)

162 
	#_IO_UPPERCASE
 01000

	)

163 
	#_IO_SHOWPOS
 02000

	)

164 
	#_IO_SCIENTIFIC
 04000

	)

165 
	#_IO_FIXED
 010000

	)

166 
	#_IO_UNITBUF
 020000

	)

167 
	#_IO_STDIO
 040000

	)

168 
	#_IO_DONT_CLOSE
 0100000

	)

169 
	#_IO_BOOLALPHA
 0200000

	)

172 
_IO_jump_t
; 
	g_IO_FILE
;

175 #ifde‡
_IO_MTSAFE_IO


176 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

177 
	~<bôs/°dio-lock.h
>

182 
	t_IO_lock_t
;

188 
	s_IO_m¨kî
 {

189 
_IO_m¨kî
 *
	m_√xt
;

190 
_IO_FILE
 *
	m_sbuf
;

194 
	m_pos
;

196 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

197 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

198 
	mpublic
:

199 
°ªamm¨kî
(
°ªambuf
 *
sb
);

200 ~
°ªamm¨kî
();

201 
ßvög
(Ë{  
	m_•os
 == -2; }

202 
dñè
(
°ªamm¨kî
&);

203 
dñè
();

208 
	e__codecvt_ªsu…


210 
	m__codecvt_ok
,

211 
	m__codecvt_∑πül
,

212 
	m__codecvt_îr‹
,

213 
	m__codecvt_noc⁄v


216 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


219 
	s_IO_codecvt


221 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

222 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

223 
	m__mb°©e_t
 *,

224 c⁄° 
	mwch¨_t
 *,

225 c⁄° 
	mwch¨_t
 *,

226 c⁄° 
	mwch¨_t
 **, *,

228 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

229 
	m__mb°©e_t
 *, *,

231 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

232 
	m__mb°©e_t
 *,

234 c⁄° **, 
	mwch¨_t
 *,

235 
	mwch¨_t
 *, wchar_t **);

236 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

237 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

238 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

239 c⁄° *, c⁄° *, 
	m_IO_size_t
);

240 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

242 
_IO_ic⁄v_t
 
	m__cd_ö
;

243 
_IO_ic⁄v_t
 
	m__cd_out
;

247 
	s_IO_wide_d©a


249 
wch¨_t
 *
	m_IO_ªad_±r
;

250 
wch¨_t
 *
	m_IO_ªad_íd
;

251 
wch¨_t
 *
	m_IO_ªad_ba£
;

252 
wch¨_t
 *
	m_IO_wrôe_ba£
;

253 
wch¨_t
 *
	m_IO_wrôe_±r
;

254 
wch¨_t
 *
	m_IO_wrôe_íd
;

255 
wch¨_t
 *
	m_IO_buf_ba£
;

256 
wch¨_t
 *
	m_IO_buf_íd
;

258 
wch¨_t
 *
	m_IO_ßve_ba£
;

259 
wch¨_t
 *
	m_IO_backup_ba£
;

261 
wch¨_t
 *
	m_IO_ßve_íd
;

263 
__mb°©e_t
 
	m_IO_°©e
;

264 
__mb°©e_t
 
	m_IO_œ°_°©e
;

265 
_IO_codecvt
 
	m_codecvt
;

267 
wch¨_t
 
	m_sh‹tbuf
[1];

269 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

273 
	s_IO_FILE
 {

274 
	m_Êags
;

275 
	#_IO_fûe_Êags
 
_Êags


	)

279 * 
	m_IO_ªad_±r
;

280 * 
	m_IO_ªad_íd
;

281 * 
	m_IO_ªad_ba£
;

282 * 
	m_IO_wrôe_ba£
;

283 * 
	m_IO_wrôe_±r
;

284 * 
	m_IO_wrôe_íd
;

285 * 
	m_IO_buf_ba£
;

286 * 
	m_IO_buf_íd
;

288 *
	m_IO_ßve_ba£
;

289 *
	m_IO_backup_ba£
;

290 *
	m_IO_ßve_íd
;

292 
_IO_m¨kî
 *
	m_m¨kîs
;

294 
_IO_FILE
 *
	m_chaö
;

296 
	m_fûío
;

298 
	m_blksize
;

300 
	m_Êags2
;

302 
_IO_off_t
 
	m_ﬁd_off£t
;

304 
	#__HAVE_COLUMN


	)

306 
	m_cur_cﬁumn
;

307 sig√d 
	m_vèbÀ_off£t
;

308 
	m_sh‹tbuf
[1];

312 
_IO_lock_t
 *
	m_lock
;

313 #ifde‡
_IO_USE_OLD_IO_FILE


316 
	s_IO_FILE_com∂ëe


318 
_IO_FILE
 
	m_fûe
;

320 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

321 
_IO_off64_t
 
	m_off£t
;

322 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


324 
_IO_codecvt
 *
	m_codecvt
;

325 
_IO_wide_d©a
 *
	m_wide_d©a
;

326 
_IO_FILE
 *
	m_‰ìªs_li°
;

327 *
	m_‰ìªs_buf
;

328 
size_t
 
	m_‰ìªs_size
;

330 *
	m__∑d1
;

331 *
	m__∑d2
;

332 *
	m__∑d3
;

333 *
	m__∑d4
;

334 
size_t
 
	m__∑d5
;

336 
	m_mode
;

338 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

342 #i‚de‡
__˝lu•lus


343 
_IO_FILE
 
	t_IO_FILE
;

346 
	g_IO_FILE_∂us
;

348 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

349 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

350 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

351 #i‚de‡
_LIBC


352 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

353 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

354 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

356 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

357 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

358 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

366 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

374 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, 
	t__c⁄°
 *
	t__buf
,

375 
	tsize_t
 
	t__n
);

383 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

386 
	t__io_˛o£_‚
 (*
	t__cookõ
);

389 #ifde‡
_GNU_SOURCE


391 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

392 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

393 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

394 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

399 
__io_ªad_‚
 *
	mªad
;

400 
__io_wrôe_‚
 *
	mwrôe
;

401 
__io_£ek_‚
 *
	m£ek
;

402 
__io_˛o£_‚
 *
	m˛o£
;

403 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

404 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

406 
	g_IO_cookõ_fûe
;

409 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

410 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

414 #ifde‡
__˝lu•lus


418 
__undîÊow
 (
_IO_FILE
 *);

419 
__uÊow
 (
_IO_FILE
 *);

420 
__ovîÊow
 (
_IO_FILE
 *, );

421 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


422 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

423 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

424 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

427 #i‡ 
__GNUC__
 >= 3

428 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

430 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

433 
	#_IO_gëc_u∆ocked
(
_Â
) \

434 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

435 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

436 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

437 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

438 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

439 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

440 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

441 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

442 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

443 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

445 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


446 
	#_IO_gëwc_u∆ocked
(
_Â
) \

447 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

448 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

449 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

450 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

451 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

452 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

453 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

454 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

455 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

456 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

459 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

460 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

462 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

463 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

464 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

465 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

467 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

470 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

471 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

473 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

474 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

475 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

477 #ifde‡
_IO_MTSAFE_IO


478 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

479 
	#_IO_Êockfûe
(
_Â
) \

480 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

481 
	#_IO_fu∆ockfûe
(
_Â
) \

482 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

484 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

485 
	#_IO_Êockfûe
(
_Â
Ë

	)

486 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

487 
	#_IO_·rylockfûe
(
_Â
Ë

	)

488 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

489 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

492 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

493 
_IO_va_li°
, *
__ª°ri˘
);

494 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

495 
_IO_va_li°
);

496 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

497 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

499 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

500 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

502 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

504 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


505 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

506 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

507 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

508 #i‡
__GNUC__
 >= 2

511 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


512 
	~<shlib-com∑t.h
>

513 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

514 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

515 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

516 c⁄° 
_IO_°dö_u£d
;

517 
wók_exã∫
 (
_IO_°dö_u£d
);

520 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


521 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

525 
	#_IO_fwide
(
__Â
, 
__mode
) \

526 ({ 
__ªsu…
 = (
__mode
); \

527 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

529 i‡((
__Â
)->
_mode
 == 0) \

531 (
__Â
)->
_mode
 = -1; \

532 
__ªsu…
 = (
__Â
)->
_mode
; \

534 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

535 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

537 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

538 
__ªsu…
; })

	)

541 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

542 
_IO_va_li°
, *
__ª°ri˘
);

543 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

544 
_IO_va_li°
);

545 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

546 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

549 #ifde‡
__LDBL_COMPAT


550 
	~<bôs/libio-ldbl.h
>

553 #ifde‡
__˝lu•lus


	@/usr/include/limits.h

24 #i‚de‡
_LIBC_LIMITS_H_


25 
	#_LIBC_LIMITS_H_
 1

	)

27 
	~<„©uªs.h
>

33 
	#MB_LEN_MAX
 16

	)

38 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

43 #i‚de‡
_LIMITS_H


44 
	#_LIMITS_H
 1

	)

46 
	~<bôs/w‹dsize.h
>

55 
	#CHAR_BIT
 8

	)

58 
	#SCHAR_MIN
 (-128)

	)

59 
	#SCHAR_MAX
 127

	)

62 
	#UCHAR_MAX
 255

	)

65 #ifde‡
__CHAR_UNSIGNED__


66 
	#CHAR_MIN
 0

	)

67 
	#CHAR_MAX
 
UCHAR_MAX


	)

69 
	#CHAR_MIN
 
SCHAR_MIN


	)

70 
	#CHAR_MAX
 
SCHAR_MAX


	)

74 
	#SHRT_MIN
 (-32768)

	)

75 
	#SHRT_MAX
 32767

	)

78 
	#USHRT_MAX
 65535

	)

81 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

82 
	#INT_MAX
 2147483647

	)

85 
	#UINT_MAX
 4294967295U

	)

88 #i‡
__WORDSIZE
 == 64

89 
	#LONG_MAX
 9223372036854775807L

	)

91 
	#LONG_MAX
 2147483647L

	)

93 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

96 #i‡
__WORDSIZE
 == 64

97 
	#ULONG_MAX
 18446744073709551615UL

	)

99 
	#ULONG_MAX
 4294967295UL

	)

102 #ifde‡
__USE_ISOC99


105 
	#LLONG_MAX
 9223372036854775807LL

	)

106 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

109 
	#ULLONG_MAX
 18446744073709551615ULL

	)

123 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


125 #ö˛ude_√xà<
limôs
.
h
>

131 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


132 #i‚de‡
LLONG_MIN


133 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

135 #i‚de‡
LLONG_MAX


136 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

138 #i‚de‡
ULLONG_MAX


139 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

143 #ifdef 
__USE_POSIX


145 
	~<bôs/posix1_lim.h
>

148 #ifdef 
__USE_POSIX2


149 
	~<bôs/posix2_lim.h
>

152 #ifdef 
__USE_XOPEN


153 
	~<bôs/x›í_lim.h
>

	@/usr/include/linux/kd.h

1 #i‚de‡
_LINUX_KD_H


2 
	#_LINUX_KD_H


	)

3 
	~<löux/ty≥s.h
>

8 
	#GIO_FONT
 0x4B60

	)

9 
	#PIO_FONT
 0x4B61

	)

11 
	#GIO_FONTX
 0x4B6B

	)

12 
	#PIO_FONTX
 0x4B6C

	)

13 
	sc⁄sﬁef⁄tdesc
 {

14 
	mch¨cou¡
;

15 
	mch¨height
;

16 *
	mch¨d©a
;

19 
	#PIO_FONTRESET
 0x4B6D

	)

21 
	#GIO_CMAP
 0x4B70

	)

22 
	#PIO_CMAP
 0x4B71

	)

24 
	#KIOCSOUND
 0x4B2F

	)

25 
	#KDMKTONE
 0x4B30

	)

27 
	#KDGETLED
 0x4B31

	)

28 
	#KDSETLED
 0x4B32

	)

29 
	#LED_SCR
 0x01

	)

30 
	#LED_NUM
 0x02

	)

31 
	#LED_CAP
 0x04

	)

33 
	#KDGKBTYPE
 0x4B33

	)

34 
	#KB_84
 0x01

	)

35 
	#KB_101
 0x02

	)

36 
	#KB_OTHER
 0x03

	)

38 
	#KDADDIO
 0x4B34

	)

39 
	#KDDELIO
 0x4B35

	)

40 
	#KDENABIO
 0x4B36

	)

41 
	#KDDISABIO
 0x4B37

	)

43 
	#KDSETMODE
 0x4B3A

	)

44 
	#KD_TEXT
 0x00

	)

45 
	#KD_GRAPHICS
 0x01

	)

46 
	#KD_TEXT0
 0x02

	)

47 
	#KD_TEXT1
 0x03

	)

48 
	#KDGETMODE
 0x4B3B

	)

50 
	#KDMAPDISP
 0x4B3C

	)

51 
	#KDUNMAPDISP
 0x4B3D

	)

53 
	ts¸nm≠_t
;

54 
	#E_TABSZ
 256

	)

55 
	#GIO_SCRNMAP
 0x4B40

	)

56 
	#PIO_SCRNMAP
 0x4B41

	)

57 
	#GIO_UNISCRNMAP
 0x4B69

	)

58 
	#PIO_UNISCRNMAP
 0x4B6A

	)

60 
	#GIO_UNIMAP
 0x4B66

	)

61 
	sunùaú
 {

62 
	municode
;

63 
	mf⁄ços
;

65 
	sunim≠desc
 {

66 
	míåy_˘
;

67 
unùaú
 *
	míåõs
;

69 
	#PIO_UNIMAP
 0x4B67

	)

70 
	#PIO_UNIMAPCLR
 0x4B68

	)

71 
	sunim≠öô
 {

72 
	madvi£d_hashsize
;

73 
	madvi£d_hash°ï
;

74 
	madvi£d_hashÀvñ
;

77 
	#UNI_DIRECT_BASE
 0xF000

	)

78 
	#UNI_DIRECT_MASK
 0x01FF

	)

80 
	#K_RAW
 0x00

	)

81 
	#K_XLATE
 0x01

	)

82 
	#K_MEDIUMRAW
 0x02

	)

83 
	#K_UNICODE
 0x03

	)

84 
	#K_OFF
 0x04

	)

85 
	#KDGKBMODE
 0x4B44

	)

86 
	#KDSKBMODE
 0x4B45

	)

88 
	#K_METABIT
 0x03

	)

89 
	#K_ESCPREFIX
 0x04

	)

90 
	#KDGKBMETA
 0x4B62

	)

91 
	#KDSKBMETA
 0x4B63

	)

93 
	#K_SCROLLLOCK
 0x01

	)

94 
	#K_NUMLOCK
 0x02

	)

95 
	#K_CAPSLOCK
 0x04

	)

96 
	#KDGKBLED
 0x4B64

	)

97 
	#KDSKBLED
 0x4B65

	)

99 
	skbíåy
 {

100 
	mkb_èbÀ
;

101 
	mkb_ödex
;

102 
	mkb_vÆue
;

104 
	#K_NORMTAB
 0x00

	)

105 
	#K_SHIFTTAB
 0x01

	)

106 
	#K_ALTTAB
 0x02

	)

107 
	#K_ALTSHIFTTAB
 0x03

	)

109 
	#KDGKBENT
 0x4B46

	)

110 
	#KDSKBENT
 0x4B47

	)

112 
	skb£¡ry
 {

113 
	mkb_func
;

114 
	mkb_°rög
[512];

116 
	#KDGKBSENT
 0x4B48

	)

117 
	#KDSKBSENT
 0x4B49

	)

119 
	skbdü¸
 {

120 
	mdü¸
, 
	mba£
, 
	mªsu…
;

122 
	skbdü¸s
 {

123 
	mkb_˙t
;

124 
kbdü¸
 
	mkbdü¸
[256];

126 
	#KDGKBDIACR
 0x4B4A

	)

127 
	#KDSKBDIACR
 0x4B4B

	)

129 
	skbdü¸uc
 {

130 
	mdü¸
, 
	mba£
, 
	mªsu…
;

132 
	skbdü¸suc
 {

133 
	mkb_˙t
;

134 
kbdü¸uc
 
	mkbdü¸uc
[256];

136 
	#KDGKBDIACRUC
 0x4BFA

	)

137 
	#KDSKBDIACRUC
 0x4BFB

	)

139 
	skbkeycode
 {

140 
	msˇncode
, 
	mkeycode
;

142 
	#KDGETKEYCODE
 0x4B4C

	)

143 
	#KDSETKEYCODE
 0x4B4D

	)

145 
	#KDSIGACCEPT
 0x4B4E

	)

147 
	skbd_ª≥©
 {

148 
	mdñay
;

149 
	m≥riod
;

153 
	#KDKBDREP
 0x4B52

	)

156 
	#KDFONTOP
 0x4B72

	)

158 
	sc⁄sﬁe_f⁄t_›
 {

159 
	m›
;

160 
	mÊags
;

161 
	mwidth
, 
	mheight
;

162 
	mch¨cou¡
;

163 *
	md©a
;

166 
	sc⁄sﬁe_f⁄t
 {

167 
	mwidth
, 
	mheight
;

168 
	mch¨cou¡
;

169 *
	md©a
;

172 
	#KD_FONT_OP_SET
 0

	)

173 
	#KD_FONT_OP_GET
 1

	)

174 
	#KD_FONT_OP_SET_DEFAULT
 2

	)

175 
	#KD_FONT_OP_COPY
 3

	)

177 
	#KD_FONT_FLAG_DONT_RECALC
 1

	)

	@/usr/include/linux/limits.h

1 #i‚de‡
_LINUX_LIMITS_H


2 
	#_LINUX_LIMITS_H


	)

4 
	#NR_OPEN
 1024

	)

6 
	#NGROUPS_MAX
 65536

	)

7 
	#ARG_MAX
 131072

	)

8 
	#LINK_MAX
 127

	)

9 
	#MAX_CANON
 255

	)

10 
	#MAX_INPUT
 255

	)

11 
	#NAME_MAX
 255

	)

12 
	#PATH_MAX
 4096

	)

13 
	#PIPE_BUF
 4096

	)

14 
	#XATTR_NAME_MAX
 255

	)

15 
	#XATTR_SIZE_MAX
 65536

	)

16 
	#XATTR_LIST_MAX
 65536

	)

18 
	#RTSIG_MAX
 32

	)

	@/usr/include/linux/param.h

1 #i‚de‡
_LINUX_PARAM_H


2 
	#_LINUX_PARAM_H


	)

4 
	~<asm/∑øm.h
>

	@/usr/include/ncurses_dll.h

30 #i‚de‡
NCURSES_DLL_H_ö˛


31 
	#NCURSES_DLL_H_ö˛
 1

	)

37 
	#NCURSES_PUBLIC_VAR
(
«me
Ë
_nc_
##
	)
name

38 
	#NCURSES_WRAPPED_VAR
(
ty≥
,
«me
Ëty≥ 
	`NCURSES_PUBLIC_VAR
“ame)()

	)

44 #unde‡
NCURSES_DLL


45 
	#NCURSES_STATIC


	)

47 #i‡
deföed
(
__CYGWIN__
Ë|| deföed(
__MINGW32__
)

48 #i‡
deföed
(
NCURSES_DLL
)

49 #i‡
deföed
(
NCURSES_STATIC
)

50 #unde‡
NCURSES_STATIC


53 #unde‡
NCURSES_IMPEXP


54 #unde‡
NCURSES_API


55 #unde‡
NCURSES_EXPORT


56 #unde‡
NCURSES_EXPORT_VAR


57 #i‡
deföed
(
NCURSES_DLL
)

59 
	#NCURSES_IMPEXP
 
	`__de˛•ec
(
dŒexp‹t
)

	)

60 #ñi‡
deföed
(
NCURSES_STATIC
)

62 
	#NCURSES_IMPEXP


	)

65 
	#NCURSES_IMPEXP
 
	`__de˛•ec
(
dŒimp‹t
)

	)

67 
	#NCURSES_API
 
__cde˛


	)

68 
	#NCURSES_EXPORT
(
ty≥
Ë
NCURSES_IMPEXP
Åy≥ 
NCURSES_API


	)

69 
	#NCURSES_EXPORT_VAR
(
ty≥
Ë
NCURSES_IMPEXP
 
	)
type

73 #i‡!
deföed
(
NCURSES_IMPEXP
)

74 
	#NCURSES_IMPEXP


	)

76 #i‡!
deföed
(
NCURSES_API
)

77 
	#NCURSES_API


	)

79 #i‡!
deföed
(
NCURSES_EXPORT
)

80 
	#NCURSES_EXPORT
(
ty≥
Ë
NCURSES_IMPEXP
Åy≥ 
NCURSES_API


	)

82 #i‡!
deföed
(
NCURSES_EXPORT_VAR
)

83 
	#NCURSES_EXPORT_VAR
(
ty≥
Ë
NCURSES_IMPEXP
 
	)
type

	@/usr/include/sys/cdefs.h

20 #i‚def 
_SYS_CDEFS_H


21 
	#_SYS_CDEFS_H
 1

	)

24 #i‚de‡
_FEATURES_H


25 
	~<„©uªs.h
>

31 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


36 #unde‡
__P


37 #unde‡
__PMT


39 #ifde‡
__GNUC__


43 #i‡
__GNUC_PREREQ
 (4, 6Ë&& !
deföed
 
_LIBC


44 
	#__LEAF
 , 
__Àaf__


	)

45 
	#__LEAF_ATTR
 
	`__©åibuã__
 ((
__Àaf__
))

	)

47 
	#__LEAF


	)

48 
	#__LEAF_ATTR


	)

56 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

57 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
))

	)

58 
	#__THROWNL
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

59 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
)Ë
	)
fct

61 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

62 
	#__THROW
 
	`throw
 ()

	)

63 
	#__THROWNL
 
	`throw
 ()

	)

64 
	#__NTH
(
f˘
Ë
__LEAF_ATTR
 f˘ 
	`throw
 ()

	)

66 
	#__THROW


	)

67 
	#__THROWNL


	)

68 
	#__NTH
(
f˘
Ë
	)
fct

74 
	#__ölöe


	)

76 
	#__THROW


	)

77 
	#__THROWNL


	)

78 
	#__NTH
(
f˘
Ë
	)
fct

80 
	#__c⁄°
 c⁄°

	)

81 
	#__sig√d
 sig√d

	)

82 
	#__vﬁ©ûe
 vﬁ©ûe

	)

88 
	#__P
(
¨gs
Ë
	)
args

89 
	#__PMT
(
¨gs
Ë
	)
args

94 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

95 
	#__STRING
(
x
Ë#x

	)

98 
	#__±r_t
 *

	)

99 
	#__l⁄g_doubÀ_t
 

	)

103 #ifdef 
__˝lu•lus


104 
	#__BEGIN_DECLS
 "C" {

	)

105 
	#__END_DECLS
 }

	)

107 
	#__BEGIN_DECLS


	)

108 
	#__END_DECLS


	)

117 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


118 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

119 
	#__END_NAMESPACE_STD
 }

	)

120 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

121 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

122 
	#__END_NAMESPACE_C99
 }

	)

123 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

128 
	#__BEGIN_NAMESPACE_STD


	)

129 
	#__END_NAMESPACE_STD


	)

130 
	#__USING_NAMESPACE_STD
(
«me
)

	)

131 
	#__BEGIN_NAMESPACE_C99


	)

132 
	#__END_NAMESPACE_C99


	)

133 
	#__USING_NAMESPACE_C99
(
«me
)

	)

138 #i‚de‡
__BOUNDED_POINTERS__


139 
	#__bounded


	)

140 
	#__unbounded


	)

141 
	#__±rvÆue


	)

146 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

147 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

149 #i‡
__GNUC_PREREQ
 (4,3)

150 
	#__w¨nde˛
(
«me
, 
msg
) \

151 
	`«me
 (Ë
	`__©åibuã__
((
	`__w¨nög__
 (
msg
)))

	)

152 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

153 
	#__îr‹de˛
(
«me
, 
msg
) \

154 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

156 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

157 
	#__w¨«âr
(
msg
)

	)

158 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

162 #i‡
__GNUC_PREREQ
 (2,97)

164 
	#__Êex¨r
 []

	)

166 #ifde‡
__GNUC__


167 
	#__Êex¨r
 [0]

	)

169 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

170 
	#__Êex¨r
 []

	)

173 
	#__Êex¨r
 [1]

	)

189 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

191 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

192 #ifde‡
__˝lu•lus


193 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

194 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

195 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

196 
«me
 
¥Ÿo
 
__THROWNL
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

198 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

199 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

200 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

201 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROWNL


	)

203 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

204 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

217 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

218 
	#__©åibuã__
(
xyz
Ë

	)

224 #i‡
__GNUC_PREREQ
 (2,96)

225 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

227 
	#__©åibuã_mÆloc__


	)

233 #i‡
__GNUC_PREREQ
 (2,96)

234 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

236 
	#__©åibuã_puª__


	)

240 #i‡
__GNUC_PREREQ
 (2,5)

241 
	#__©åibuã_c⁄°__
 
	`__©åibuã__
 ((
__c⁄°__
))

	)

243 
	#__©åibuã_c⁄°__


	)

249 #i‡
__GNUC_PREREQ
 (3,1)

250 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

251 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

253 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

254 
	#__©åibuã_noölöe__


	)

258 #i‡
__GNUC_PREREQ
 (3,2)

259 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

261 
	#__©åibuã_dïªˇãd__


	)

270 #i‡
__GNUC_PREREQ
 (2,8)

271 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

273 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

280 #i‡
__GNUC_PREREQ
 (2,97)

281 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

282 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

284 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

289 #i‡
__GNUC_PREREQ
 (3,3)

290 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

292 
	#__n⁄nuŒ
(
∑øms
)

	)

297 #i‡
__GNUC_PREREQ
 (3,4)

298 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

299 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

300 #i‡
__USE_FORTIFY_LEVEL
 > 0

301 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

304 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

306 #i‚de‡
__wur


307 
	#__wur


	)

311 #i‡
__GNUC_PREREQ
 (3,2)

312 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

314 
	#__Æways_ölöe
 
__ölöe


	)

319 #i‡!
deföed
 
__˝lu•lus
 || 
__GNUC_PREREQ
 (4,3)

320 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__˝lu•lus


321 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

322 #i‡
__GNUC_PREREQ
 (4,3)

323 
	#__exã∫_Æways_ölöe
 \

324 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
, 
__¨tificül__
))

	)

326 
	#__exã∫_Æways_ölöe
 \

327 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

330 
	#__exã∫_ölöe
 
__ölöe


	)

331 #i‡
__GNUC_PREREQ
 (4,3)

332 
	#__exã∫_Æways_ölöe
 \

333 
__Æways_ölöe
 
	`__©åibuã__
 ((
__¨tificül__
))

	)

335 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

342 #i‡
__GNUC_PREREQ
 (4,3)

343 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

344 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

351 #i‡!
__GNUC_PREREQ
 (2,8)

352 
	#__exãnsi⁄__


	)

356 #i‡!
__GNUC_PREREQ
 (2,92)

357 
	#__ª°ri˘


	)

363 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


364 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

366 #ifde‡
__GNUC__


367 
	#__ª°ri˘_¨r


	)

369 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

370 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

373 
	#__ª°ri˘_¨r


	)

378 
	~<bôs/w‹dsize.h
>

380 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


381 
	#__LDBL_COMPAT
 1

	)

382 #ifde‡
__REDIRECT


383 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

384 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

385 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

386 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

387 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

388 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

389 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

390 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

391 
	#__LDBL_REDIR_DECL
(
«me
) \

392 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

393 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

394 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

395 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

396 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

399 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


400 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

401 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

402 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

403 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

404 
	#__LDBL_REDIR_DECL
(
«me
)

	)

405 #ifde‡
__REDIRECT


406 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

407 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

408 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

	@/usr/include/sys/resource.h

19 #i‚def 
_SYS_RESOURCE_H


20 
	#_SYS_RESOURCE_H
 1

	)

22 
	~<„©uªs.h
>

25 
	~<bôs/ªsour˚.h
>

27 #i‚de‡
__id_t_deföed


28 
__id_t
 
	tid_t
;

29 
	#__id_t_deföed


	)

32 
	g__BEGIN_DECLS


38 #i‡
deföed
 
__USE_GNU
 && !deföed 
__˝lu•lus


39 
__æimô_ªsour˚
 
	t__æimô_ªsour˚_t
;

40 
__rußge_who
 
	t__rußge_who_t
;

41 
__¥i‹ôy_which
 
	t__¥i‹ôy_which_t
;

43 
	t__æimô_ªsour˚_t
;

44 
	t__rußge_who_t
;

45 
	t__¥i‹ôy_which_t
;

50 #i‚de‡
__USE_FILE_OFFSET64


51 
	$gëæimô
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

52 
æimô
 *
__æimôs
Ë
__THROW
;

54 #ifde‡
__REDIRECT_NTH


55 
	`__REDIRECT_NTH
 (
gëæimô
, (
__æimô_ªsour˚_t
 
__ªsour˚
,

56 
æimô
 *
__æimôs
), 
gëæimô64
);

58 
	#gëæimô
 
gëæimô64


	)

61 #ifde‡
__USE_LARGEFILE64


62 
	$gëæimô64
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

63 
æimô64
 *
__æimôs
Ë
__THROW
;

69 #i‚de‡
__USE_FILE_OFFSET64


70 
	$£ålimô
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

71 
__c⁄°
 
æimô
 *
__æimôs
Ë
__THROW
;

73 #ifde‡
__REDIRECT_NTH


74 
	`__REDIRECT_NTH
 (
£ålimô
, (
__æimô_ªsour˚_t
 
__ªsour˚
,

75 
__c⁄°
 
æimô
 *
__æimôs
),

76 
£ålimô64
);

78 
	#£ålimô
 
£ålimô64


	)

81 #ifde‡
__USE_LARGEFILE64


82 
	$£ålimô64
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

83 
__c⁄°
 
æimô64
 *
__æimôs
Ë
__THROW
;

88 
	$gërußge
 (
__rußge_who_t
 
__who
, 
rußge
 *
__ußge
Ë
__THROW
;

94 
	$gë¥i‹ôy
 (
__¥i‹ôy_which_t
 
__which
, 
id_t
 
__who
Ë
__THROW
;

98 
	$£çri‹ôy
 (
__¥i‹ôy_which_t
 
__which
, 
id_t
 
__who
, 
__¥io
)

99 
__THROW
;

101 
__END_DECLS


	@/usr/include/sys/sysmacros.h

21 #i‚de‡
_SYS_SYSMACROS_H


22 
	#_SYS_SYSMACROS_H
 1

	)

24 
	~<„©uªs.h
>

29 #ifde‡
__GLIBC_HAVE_LONG_LONG


30 
__BEGIN_DECLS


32 
__exãnsi⁄__


33 
	$gnu_dev_maj‹
 (
__dev
)

34 
__THROW
 
__©åibuã_c⁄°__
;

35 
__exãnsi⁄__


36 
	$gnu_dev_mö‹
 (
__dev
)

37 
__THROW
 
__©åibuã_c⁄°__
;

38 
__exãnsi⁄__


39 
	$gnu_dev_makedev
 (
__maj‹
,

40 
__mö‹
)

41 
__THROW
 
__©åibuã_c⁄°__
;

43 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES


44 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

45 
	`__NTH
 (
	$gnu_dev_maj‹
 (
__dev
))

47  ((
__dev
 >> 8) & 0xfff) | (() (__dev >> 32) & ~0xfff);

48 
	}
}

50 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

51 
__NTH
 (
	$gnu_dev_mö‹
 (
__dev
))

53  (
__dev
 & 0xff) | (() (__dev >> 12) & ~0xff);

54 
	}
}

56 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

57 
__NTH
 (
	$gnu_dev_makedev
 (
__maj‹
, 
__mö‹
))

59  ((
__mö‹
 & 0xffË| ((
__maj‹
 & 0xfff) << 8)

60 | (((Ë(
__mö‹
 & ~0xff)) << 12)

61 | (((Ë(
__maj‹
 & ~0xfff)) << 32));

62 
	}
}

64 
	g__END_DECLS


67 
	#maj‹
(
dev
Ë
	`gnu_dev_maj‹
 (dev)

	)

68 
	#mö‹
(
dev
Ë
	`gnu_dev_mö‹
 (dev)

	)

69 
	#makedev
(
maj
, 
mö
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

	@/usr/include/sys/ttydefaults.h

40 #i‚de‡
_SYS_TTYDEFAULTS_H_


41 
	#_SYS_TTYDEFAULTS_H_


	)

46 
	#TTYDEF_IFLAG
 (
BRKINT
 | 
ISTRIP
 | 
ICRNL
 | 
IMAXBEL
 | 
IXON
 | 
IXANY
)

	)

47 
	#TTYDEF_OFLAG
 (
OPOST
 | 
ONLCR
 | 
XTABS
)

	)

48 
	#TTYDEF_LFLAG
 (
ECHO
 | 
ICANON
 | 
ISIG
 | 
IEXTEN
 | 
ECHOE
|
ECHOKE
|
ECHOCTL
)

	)

49 
	#TTYDEF_CFLAG
 (
CREAD
 | 
CS7
 | 
PARENB
 | 
HUPCL
)

	)

50 
	#TTYDEF_SPEED
 (
B9600
)

	)

55 
	#CTRL
(
x
Ë(x&037)

	)

56 
	#CEOF
 
	`CTRL
('d')

	)

57 #ifde‡
_POSIX_VDISABLE


58 
	#CEOL
 
_POSIX_VDISABLE


	)

60 
	#CEOL
 '\0'

	)

62 
	#CERASE
 0177

	)

63 
	#CINTR
 
	`CTRL
('c')

	)

64 #ifde‡
_POSIX_VDISABLE


65 
	#CSTATUS
 
_POSIX_VDISABLE


	)

67 
	#CSTATUS
 '\0'

	)

69 
	#CKILL
 
	`CTRL
('u')

	)

70 
	#CMIN
 1

	)

71 
	#CQUIT
 034

	)

72 
	#CSUSP
 
	`CTRL
('z')

	)

73 
	#CTIME
 0

	)

74 
	#CDSUSP
 
	`CTRL
('y')

	)

75 
	#CSTART
 
	`CTRL
('q')

	)

76 
	#CSTOP
 
	`CTRL
('s')

	)

77 
	#CLNEXT
 
	`CTRL
('v')

	)

78 
	#CDISCARD
 
	`CTRL
('o')

	)

79 
	#CWERASE
 
	`CTRL
('w')

	)

80 
	#CREPRINT
 
	`CTRL
('r')

	)

81 
	#CEOT
 
CEOF


	)

83 
	#CBRK
 
CEOL


	)

84 
	#CRPRNT
 
CREPRINT


	)

85 
	#CFLUSH
 
CDISCARD


	)

93 #ifde‡
TTYDEFCHARS


94 
cc_t
 
	gâydefch¨s
[
NCCS
] = {

95 
CEOF
, 
CEOL
, CEOL, 
CERASE
, 
CWERASE
, 
CKILL
, 
CREPRINT
,

96 
_POSIX_VDISABLE
, 
CINTR
, 
CQUIT
, 
CSUSP
, 
CDSUSP
, 
CSTART
, 
CSTOP
, 
CLNEXT
,

97 
CDISCARD
, 
CMIN
, 
CTIME
, 
CSTATUS
, 
_POSIX_VDISABLE


99 #unde‡
TTYDEFCHARS


	@/usr/include/sys/ucontext.h

19 #i‚de‡
_SYS_UCONTEXT_H


20 
	#_SYS_UCONTEXT_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<sig«l.h
>

27 
	~<bôs/sigc⁄ãxt.h
>

31 
	tgªg_t
;

34 
	#NGREG
 19

	)

37 
gªg_t
 
	tgªg£t_t
[
NGREG
];

39 #ifde‡
__USE_GNU


43 
	mREG_GS
 = 0,

44 
	#REG_GS
 
REG_GS


	)

45 
	mREG_FS
,

46 
	#REG_FS
 
REG_FS


	)

47 
	mREG_ES
,

48 
	#REG_ES
 
REG_ES


	)

49 
	mREG_DS
,

50 
	#REG_DS
 
REG_DS


	)

51 
	mREG_EDI
,

52 
	#REG_EDI
 
REG_EDI


	)

53 
	mREG_ESI
,

54 
	#REG_ESI
 
REG_ESI


	)

55 
	mREG_EBP
,

56 
	#REG_EBP
 
REG_EBP


	)

57 
	mREG_ESP
,

58 
	#REG_ESP
 
REG_ESP


	)

59 
	mREG_EBX
,

60 
	#REG_EBX
 
REG_EBX


	)

61 
	mREG_EDX
,

62 
	#REG_EDX
 
REG_EDX


	)

63 
	mREG_ECX
,

64 
	#REG_ECX
 
REG_ECX


	)

65 
	mREG_EAX
,

66 
	#REG_EAX
 
REG_EAX


	)

67 
	mREG_TRAPNO
,

68 
	#REG_TRAPNO
 
REG_TRAPNO


	)

69 
	mREG_ERR
,

70 
	#REG_ERR
 
REG_ERR


	)

71 
	mREG_EIP
,

72 
	#REG_EIP
 
REG_EIP


	)

73 
	mREG_CS
,

74 
	#REG_CS
 
REG_CS


	)

75 
	mREG_EFL
,

76 
	#REG_EFL
 
REG_EFL


	)

77 
	mREG_UESP
,

78 
	#REG_UESP
 
REG_UESP


	)

79 
	mREG_SS


80 
	#REG_SS
 
REG_SS


	)

85 
	s_libc_Âªg


87 
	msignifiˇnd
[4];

88 
	mexp⁄ít
;

91 
	s_libc_Â°©e


93 
	mcw
;

94 
	msw
;

95 
	mèg
;

96 
	mùoff
;

97 
	mcs£l
;

98 
	md©aoff
;

99 
	md©a£l
;

100 
_libc_Âªg
 
	m_°
[8];

101 
	m°©us
;

105 
_libc_Â°©e
 *
	tÂªg£t_t
;

110 
gªg£t_t
 
	mgªgs
;

113 
Âªg£t_t
 
	mÂªgs
;

114 
	mﬁdmask
;

115 
	m¸2
;

116 } 
	tmc⁄ãxt_t
;

119 
	suc⁄ãxt


121 
	muc_Êags
;

122 
uc⁄ãxt
 *
	muc_lök
;

123 
°ack_t
 
	muc_°ack
;

124 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

125 
__sig£t_t
 
	muc_sigmask
;

126 
_libc_Â°©e
 
	m__Âªgs_mem
;

127 } 
	tuc⁄ãxt_t
;

	@/usr/include/xlocale.h

21 #i‚de‡
_XLOCALE_H


22 
	#_XLOCALE_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

40 } *
	t__loˇÀ_t
;

43 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

21 
	#_G_size_t
 
size_t


	)

24 
__off_t
 
	m__pos
;

25 
__mb°©e_t
 
	m__°©e
;

26 } 
	t_G_Âos_t
;

29 
__off64_t
 
	m__pos
;

30 
__mb°©e_t
 
	m__°©e
;

31 } 
	t_G_Âos64_t
;

32 
	#_G_ssize_t
 
__ssize_t


	)

33 
	#_G_off_t
 
__off_t


	)

34 
	#_G_off64_t
 
__off64_t


	)

35 
	#_G_pid_t
 
__pid_t


	)

36 
	#_G_uid_t
 
__uid_t


	)

37 
	#_G_wch¨_t
 
wch¨_t


	)

38 
	#_G_wöt_t
 
wöt_t


	)

39 
	#_G_°©64
 
°©64


	)

40 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


41 
	~<gc⁄v.h
>

44 
__gc⁄v_öfo
 
	m__cd
;

47 
__gc⁄v_öfo
 
	m__cd
;

48 
__gc⁄v_°ï_d©a
 
	m__d©a
;

49 } 
	m__comböed
;

50 } 
	t_G_ic⁄v_t
;

53 
	t_G_öt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

54 
	t_G_öt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

55 
	t_G_uöt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

56 
	t_G_uöt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

58 
	#_G_HAVE_BOOL
 1

	)

62 
	#_G_HAVE_ATEXIT
 1

	)

63 
	#_G_HAVE_SYS_CDEFS
 1

	)

64 
	#_G_HAVE_SYS_WAIT
 1

	)

65 
	#_G_NEED_STDARG_H
 1

	)

66 
	#_G_va_li°
 
__gnuc_va_li°


	)

68 
	#_G_HAVE_PRINTF_FP
 1

	)

69 
	#_G_HAVE_MMAP
 1

	)

70 
	#_G_HAVE_MREMAP
 1

	)

71 
	#_G_HAVE_LONG_DOUBLE_IO
 1

	)

72 
	#_G_HAVE_IO_FILE_OPEN
 1

	)

73 
	#_G_HAVE_IO_GETLINE_INFO
 1

	)

75 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

77 
	#_G_OPEN64
 
__›í64


	)

78 
	#_G_LSEEK64
 
__l£ek64


	)

79 
	#_G_MMAP64
 
__mm≠64


	)

80 
	#_G_FSTAT64
(
fd
,
buf
Ë
	`__fx°©64
 (
_STAT_VER
, fd, buf)

	)

83 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

85 
	#_G_BUFSIZ
 8192

	)

88 
	#_G_NAMES_HAVE_UNDERSCORE
 0

	)

89 
	#_G_VTABLE_LABEL_HAS_LENGTH
 1

	)

90 
	#_G_USING_THUNKS
 1

	)

91 
	#_G_VTABLE_LABEL_PREFIX
 "__vt_"

	)

92 
	#_G_VTABLE_LABEL_PREFIX_ID
 
__vt_


	)

95 #i‡
deföed
 
__˝lu•lus
 || deföed 
__STDC__


96 
	#_G_ARGS
(
ARGLIST
Ë
	)
ARGLIST

98 
	#_G_ARGS
(
ARGLIST
Ë()

	)

	@/usr/include/asm/ioctls.h

1 
	~<asm-gíîic/io˘ls.h
>

	@/usr/include/asm/param.h

1 
	~<asm-gíîic/∑øm.h
>

	@/usr/include/asm/sigcontext.h

1 #i‚de‡
_ASM_X86_SIGCONTEXT_H


2 
	#_ASM_X86_SIGCONTEXT_H


	)

5 
	~<löux/ty≥s.h
>

7 
	#FP_XSTATE_MAGIC1
 0x46505853U

	)

8 
	#FP_XSTATE_MAGIC2
 0x46505845U

	)

9 
	#FP_XSTATE_MAGIC2_SIZE
 (
FP_XSTATE_MAGIC2
)

	)

23 
	s_Âx_sw_byãs
 {

24 
__u32
 
	mmagic1
;

25 
__u32
 
	mexãnded_size
;

28 
__u64
 
	mx°©e_bv
;

33 
__u32
 
	mx°©e_size
;

38 
__u32
 
	m∑ddög
[7];

41 #ifde‡
__i386__


56 
	s_Âªg
 {

57 
	msignifiˇnd
[4];

58 
	mexp⁄ít
;

61 
	s_Âxªg
 {

62 
	msignifiˇnd
[4];

63 
	mexp⁄ít
;

64 
	m∑ddög
[3];

67 
	s_xmmªg
 {

68 
	mñemít
[4];

71 
	s_Â°©e
 {

73 
	mcw
;

74 
	msw
;

75 
	mèg
;

76 
	mùoff
;

77 
	mcs£l
;

78 
	md©aoff
;

79 
	md©a£l
;

80 
_Âªg
 
	m_°
[8];

81 
	m°©us
;

82 
	mmagic
;

85 
	m_fx§_ív
[6];

86 
	mmxc§
;

87 
	mª£rved
;

88 
_Âxªg
 
	m_fx§_°
[8];

89 
_xmmªg
 
	m_xmm
[8];

90 
	m∑ddög1
[44];

93 
	m∑ddög2
[12];

94 
_Âx_sw_byãs
 
	msw_ª£rved
;

99 
	#X86_FXSR_MAGIC
 0x0000

	)

104 
	ssigc⁄ãxt
 {

105 
	mgs
, 
	m__gsh
;

106 
	mfs
, 
	m__fsh
;

107 
	mes
, 
	m__esh
;

108 
	mds
, 
	m__dsh
;

109 
	medi
;

110 
	mesi
;

111 
	mebp
;

112 
	me•
;

113 
	mebx
;

114 
	medx
;

115 
	mecx
;

116 
	móx
;

117 
	må≠no
;

118 
	mîr
;

119 
	meù
;

120 
	mcs
, 
	m__csh
;

121 
	meÊags
;

122 
	me•_©_sig«l
;

123 
	mss
, 
	m__ssh
;

124 
_Â°©e
 *
	mÂ°©e
;

125 
	mﬁdmask
;

126 
	m¸2
;

134 
	s_Â°©e
 {

135 
__u16
 
	mcwd
;

136 
__u16
 
	mswd
;

137 
__u16
 
	mtwd
;

139 
__u16
 
	mf›
;

140 
__u64
 
	mrù
;

141 
__u64
 
	mrdp
;

142 
__u32
 
	mmxc§
;

143 
__u32
 
	mmxc§_mask
;

144 
__u32
 
	m°_•a˚
[32];

145 
__u32
 
	mxmm_•a˚
[64];

146 
__u32
 
	mª£rved2
[12];

148 
__u32
 
	mª£rved3
[12];

149 
_Âx_sw_byãs
 
	msw_ª£rved
;

157 
	ssigc⁄ãxt
 {

158 
	mr8
;

159 
	mr9
;

160 
	mr10
;

161 
	mr11
;

162 
	mr12
;

163 
	mr13
;

164 
	mr14
;

165 
	mr15
;

166 
	mrdi
;

167 
	mrsi
;

168 
	mrbp
;

169 
	mrbx
;

170 
	mrdx
;

171 
	møx
;

172 
	mrcx
;

173 
	mr•
;

174 
	mrù
;

175 
	meÊags
;

176 
	mcs
;

177 
	mgs
;

178 
	mfs
;

179 
	m__∑d0
;

180 
	mîr
;

181 
	må≠no
;

182 
	mﬁdmask
;

183 
	m¸2
;

184 
_Â°©e
 *
	mÂ°©e
;

185 
	mª£rved1
[8];

190 
	s_xßve_hdr
 {

191 
__u64
 
	mx°©e_bv
;

192 
__u64
 
	mª£rved1
[2];

193 
__u64
 
	mª£rved2
[5];

196 
	s_ymmh_°©e
 {

198 
__u32
 
	mymmh_•a˚
[64];

207 
	s_x°©e
 {

208 
_Â°©e
 
	mÂ°©e
;

209 
_xßve_hdr
 
	mx°©e_hdr
;

210 
_ymmh_°©e
 
	mymmh
;

	@/usr/include/bits/byteswap.h

21 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


25 #i‚de‡
_BITS_BYTESWAP_H


26 
	#_BITS_BYTESWAP_H
 1

	)

29 
	#__bsw≠_c⁄°™t_16
(
x
) \

30 ((Ë((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8)))

	)

32 #ifde‡
__GNUC__


33 #i‡
__GNUC__
 >= 2

34 
	#__bsw≠_16
(
x
) \

35 (
__exãnsi⁄__
 \

36 ({ 
__v
, 
__x
 = (Ë(
x
); \

37 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

38 
__v
 = 
	`__bsw≠_c⁄°™t_16
 (
__x
); \

40 
	`__asm__
 ("rorw $8, %w0" \

41 : "Ù" (
__v
) \

42 : "0" (
__x
) \

44 
__v
; }))

	)

47 
	#__bsw≠_16
(
x
) \

48 (
__exãnsi⁄__
 \

49 ({ 
__x
 = (Ë(
x
); \

50 
	`__bsw≠_c⁄°™t_16
 (
__x
); }))

	)

53 
__ölöe
 

54 
	$__bsw≠_16
 (
__bsx
)

56  
	`__bsw≠_c⁄°™t_16
 (
__bsx
);

57 
	}
}

61 
	#__bsw≠_c⁄°™t_32
(
x
) \

62 ((((
x
) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | \

63 (((
x
Ë& 0x0000ff00Ë<< 8Ë| (((xË& 0x000000ffË<< 24))

	)

65 #ifde‡
__GNUC__


66 #i‡
__GNUC__
 >= 2

69 #i‡!
deföed
 
__i486__
 && !deföed 
__≥¡ium__
 && !deföed 
__≥¡ium¥o__
 \

70 && !
deföed
 
	g__≥¡ium4__
 && !deföed 
	g__k8__
 && !deföed 
	g__©hl⁄__
 \

71 && !
deföed
 
	g__k6__
 && !deföed 
	g__noc⁄a__
 && !deföed 
	g__c‹e2__
 \

72 && !
deföed
 
	g__geode__
 && !deföed 
	g__amdÁm10__


73 
	#__bsw≠_32
(
x
) \

74 (
__exãnsi⁄__
 \

75 ({ 
__v
, 
__x
 = (
x
); \

76 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

77 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

79 
	`__asm__
 ("rorw $8, %w0;" \

82 : "Ù" (
__v
) \

83 : "0" (
__x
) \

85 
__v
; }))

	)

87 
	#__bsw≠_32
(
x
) \

88 (
__exãnsi⁄__
 \

89 ({ 
__v
, 
__x
 = (
x
); \

90 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

91 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

93 
	`__asm__
 ("bsw≠ %0" : "Ù" (
__v
Ë: "0" (
__x
)); \

94 
__v
; }))

	)

97 
	#__bsw≠_32
(
x
) \

98 (
__exãnsi⁄__
 \

99 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_32
 (__x); }))

	)

102 
__ölöe
 

103 
	$__bsw≠_32
 (
__bsx
)

105  
	`__bsw≠_c⁄°™t_32
 (
__bsx
);

106 
	}
}

110 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

112 
	#__bsw≠_c⁄°™t_64
(
x
) \

113 (
	`__exãnsi⁄__
 ((((
x
) & 0xff00000000000000ull) >> 56) \

114 | (((
x
) & 0x00ff000000000000ull) >> 40) \

115 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

116 | (((
x
) & 0x000000ff00000000ull) >> 8) \

117 | (((
x
) & 0x00000000ff000000ull) << 8) \

118 | (((
x
) & 0x0000000000ff0000ull) << 24) \

119 | (((
x
) & 0x000000000000ff00ull) << 40) \

120 | (((
x
Ë& 0x00000000000000ffuŒË<< 56)))

	)

122 
	#__bsw≠_64
(
x
) \

123 (
__exãnsi⁄__
 \

124 ({ uni⁄ { 
__exãnsi⁄__
 
__Œ
; \

125 
__l
[2]; } 
__w
, 
__r
; \

126 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

127 
__r
.
__Œ
 = 
	`__bsw≠_c⁄°™t_64
 (
x
); \

130 
__w
.
__Œ
 = (
x
); \

131 
__r
.
__l
[0] = 
	`__bsw≠_32
 (
__w
.__l[1]); \

132 
__r
.
__l
[1] = 
	`__bsw≠_32
 (
__w
.__l[0]); \

134 
__r
.
__Œ
; }))

	)

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/libio-ldbl.h

20 #i‚de‡
_IO_STDIO_H


24 
	$__LDBL_REDIR_DECL
 (
_IO_vfsˇnf
)

25 
	`__LDBL_REDIR_DECL
 (
_IO_vÂrötf
)

	@/usr/include/bits/local_lim.h

25 #i‚de‡
NR_OPEN


26 
	#__undef_NR_OPEN


	)

28 #i‚de‡
LINK_MAX


29 
	#__undef_LINK_MAX


	)

31 #i‚de‡
OPEN_MAX


32 
	#__undef_OPEN_MAX


	)

34 #i‚de‡
ARG_MAX


35 
	#__undef_ARG_MAX


	)

39 
	~<löux/limôs.h
>

42 #ifde‡
__undef_NR_OPEN


43 #unde‡
NR_OPEN


44 #unde‡
__undef_NR_OPEN


47 #ifde‡
__undef_LINK_MAX


48 #unde‡
LINK_MAX


49 #unde‡
__undef_LINK_MAX


52 #ifde‡
__undef_OPEN_MAX


53 #unde‡
OPEN_MAX


54 #unde‡
__undef_OPEN_MAX


57 #ifde‡
__undef_ARG_MAX


58 #unde‡
ARG_MAX


59 #unde‡
__undef_ARG_MAX


63 
	#_POSIX_THREAD_KEYS_MAX
 128

	)

65 
	#PTHREAD_KEYS_MAX
 1024

	)

68 
	#_POSIX_THREAD_DESTRUCTOR_ITERATIONS
 4

	)

70 
	#PTHREAD_DESTRUCTOR_ITERATIONS
 
_POSIX_THREAD_DESTRUCTOR_ITERATIONS


	)

73 
	#_POSIX_THREAD_THREADS_MAX
 64

	)

75 #unde‡
PTHREAD_THREADS_MAX


79 
	#AIO_PRIO_DELTA_MAX
 20

	)

82 
	#PTHREAD_STACK_MIN
 16384

	)

85 
	#DELAYTIMER_MAX
 2147483647

	)

88 
	#TTY_NAME_MAX
 32

	)

91 
	#LOGIN_NAME_MAX
 256

	)

94 
	#HOST_NAME_MAX
 64

	)

97 
	#MQ_PRIO_MAX
 32768

	)

100 
	#SEM_VALUE_MAX
 (2147483647)

	)

	@/usr/include/bits/posix2_lim.h

23 #i‚def 
_BITS_POSIX2_LIM_H


24 
	#_BITS_POSIX2_LIM_H
 1

	)

28 
	#_POSIX2_BC_BASE_MAX
 99

	)

31 
	#_POSIX2_BC_DIM_MAX
 2048

	)

34 
	#_POSIX2_BC_SCALE_MAX
 99

	)

37 
	#_POSIX2_BC_STRING_MAX
 1000

	)

41 
	#_POSIX2_COLL_WEIGHTS_MAX
 2

	)

45 
	#_POSIX2_EXPR_NEST_MAX
 32

	)

48 
	#_POSIX2_LINE_MAX
 2048

	)

52 
	#_POSIX2_RE_DUP_MAX
 255

	)

56 
	#_POSIX2_CHARCLASS_NAME_MAX
 14

	)

63 #i‚def 
BC_BASE_MAX


64 
	#BC_BASE_MAX
 
_POSIX2_BC_BASE_MAX


	)

66 #i‚def 
BC_DIM_MAX


67 
	#BC_DIM_MAX
 
_POSIX2_BC_DIM_MAX


	)

69 #i‚def 
BC_SCALE_MAX


70 
	#BC_SCALE_MAX
 
_POSIX2_BC_SCALE_MAX


	)

72 #i‚def 
BC_STRING_MAX


73 
	#BC_STRING_MAX
 
_POSIX2_BC_STRING_MAX


	)

75 #i‚def 
COLL_WEIGHTS_MAX


76 
	#COLL_WEIGHTS_MAX
 255

	)

78 #i‚def 
EXPR_NEST_MAX


79 
	#EXPR_NEST_MAX
 
_POSIX2_EXPR_NEST_MAX


	)

81 #i‚def 
LINE_MAX


82 
	#LINE_MAX
 
_POSIX2_LINE_MAX


	)

84 #i‚def 
CHARCLASS_NAME_MAX


85 
	#CHARCLASS_NAME_MAX
 2048

	)

89 
	#RE_DUP_MAX
 (0x7fff)

	)

	@/usr/include/bits/resource.h

21 #i‚de‡
_SYS_RESOURCE_H


25 
	~<bôs/ty≥s.h
>

33 
	e__æimô_ªsour˚


36 
	mRLIMIT_CPU
 = 0,

37 
	#RLIMIT_CPU
 
RLIMIT_CPU


	)

40 
	mRLIMIT_FSIZE
 = 1,

41 
	#RLIMIT_FSIZE
 
RLIMIT_FSIZE


	)

44 
	mRLIMIT_DATA
 = 2,

45 
	#RLIMIT_DATA
 
RLIMIT_DATA


	)

48 
	mRLIMIT_STACK
 = 3,

49 
	#RLIMIT_STACK
 
RLIMIT_STACK


	)

52 
	mRLIMIT_CORE
 = 4,

53 
	#RLIMIT_CORE
 
RLIMIT_CORE


	)

59 
	m__RLIMIT_RSS
 = 5,

60 
	#RLIMIT_RSS
 
__RLIMIT_RSS


	)

63 
	mRLIMIT_NOFILE
 = 7,

64 
	m__RLIMIT_OFILE
 = 
RLIMIT_NOFILE
,

65 
	#RLIMIT_NOFILE
 
RLIMIT_NOFILE


	)

66 
	#RLIMIT_OFILE
 
__RLIMIT_OFILE


	)

69 
	mRLIMIT_AS
 = 9,

70 
	#RLIMIT_AS
 
RLIMIT_AS


	)

73 
	m__RLIMIT_NPROC
 = 6,

74 
	#RLIMIT_NPROC
 
__RLIMIT_NPROC


	)

77 
	m__RLIMIT_MEMLOCK
 = 8,

78 
	#RLIMIT_MEMLOCK
 
__RLIMIT_MEMLOCK


	)

81 
	m__RLIMIT_LOCKS
 = 10,

82 
	#RLIMIT_LOCKS
 
__RLIMIT_LOCKS


	)

85 
	m__RLIMIT_SIGPENDING
 = 11,

86 
	#RLIMIT_SIGPENDING
 
__RLIMIT_SIGPENDING


	)

89 
	m__RLIMIT_MSGQUEUE
 = 12,

90 
	#RLIMIT_MSGQUEUE
 
__RLIMIT_MSGQUEUE


	)

95 
	m__RLIMIT_NICE
 = 13,

96 
	#RLIMIT_NICE
 
__RLIMIT_NICE


	)

100 
	m__RLIMIT_RTPRIO
 = 14,

101 
	#RLIMIT_RTPRIO
 
__RLIMIT_RTPRIO


	)

106 
	m__RLIMIT_RTTIME
 = 15,

107 
	#RLIMIT_RTTIME
 
__RLIMIT_RTTIME


	)

109 
	m__RLIMIT_NLIMITS
 = 16,

110 
	m__RLIM_NLIMITS
 = 
__RLIMIT_NLIMITS


111 
	#RLIMIT_NLIMITS
 
__RLIMIT_NLIMITS


	)

112 
	#RLIM_NLIMITS
 
__RLIM_NLIMITS


	)

116 #i‚de‡
__USE_FILE_OFFSET64


117 
	#RLIM_INFINITY
 (()(~0UL))

	)

119 
	#RLIM_INFINITY
 0xffffffffffffffffuLL

	)

122 #ifde‡
__USE_LARGEFILE64


123 
	#RLIM64_INFINITY
 0xffffffffffffffffuLL

	)

127 
	#RLIM_SAVED_MAX
 
RLIM_INFINITY


	)

128 
	#RLIM_SAVED_CUR
 
RLIM_INFINITY


	)

132 #i‚de‡
__USE_FILE_OFFSET64


133 
__æim_t
 
	tæim_t
;

135 
__æim64_t
 
	tæim_t
;

137 #ifde‡
__USE_LARGEFILE64


138 
__æim64_t
 
	tæim64_t
;

141 
	sæimô


144 
æim_t
 
	mæim_cur
;

146 
æim_t
 
	mæim_max
;

149 #ifde‡
__USE_LARGEFILE64


150 
	sæimô64


153 
æim64_t
 
	mæim_cur
;

155 
æim64_t
 
	mæim_max
;

160 
	e__rußge_who


163 
	mRUSAGE_SELF
 = 0,

164 
	#RUSAGE_SELF
 
RUSAGE_SELF


	)

167 
	mRUSAGE_CHILDREN
 = -1

168 
	#RUSAGE_CHILDREN
 
RUSAGE_CHILDREN


	)

170 #ifde‡
__USE_GNU


173 
	mRUSAGE_THREAD
 = 1

174 
	#RUSAGE_THREAD
 
RUSAGE_THREAD


	)

176 
	#RUSAGE_LWP
 
RUSAGE_THREAD


	)

180 
	#__√ed_timevÆ


	)

181 
	~<bôs/time.h
>

184 
	srußge


187 
timevÆ
 
	mru_utime
;

189 
timevÆ
 
	mru_°ime
;

191 
	mru_maxrss
;

194 
	mru_ixrss
;

196 
	mru_idrss
;

198 
	mru_i§ss
;

201 
	mru_möÊt
;

203 
	mru_majÊt
;

205 
	mru_nsw≠
;

208 
	mru_öblock
;

210 
	mru_oublock
;

212 
	mru_msg¢d
;

214 
	mru_msgrcv
;

216 
	mru_nsig«ls
;

220 
	mru_nvcsw
;

223 
	mru_nivcsw
;

227 
	#PRIO_MIN
 -20

	)

228 
	#PRIO_MAX
 20

	)

232 
	e__¥i‹ôy_which


234 
	mPRIO_PROCESS
 = 0,

235 
	#PRIO_PROCESS
 
PRIO_PROCESS


	)

236 
	mPRIO_PGRP
 = 1,

237 
	#PRIO_PGRP
 
PRIO_PGRP


	)

238 
	mPRIO_USER
 = 2

239 
	#PRIO_USER
 
PRIO_USER


	)

243 
	g__BEGIN_DECLS


245 #ifde‡
__USE_GNU


247 #i‚de‡
__USE_FILE_OFFSET64


248 
	$¥limô
 (
__pid_t
 
__pid
, 
__æimô_ªsour˚
 
__ªsour˚
,

249 
__c⁄°
 
æimô
 *
__√w_limô
,

250 
æimô
 *
__ﬁd_limô
Ë
__THROW
;

252 #ifde‡
__REDIRECT_NTH


253 
	`__REDIRECT_NTH
 (
¥limô
, (
__pid_t
 
__pid
,

254 
__æimô_ªsour˚
 
__ªsour˚
,

255 
__c⁄°
 
æimô
 *
__√w_limô
,

256 
æimô
 *
__ﬁd_limô
), 
¥limô64
);

258 
	#¥limô
 
¥limô64


	)

261 #ifde‡
__USE_LARGEFILE64


262 
	$¥limô64
 (
__pid_t
 
__pid
, 
__æimô_ªsour˚
 
__ªsour˚
,

263 
__c⁄°
 
æimô64
 *
__√w_limô
,

264 
æimô64
 *
__ﬁd_limô
Ë
__THROW
;

268 
__END_DECLS


	@/usr/include/bits/stdio-lock.h

20 #i‚de‡
_BITS_STDIO_LOCK_H


21 
	#_BITS_STDIO_LOCK_H
 1

	)

23 
	~<bôs/libc-lock.h
>

24 
	~<lowÀvñlock.h
>

28 
	#_IO_lock_öex≥nsive
 1

	)

30 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t_IO_lock_t
;

32 
	#_IO_lock_öôülizî
 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

34 
	#_IO_lock_öô
(
_«me
) \

35 ((
_«me
Ë(
_IO_lock_t
Ë
_IO_lock_öôülizî
 , 0)

	)

37 
	#_IO_lock_föi
(
_«me
) \

38 ((Ë0)

	)

40 
	#_IO_lock_lock
(
_«me
) \

42 *
__£lf
 = 
THREAD_SELF
; \

43 i‡((
_«me
).
ow√r
 !
__£lf
) \

45 
	`Œl_lock
 ((
_«me
).
lock
, 
LLL_PRIVATE
); \

46 (
_«me
).
ow√r
 = 
__£lf
; \

48 ++(
_«me
).
˙t
; \

49 } 0)

	)

51 
	#_IO_lock_åylock
(
_«me
) \

53 
__ªsu…
 = 0; \

54 *
__£lf
 = 
THREAD_SELF
; \

55 i‡((
_«me
).
ow√r
 !
__£lf
) \

57 i‡(
	`Œl_åylock
 ((
_«me
).
lock
) == 0) \

59 (
_«me
).
ow√r
 = 
__£lf
; \

60 (
_«me
).
˙t
 = 1; \

63 
__ªsu…
 = 
EBUSY
; \

66 ++(
_«me
).
˙t
; \

67 
__ªsu…
; \

68 })

	)

70 
	#_IO_lock_u∆ock
(
_«me
) \

72 i‡(--(
_«me
).
˙t
 == 0) \

74 (
_«me
).
ow√r
 = 
NULL
; \

75 
	`Œl_u∆ock
 ((
_«me
).
lock
, 
LLL_PRIVATE
); \

77 } 0)

	)

81 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
) \

82 
	`__libc_˛ónup_ªgi⁄_°¨t
 (((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0, 
_f˘
, _Â)

	)

83 
	#_IO_˛ónup_ªgi⁄_°¨t_nﬂrg
(
_f˘
) \

84 
	`__libc_˛ónup_ªgi⁄_°¨t
 (1, 
_f˘
, 
NULL
)

	)

85 
	#_IO_˛ónup_ªgi⁄_íd
(
_doô
) \

86 
	`__libc_˛ónup_ªgi⁄_íd
 (
_doô
)

	)

88 #i‡
deföed
 
_LIBC
 && !deföed 
NOT_IN_libc


90 #ifde‡
__EXCEPTIONS


91 
	#_IO_acquúe_lock
(
_Â
) \

93 
_IO_FILE
 *
_IO_acquúe_lock_fûe
 \

94 
	`__©åibuã__
((
	`˛ónup
 (
_IO_acquúe_lock_f˘
))) \

95 (
_Â
); \

96 
	`_IO_Êockfûe
 (
_IO_acquúe_lock_fûe
);

	)

97 
	#_IO_acquúe_lock_˛ór_Êags2
(
_Â
) \

99 
_IO_FILE
 *
_IO_acquúe_lock_fûe
 \

100 
	`__©åibuã__
((
	`˛ónup
 (
_IO_acquúe_lock_˛ór_Êags2_f˘
))) \

101 (
_Â
); \

102 
	`_IO_Êockfûe
 (
_IO_acquúe_lock_fûe
);

	)

104 
	#_IO_acquúe_lock
(
_Â
Ë
_IO_acquúe_lock_√eds_ex˚±i⁄s_íabÀd


	)

105 
	#_IO_acquúe_lock_˛ór_Êags2
(
_Â
Ë
	`_IO_acquúe_lock
 (_Â)

	)

107 
	#_IO_ªÀa£_lock
(
_Â
Ë; } 0)

	)

	@/usr/include/bits/timex.h

19 #i‚def 
_BITS_TIMEX_H


20 
	#_BITS_TIMEX_H
 1

	)

24 
	stimex


26 
	mmodes
;

27 
	moff£t
;

28 
	m‰eq
;

29 
	mmaxîr‹
;

30 
	me°îr‹
;

31 
	m°©us
;

32 
	mc⁄°™t
;

33 
	m¥ecisi⁄
;

34 
	mtﬁî™˚
;

35 
timevÆ
 
	mtime
;

36 
	mtick
;

38 
	mµs‰eq
;

39 
	mjôãr
;

40 
	mshi·
;

41 
	m°abû
;

42 
	mjô˙t
;

43 
	mˇl˙t
;

44 
	mîr˙t
;

45 
	m°b˙t
;

47 
	mèi
;

56 
	#ADJ_OFFSET
 0x0001

	)

57 
	#ADJ_FREQUENCY
 0x0002

	)

58 
	#ADJ_MAXERROR
 0x0004

	)

59 
	#ADJ_ESTERROR
 0x0008

	)

60 
	#ADJ_STATUS
 0x0010

	)

61 
	#ADJ_TIMECONST
 0x0020

	)

62 
	#ADJ_TAI
 0x0080

	)

63 
	#ADJ_MICRO
 0x1000

	)

64 
	#ADJ_NANO
 0x2000

	)

65 
	#ADJ_TICK
 0x4000

	)

66 
	#ADJ_OFFSET_SINGLESHOT
 0x8001

	)

67 
	#ADJ_OFFSET_SS_READ
 0xa001

	)

70 
	#MOD_OFFSET
 
ADJ_OFFSET


	)

71 
	#MOD_FREQUENCY
 
ADJ_FREQUENCY


	)

72 
	#MOD_MAXERROR
 
ADJ_MAXERROR


	)

73 
	#MOD_ESTERROR
 
ADJ_ESTERROR


	)

74 
	#MOD_STATUS
 
ADJ_STATUS


	)

75 
	#MOD_TIMECONST
 
ADJ_TIMECONST


	)

76 
	#MOD_CLKB
 
ADJ_TICK


	)

77 
	#MOD_CLKA
 
ADJ_OFFSET_SINGLESHOT


	)

78 
	#MOD_TAI
 
ADJ_TAI


	)

79 
	#MOD_MICRO
 
ADJ_MICRO


	)

80 
	#MOD_NANO
 
ADJ_NANO


	)

84 
	#STA_PLL
 0x0001

	)

85 
	#STA_PPSFREQ
 0x0002

	)

86 
	#STA_PPSTIME
 0x0004

	)

87 
	#STA_FLL
 0x0008

	)

89 
	#STA_INS
 0x0010

	)

90 
	#STA_DEL
 0x0020

	)

91 
	#STA_UNSYNC
 0x0040

	)

92 
	#STA_FREQHOLD
 0x0080

	)

94 
	#STA_PPSSIGNAL
 0x0100

	)

95 
	#STA_PPSJITTER
 0x0200

	)

96 
	#STA_PPSWANDER
 0x0400

	)

97 
	#STA_PPSERROR
 0x0800

	)

99 
	#STA_CLOCKERR
 0x1000

	)

100 
	#STA_NANO
 0x2000

	)

101 
	#STA_MODE
 0x4000

	)

102 
	#STA_CLK
 0x8000

	)

105 
	#STA_RONLY
 (
STA_PPSSIGNAL
 | 
STA_PPSJITTER
 | 
STA_PPSWANDER
 | \

106 
STA_PPSERROR
 | 
STA_CLOCKERR
 | 
STA_NANO
 | 
STA_MODE
 | 
STA_CLK
)

	)

	@/usr/include/bits/typesizes.h

20 #i‚de‡
_BITS_TYPES_H


24 #i‚def 
_BITS_TYPESIZES_H


25 
	#_BITS_TYPESIZES_H
 1

	)

30 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

31 
	#__UID_T_TYPE
 
__U32_TYPE


	)

32 
	#__GID_T_TYPE
 
__U32_TYPE


	)

33 
	#__INO_T_TYPE
 
__ULONGWORD_TYPE


	)

34 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

35 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

36 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

37 
	#__OFF_T_TYPE
 
__SLONGWORD_TYPE


	)

38 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

39 
	#__PID_T_TYPE
 
__S32_TYPE


	)

40 
	#__RLIM_T_TYPE
 
__ULONGWORD_TYPE


	)

41 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

42 
	#__BLKCNT_T_TYPE
 
__SLONGWORD_TYPE


	)

43 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

44 
	#__FSBLKCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

45 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

46 
	#__FSFILCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

47 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

48 
	#__ID_T_TYPE
 
__U32_TYPE


	)

49 
	#__CLOCK_T_TYPE
 
__SLONGWORD_TYPE


	)

50 
	#__TIME_T_TYPE
 
__SLONGWORD_TYPE


	)

51 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

52 
	#__SUSECONDS_T_TYPE
 
__SLONGWORD_TYPE


	)

53 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

54 
	#__SWBLK_T_TYPE
 
__SLONGWORD_TYPE


	)

55 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

56 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

57 
	#__TIMER_T_TYPE
 *

	)

58 
	#__BLKSIZE_T_TYPE
 
__SLONGWORD_TYPE


	)

59 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

60 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

63 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/bits/uio.h

19 #i‡!
deföed
 
_SYS_UIO_H
 && !deföed 
_FCNTL_H


23 #i‚de‡
_BITS_UIO_H


24 
	#_BITS_UIO_H
 1

	)

26 
	~<sys/ty≥s.h
>

40 
	#UIO_MAXIOV
 1024

	)

44 
	siovec


46 *
	miov_ba£
;

47 
size_t
 
	miov_Àn
;

52 #i‡
deföed
 
_SYS_UIO_H
 && !deföed 
_BITS_UIO_H_FOR_SYS_UIO_H


53 
	#_BITS_UIO_H_FOR_SYS_UIO_H
 1

	)

55 
__BEGIN_DECLS


58 
ssize_t
 
	$¥o˚ss_vm_ªadv
 (
pid_t
 
__pid
, 
__c⁄°
 
iovec
 *
__lvec
,

59 
__liov˙t
,

60 
__c⁄°
 
iovec
 *
__rvec
,

61 
__riov˙t
,

62 
__Êags
)

63 
__THROW
;

66 
ssize_t
 
	$¥o˚ss_vm_wrôev
 (
pid_t
 
__pid
, 
__c⁄°
 
iovec
 *
__lvec
,

67 
__liov˙t
,

68 
__c⁄°
 
iovec
 *
__rvec
,

69 
__riov˙t
,

70 
__Êags
)

71 
__THROW
;

73 
__END_DECLS


	@/usr/include/bits/wordsize.h

19 
	#__WORDSIZE
 32

	)

	@/usr/include/bits/xopen_lim.h

30 #i‚de‡
_XOPEN_LIM_H


31 
	#_XOPEN_LIM_H
 1

	)

33 
	#__√ed_IOV_MAX


	)

34 
	~<bôs/°dio_lim.h
>

66 
	#_XOPEN_IOV_MAX
 
_POSIX_UIO_MAXIOV


	)

71 
	#NL_ARGMAX
 
_POSIX_ARG_MAX


	)

74 
	#NL_LANGMAX
 
_POSIX2_LINE_MAX


	)

77 
	#NL_MSGMAX
 
INT_MAX


	)

81 
	#NL_NMAX
 
INT_MAX


	)

84 
	#NL_SETMAX
 
INT_MAX


	)

87 
	#NL_TEXTMAX
 
INT_MAX


	)

90 
	#NZERO
 20

	)

94 #ifde‡
INT_MAX


95 #i‡
INT_MAX
 == 32767

96 
	#WORD_BIT
 16

	)

98 #i‡
INT_MAX
 == 2147483647

99 
	#WORD_BIT
 32

	)

102 
	#WORD_BIT
 64

	)

105 #ñi‡
deföed
 
__INT_MAX__


106 #i‡
__INT_MAX__
 == 32767

107 
	#WORD_BIT
 16

	)

109 #i‡
__INT_MAX__
 == 2147483647

110 
	#WORD_BIT
 32

	)

113 
	#WORD_BIT
 64

	)

117 
	#WORD_BIT
 32

	)

121 #ifde‡
LONG_MAX


122 #i‡
LONG_MAX
 == 2147483647

123 
	#LONG_BIT
 32

	)

126 
	#LONG_BIT
 64

	)

128 #ñi‡
deföed
 
__LONG_MAX__


129 #i‡
__LONG_MAX__
 == 2147483647

130 
	#LONG_BIT
 32

	)

133 
	#LONG_BIT
 64

	)

136 
	~<bôs/w‹dsize.h
>

137 #i‡
__WORDSIZE
 == 64

138 
	#LONG_BIT
 64

	)

140 
	#LONG_BIT
 32

	)

	@/usr/include/gnu/stubs-32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___kî√l_co¶


	)

11 
	#__°ub___kî√l_söl


	)

12 
	#__°ub___kî√l_è∆


	)

13 
	#__°ub_chÊags


	)

14 
	#__°ub_Áâach


	)

15 
	#__°ub_fchÊags


	)

16 
	#__°ub_fdëach


	)

17 
	#__°ub_gây


	)

18 
	#__°ub_lchmod


	)

19 
	#__°ub_¥o˚ss_vm_ªadv


	)

20 
	#__°ub_¥o˚ss_vm_wrôev


	)

21 
	#__°ub_ªvoke


	)

22 
	#__°ub_£éogö


	)

23 
	#__°ub_sigªtu∫


	)

24 
	#__°ub_s°k


	)

25 
	#__°ub_°ty


	)

	@/usr/include/linux/errno.h

1 #i‚de‡
_LINUX_ERRNO_H


2 
	#_LINUX_ERRNO_H


	)

4 
	~<asm/î∫o.h
>

	@/usr/include/linux/types.h

1 #i‚de‡
_LINUX_TYPES_H


2 
	#_LINUX_TYPES_H


	)

4 
	~<asm/ty≥s.h
>

6 #i‚de‡
__ASSEMBLY__


8 
	~<löux/posix_ty≥s.h
>

16 #ifde‡
__CHECKER__


17 
	#__bôwi£__
 
	`__©åibuã__
((
bôwi£
))

	)

19 
	#__bôwi£__


	)

21 #ifde‡
__CHECK_ENDIAN__


22 
	#__bôwi£
 
__bôwi£__


	)

24 
	#__bôwi£


	)

27 
__u16
 
	t__bôwi£
 
	t__À16
;

28 
__u16
 
	t__bôwi£
 
	t__be16
;

29 
__u32
 
	t__bôwi£
 
	t__À32
;

30 
__u32
 
	t__bôwi£
 
	t__be32
;

31 
__u64
 
	t__bôwi£
 
	t__À64
;

32 
__u64
 
	t__bôwi£
 
	t__be64
;

34 
__u16
 
	t__bôwi£
 
	t__sum16
;

35 
__u32
 
	t__bôwi£
 
	t__wsum
;

46 
	#__Æig√d_u64
 
__u64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

47 
	#__Æig√d_be64
 
__be64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

48 
	#__Æig√d_À64
 
__À64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

	@/usr/include/asm-generic/ioctls.h

1 #i‚de‡
__ASM_GENERIC_IOCTLS_H


2 
	#__ASM_GENERIC_IOCTLS_H


	)

4 
	~<löux/io˘l.h
>

19 
	#TCGETS
 0x5401

	)

20 
	#TCSETS
 0x5402

	)

21 
	#TCSETSW
 0x5403

	)

22 
	#TCSETSF
 0x5404

	)

23 
	#TCGETA
 0x5405

	)

24 
	#TCSETA
 0x5406

	)

25 
	#TCSETAW
 0x5407

	)

26 
	#TCSETAF
 0x5408

	)

27 
	#TCSBRK
 0x5409

	)

28 
	#TCXONC
 0x540A

	)

29 
	#TCFLSH
 0x540B

	)

30 
	#TIOCEXCL
 0x540C

	)

31 
	#TIOCNXCL
 0x540D

	)

32 
	#TIOCSCTTY
 0x540E

	)

33 
	#TIOCGPGRP
 0x540F

	)

34 
	#TIOCSPGRP
 0x5410

	)

35 
	#TIOCOUTQ
 0x5411

	)

36 
	#TIOCSTI
 0x5412

	)

37 
	#TIOCGWINSZ
 0x5413

	)

38 
	#TIOCSWINSZ
 0x5414

	)

39 
	#TIOCMGET
 0x5415

	)

40 
	#TIOCMBIS
 0x5416

	)

41 
	#TIOCMBIC
 0x5417

	)

42 
	#TIOCMSET
 0x5418

	)

43 
	#TIOCGSOFTCAR
 0x5419

	)

44 
	#TIOCSSOFTCAR
 0x541A

	)

45 
	#FIONREAD
 0x541B

	)

46 
	#TIOCINQ
 
FIONREAD


	)

47 
	#TIOCLINUX
 0x541C

	)

48 
	#TIOCCONS
 0x541D

	)

49 
	#TIOCGSERIAL
 0x541E

	)

50 
	#TIOCSSERIAL
 0x541F

	)

51 
	#TIOCPKT
 0x5420

	)

52 
	#FIONBIO
 0x5421

	)

53 
	#TIOCNOTTY
 0x5422

	)

54 
	#TIOCSETD
 0x5423

	)

55 
	#TIOCGETD
 0x5424

	)

56 
	#TCSBRKP
 0x5425

	)

57 
	#TIOCSBRK
 0x5427

	)

58 
	#TIOCCBRK
 0x5428

	)

59 
	#TIOCGSID
 0x5429

	)

60 
	#TCGETS2
 
	`_IOR
('T', 0x2A, 
ãrmios2
)

	)

61 
	#TCSETS2
 
	`_IOW
('T', 0x2B, 
ãrmios2
)

	)

62 
	#TCSETSW2
 
	`_IOW
('T', 0x2C, 
ãrmios2
)

	)

63 
	#TCSETSF2
 
	`_IOW
('T', 0x2D, 
ãrmios2
)

	)

64 
	#TIOCGRS485
 0x542E

	)

65 #i‚de‡
TIOCSRS485


66 
	#TIOCSRS485
 0x542F

	)

68 
	#TIOCGPTN
 
	`_IOR
('T', 0x30, Ë

	)

69 
	#TIOCSPTLCK
 
	`_IOW
('T', 0x31, Ë

	)

70 
	#TIOCGDEV
 
	`_IOR
('T', 0x32, Ë

	)

71 
	#TCGETX
 0x5432

	)

72 
	#TCSETX
 0x5433

	)

73 
	#TCSETXF
 0x5434

	)

74 
	#TCSETXW
 0x5435

	)

75 
	#TIOCSIG
 
	`_IOW
('T', 0x36, Ë

	)

76 
	#TIOCVHANGUP
 0x5437

	)

78 
	#FIONCLEX
 0x5450

	)

79 
	#FIOCLEX
 0x5451

	)

80 
	#FIOASYNC
 0x5452

	)

81 
	#TIOCSERCONFIG
 0x5453

	)

82 
	#TIOCSERGWILD
 0x5454

	)

83 
	#TIOCSERSWILD
 0x5455

	)

84 
	#TIOCGLCKTRMIOS
 0x5456

	)

85 
	#TIOCSLCKTRMIOS
 0x5457

	)

86 
	#TIOCSERGSTRUCT
 0x5458

	)

87 
	#TIOCSERGETLSR
 0x5459

	)

88 
	#TIOCSERGETMULTI
 0x545A

	)

89 
	#TIOCSERSETMULTI
 0x545B

	)

91 
	#TIOCMIWAIT
 0x545C

	)

92 
	#TIOCGICOUNT
 0x545D

	)

98 #i‚de‡
FIOQSIZE


99 
	#FIOQSIZE
 0x5460

	)

103 
	#TIOCPKT_DATA
 0

	)

104 
	#TIOCPKT_FLUSHREAD
 1

	)

105 
	#TIOCPKT_FLUSHWRITE
 2

	)

106 
	#TIOCPKT_STOP
 4

	)

107 
	#TIOCPKT_START
 8

	)

108 
	#TIOCPKT_NOSTOP
 16

	)

109 
	#TIOCPKT_DOSTOP
 32

	)

110 
	#TIOCPKT_IOCTL
 64

	)

112 
	#TIOCSER_TEMT
 0x01

	)

	@/usr/include/asm-generic/param.h

1 #i‚de‡
__ASM_GENERIC_PARAM_H


2 
	#__ASM_GENERIC_PARAM_H


	)

5 #i‚de‡
HZ


6 
	#HZ
 100

	)

9 #i‚de‡
EXEC_PAGESIZE


10 
	#EXEC_PAGESIZE
 4096

	)

13 #i‚de‡
NOGROUP


14 
	#NOGROUP
 (-1)

	)

17 
	#MAXHOSTNAMELEN
 64

	)

	@/usr/include/asm/errno.h

1 
	~<asm-gíîic/î∫o.h
>

	@/usr/include/asm/types.h

1 #i‚de‡
_ASM_X86_TYPES_H


2 
	#_ASM_X86_TYPES_H


	)

4 
	~<asm-gíîic/ty≥s.h
>

	@/usr/include/bits/libc-lock.h

20 #i‚de‡
_BITS_LIBC_LOCK_H


21 
	#_BITS_LIBC_LOCK_H
 1

	)

23 
	~<±hªad.h
>

24 
	#__√ed_NULL


	)

25 
	~<°ddef.h
>

34 #ifde‡
_LIBC


35 
	~<lowÀvñlock.h
>

36 
	~<és.h
>

37 
	~<±hªad-fun˘i⁄s.h
>

41 #i‡
deföed
 
_LIBC
 || deföed 
_IO_MTSAFE_IO


42 #i‡(
deföed
 
NOT_IN_libc
 && !deföed 
IS_IN_lib±hªad
Ë|| !deföed 
_LIBC


43 
±hªad_muãx_t
 
	t__libc_lock_t
;

44 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__libc_lock_ªcursive_t
;

46 
	t__libc_lock_t
;

47 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t__libc_lock_ªcursive_t
;

49 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__πld_lock_ªcursive_t
;

50 #ifde‡
__USE_UNIX98


51 
±hªad_rwlock_t
 
	t__libc_rwlock_t
;

53 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

56 
__libc_lock_›aque__
 
	t__libc_lock_t
;

57 
__libc_lock_ªcursive_›aque__
 
	t__libc_lock_ªcursive_t
;

58 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

62 
±hªad_key_t
 
	t__libc_key_t
;

71 
	#__libc_lock_deföe
(
CLASS
,
NAME
) \

72 
CLASS
 
__libc_lock_t
 
NAME
;

	)

73 
	#__libc_rwlock_deföe
(
CLASS
,
NAME
) \

74 
CLASS
 
__libc_rwlock_t
 
NAME
;

	)

75 
	#__libc_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

76 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

77 
	#__πld_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

78 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
;

	)

89 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

90 #i‡
LLL_LOCK_INITIALIZER
 == 0

91 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

92 
CLASS
 
__libc_lock_t
 
NAME
;

	)

94 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

95 
CLASS
 
__libc_lock_t
 
NAME
 = 
LLL_LOCK_INITIALIZER
;

	)

98 #i‡
__LT_SPINLOCK_INIT
 == 0

99 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

100 
CLASS
 
__libc_lock_t
 
NAME
;

	)

102 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

103 
CLASS
 
__libc_lock_t
 
NAME
 = 
PTHREAD_MUTEX_INITIALIZER
;

	)

107 
	#__libc_rwlock_deföe_öôülized
(
CLASS
,
NAME
) \

108 
CLASS
 
__libc_rwlock_t
 
NAME
 = 
PTHREAD_RWLOCK_INITIALIZER
;

	)

112 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

113 #i‡
LLL_LOCK_INITIALIZER
 == 0

114 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

115 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

117 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

118 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

120 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

121 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

123 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

124 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

125 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

126 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

129 
	#__πld_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

130 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
 = 
_RTLD_LOCK_RECURSIVE_INITIALIZER
;

	)

131 
	#_RTLD_LOCK_RECURSIVE_INITIALIZER
 \

132 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

134 
	#__πld_lock_öôülize
(
NAME
) \

135 (Ë((
NAME
Ë(
__πld_lock_ªcursive_t
Ë
_RTLD_LOCK_RECURSIVE_INITIALIZER
)

	)

142 #ifde‡
__PIC__


143 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

144 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of
 (
FUNC
Ë*
_‚
 = (FUNC); \

145 
_‚
 !
NULL
 ? (*_‚Ë
ARGS
 : 
ELSE
; }))

	)

147 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

148 (
FUNC
 !
NULL
 ? FUNC 
ARGS
 : 
ELSE
)

	)

152 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


153 
	#PTFAVAIL
(
NAME
Ë
__libc_±hªad_fun˘i⁄s_öô


	)

154 
	#__libc_±f_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

155 (
__libc_±hªad_fun˘i⁄s_öô
 ? 
	`PTHFCT_CALL
 (
±r_
##
FUNC
, 
ARGS
Ë: 
ELSE
)

	)

156 
	#__libc_±f_ˇŒ_Æways
(
FUNC
, 
ARGS
) \

157 
	`PTHFCT_CALL
 (
±r_
##
FUNC
, 
ARGS
)

	)

159 
	#PTFAVAIL
(
NAME
Ë(NAME !
NULL
)

	)

160 
	#__libc_±f_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

161 
	`__libc_maybe_ˇŒ
 (
FUNC
, 
ARGS
, 
ELSE
)

	)

162 
	#__libc_±f_ˇŒ_Æways
(
FUNC
, 
ARGS
) \

163 
FUNC
 
ARGS


	)

169 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

170 
	#__libc_lock_öô
(
NAME
Ë((NAMEË
LLL_LOCK_INITIALIZER
, 0)

	)

172 
	#__libc_lock_öô
(
NAME
) \

173 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_öô
, (&(
NAME
), 
NULL
), 0)

	)

175 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


178 
	#__libc_rwlock_öô
(
NAME
) \

179 (
	`__buûtö_mem£t
 (&(
NAME
), '\0',  (NAME)), 0)

	)

181 
	#__libc_rwlock_öô
(
NAME
) \

182 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_öô
, (&(
NAME
), 
NULL
), 0)

	)

186 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

187 
	#__libc_lock_öô_ªcursive
(
NAME
) \

188 ((
NAME
Ë(
__libc_lock_ªcursive_t
Ë
_LIBC_LOCK_RECURSIVE_INITIALIZER
, 0)

	)

190 
	#__libc_lock_öô_ªcursive
(
NAME
) \

192 i‡(
__±hªad_muãx_öô
 !
NULL
) \

194 
±hªad_muãx©å_t
 
__©å
; \

195 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

196 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

197 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

198 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

200 } 0)

	)

203 
	#__πld_lock_öô_ªcursive
(
NAME
) \

205 i‡(
__±hªad_muãx_öô
 !
NULL
) \

207 
±hªad_muãx©å_t
 
__©å
; \

208 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

209 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

210 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

211 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

213 } 0)

	)

218 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

219 
	#__libc_lock_föi
(
NAME
Ë((Ë0)

	)

221 
	#__libc_lock_föi
(
NAME
) \

222 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_de°roy
, (&(
NAME
)), 0)

	)

224 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


225 
	#__libc_rwlock_föi
(
NAME
Ë((Ë0)

	)

227 
	#__libc_rwlock_föi
(
NAME
) \

228 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_de°roy
, (&(
NAME
)), 0)

	)

232 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

233 
	#__libc_lock_föi_ªcursive
(
NAME
Ë((Ë0)

	)

235 
	#__libc_lock_föi_ªcursive
(
NAME
) \

236 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_de°roy
, (&(
NAME
)), 0)

	)

240 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

241 
	#__libc_lock_lock
(
NAME
) \

242 ({ 
	`Œl_lock
 (
NAME
, 
LLL_PRIVATE
); 0; })

	)

244 
	#__libc_lock_lock
(
NAME
) \

245 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
)), 0)

	)

247 
	#__libc_rwlock_rdlock
(
NAME
) \

248 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_rdlock
, (&(
NAME
)), 0)

	)

249 
	#__libc_rwlock_wæock
(
NAME
) \

250 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_wæock
, (&(
NAME
)), 0)

	)

253 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

254 
	#__libc_lock_lock_ªcursive
(
NAME
) \

256 *
£lf
 = 
THREAD_SELF
; \

257 i‡((
NAME
).
ow√r
 !
£lf
) \

259 
	`Œl_lock
 ((
NAME
).
lock
, 
LLL_PRIVATE
); \

260 (
NAME
).
ow√r
 = 
£lf
; \

262 ++(
NAME
).
˙t
; \

263 } 0)

	)

265 
	#__libc_lock_lock_ªcursive
(
NAME
) \

266 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
).
muãx
), 0)

	)

270 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

271 
	#__libc_lock_åylock
(
NAME
) \

272 
	`Œl_åylock
 (
NAME
)

	)

274 
	#__libc_lock_åylock
(
NAME
) \

275 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
)), 0)

	)

277 
	#__libc_rwlock_åyrdlock
(
NAME
) \

278 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åyrdlock
, (&(
NAME
)), 0)

	)

279 
	#__libc_rwlock_åywæock
(
NAME
) \

280 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åywæock
, (&(
NAME
)), 0)

	)

283 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

284 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

286 
ªsu…
 = 0; \

287 *
£lf
 = 
THREAD_SELF
; \

288 i‡((
NAME
).
ow√r
 !
£lf
) \

290 i‡(
	`Œl_åylock
 ((
NAME
).
lock
) == 0) \

292 (
NAME
).
ow√r
 = 
£lf
; \

293 (
NAME
).
˙t
 = 1; \

296 
ªsu…
 = 
EBUSY
; \

299 ++(
NAME
).
˙t
; \

300 
ªsu…
; \

301 })

	)

303 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

304 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
)), 0)

	)

307 
	#__πld_lock_åylock_ªcursive
(
NAME
) \

308 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
).
muãx
), 0)

	)

311 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

312 
	#__libc_lock_u∆ock
(
NAME
) \

313 
	`Œl_u∆ock
 (
NAME
, 
LLL_PRIVATE
)

	)

315 
	#__libc_lock_u∆ock
(
NAME
) \

316 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
)), 0)

	)

318 
	#__libc_rwlock_u∆ock
(
NAME
) \

319 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_u∆ock
, (&(
NAME
)), 0)

	)

322 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

324 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

326 i‡(--(
NAME
).
˙t
 == 0) \

328 (
NAME
).
ow√r
 = 
NULL
; \

329 
	`Œl_u∆ock
 ((
NAME
).
lock
, 
LLL_PRIVATE
); \

331 } 0)

	)

333 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

334 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
)), 0)

	)

337 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


338 
	#__πld_lock_deÁu…_lock_ªcursive
(
lock
) \

339 ++((
±hªad_muãx_t
 *)(
lock
))->
__d©a
.
__cou¡
;

	)

341 
	#__πld_lock_deÁu…_u∆ock_ªcursive
(
lock
) \

342 --((
±hªad_muãx_t
 *)(
lock
))->
__d©a
.
__cou¡
;

	)

344 
	#__πld_lock_lock_ªcursive
(
NAME
) \

345 
	`GL
(
dl_πld_lock_ªcursive
Ë(&(
NAME
).
muãx
)

	)

347 
	#__πld_lock_u∆ock_ªcursive
(
NAME
) \

348 
	`GL
(
dl_πld_u∆ock_ªcursive
Ë(&(
NAME
).
muãx
)

	)

350 
	#__πld_lock_lock_ªcursive
(
NAME
) \

351 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
).
muãx
), 0)

	)

353 
	#__πld_lock_u∆ock_ªcursive
(
NAME
) \

354 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
).
muãx
), 0)

	)

358 #i‡
PTHREAD_ONCE_INIT
 == 0

361 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

362 
CLASS
 
±hªad_⁄˚_t
 
NAME


	)

364 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

365 
CLASS
 
±hªad_⁄˚_t
 
NAME
 = 
PTHREAD_ONCE_INIT


	)

369 
	#__libc_⁄˚
(
ONCE_CONTROL
, 
INIT_FUNCTION
) \

371 i‡(
	`PTFAVAIL
 (
__±hªad_⁄˚
)) \

372 
	`__libc_±f_ˇŒ_Æways
 (
__±hªad_⁄˚
, (&(
ONCE_CONTROL
), \

373 
INIT_FUNCTION
)); \

374 i‡((
ONCE_CONTROL
Ë=
PTHREAD_ONCE_INIT
) { \

375 
	`INIT_FUNCTION
 (); \

376 (
ONCE_CONTROL
) |= 2; \

378 } 0)

	)

385 
_±hªad_˛ónup_push
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

386 (*
routöe
Ë(*), *
¨g
);

387 
	`_±hªad_˛ónup_p›
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

388 
execuã
);

389 
	`_±hªad_˛ónup_push_de„r
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

390 (*
routöe
Ë(*), *
¨g
);

391 
	`_±hªad_˛ónup_p›_ª°‹e
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

392 
execuã
);

395 
	#__libc_˛ónup_ªgi⁄_°¨t
(
DOIT
, 
FCT
, 
ARG
) \

396 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

397 
_avaû
; \

398 i‡(
DOIT
) { \

399 
_avaû
 = 
	`PTFAVAIL
 (
_±hªad_˛ónup_push_de„r
); \

400 i‡(
_avaû
) { \

401 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_push_de„r
, (&
_buf„r
, 
FCT
, \

402 
ARG
)); \

404 
_buf„r
.
__routöe
 = (
FCT
); \

405 
_buf„r
.
__¨g
 = (
ARG
); \

408 
_avaû
 = 0; \

409 }

	)

412 
	#__libc_˛ónup_ªgi⁄_íd
(
DOIT
) \

413 i‡(
_avaû
) { \

414 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_p›_ª°‹e
, (&
_buf„r
, 
DOIT
));\

415 } i‡(
DOIT
) \

416 
_buf„r
.
	`__routöe
 (_buf„r.
__¨g
); \

417 
	}

	)
}

420 
	#__libc_˛ónup_íd
(
DOIT
) \

421 i‡(
_avaû
) { \

422 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_p›_ª°‹e
, (&
_buf„r
, 
DOIT
));\

423 } i‡(
DOIT
) \

424 
_buf„r
.
	`__routöe
 (_buf„r.
__¨g
)

	)

428 
__exã∫_ölöe
 

429 
	$__libc_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
f
)

431 i‡(
f
->
__do_ô
)

432 
f
->
	`__ˇn˚l_routöe
 (f->
__ˇn˚l_¨g
);

433 
	}
}

435 
	#__libc_˛ónup_push
(
f˘
, 
¨g
) \

437 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

438 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__libc_˛ónup_routöe
))) \

439 { .
__ˇn˚l_routöe
 = (
f˘
), .
__ˇn˚l_¨g
 = (
¨g
), \

440 .
__do_ô
 = 1 };

	)

442 
	#__libc_˛ónup_p›
(
execuã
) \

443 
__˛‰ame
.
__do_ô
 = (
execuã
); \

444 } 0)

	)

448 
	#__libc_key_¸óã
(
KEY
, 
DESTRUCTOR
) \

449 
	`__libc_±f_ˇŒ
 (
__±hªad_key_¸óã
, (
KEY
, 
DESTRUCTOR
), 1)

	)

452 
	#__libc_gë•ecific
(
KEY
) \

453 
	`__libc_±f_ˇŒ
 (
__±hªad_gë•ecific
, (
KEY
), 
NULL
)

	)

456 
	#__libc_£t•ecific
(
KEY
, 
VALUE
) \

457 
	`__libc_±f_ˇŒ
 (
__±hªad_£t•ecific
, (
KEY
, 
VALUE
), 0)

	)

463 
	#__libc_©f‹k
(
PREPARE
, 
PARENT
, 
CHILD
) \

464 
	`__ªgi°î_©f‹k
 (
PREPARE
, 
PARENT
, 
CHILD
, 
NULL
)

	)

465 
__ªgi°î_©f‹k
 ((*
__¥ï¨e
) (),

466 (*
__∑ª¡
) (),

467 (*
__chûd
) (),

468 *
__dso_h™dÀ
);

473 
	`__±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

474 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx_©å
);

476 
	`__±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
);

478 
	`__±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
);

480 
	`__±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
);

482 
	`__±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
);

484 
	`__±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
);

486 
	`__±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
);

488 
	`__±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
,

489 
__köd
);

491 #ifde‡
__USE_UNIX98


492 
	`__±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__rwlock
,

493 
__c⁄°
 
±hªad_rwlock©å_t
 *
__©å
);

495 
	`__±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
);

497 
	`__±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

499 
	`__±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

501 
	`__±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
);

503 
	`__±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
);

505 
	`__±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
);

508 
	`__±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

509 (*
__de°r_fun˘i⁄
) (*));

511 
	`__±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

512 
__c⁄°
 *
__poöãr
);

514 *
	`__±hªad_gë•ecific
 (
±hªad_key_t
 
__key
);

516 
	`__±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

517 (*
__öô_routöe
) ());

519 
	`__±hªad_©f‹k
 ((*
__¥ï¨e
) (),

520 (*
__∑ª¡
) (),

521 (*
__chûd
) ());

527 #i‚de‡
__NO_WEAK_PTHREAD_ALIASES


528 #ifde‡
wók_exã∫


529 #i‡
_LIBC


530 
	~<bp-sym.h
>

532 
	#BP_SYM
(
sym
Ë
	)
sym

534 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_öô
))

535 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_de°roy
))

536 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_lock
))

537 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_åylock
))

538 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_u∆ock
))

539 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_öô
))

540 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_de°roy
))

541 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_£ây≥
))

542 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_öô
))

543 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_de°roy
))

544 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_rdlock
))

545 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_åyrdlock
))

546 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_wæock
))

547 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_åywæock
))

548 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_u∆ock
))

549 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_key_¸óã
))

550 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_£t•ecific
))

551 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_gë•ecific
))

552 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_⁄˚
))

553 
	$wók_exã∫
 (
__±hªad_öôülize
)

554 
	$wók_exã∫
 (
__±hªad_©f‹k
)

555 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_push_de„r
))

556 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_p›_ª°‹e
))

557 
	`wók_exã∫
 (
	$BP_SYM
 (
±hªad_£tˇn˚l°©e
))

559 #¥agm®
wók
 
__±hªad_muãx_öô


560 #¥agm®
wók
 
__±hªad_muãx_de°roy


561 #¥agm®
wók
 
__±hªad_muãx_lock


562 #¥agm®
wók
 
__±hªad_muãx_åylock


563 #¥agm®
wók
 
__±hªad_muãx_u∆ock


564 #¥agm®
wók
 
__±hªad_muãx©å_öô


565 #¥agm®
wók
 
__±hªad_muãx©å_de°roy


566 #¥agm®
wók
 
__±hªad_muãx©å_£ây≥


567 #¥agm®
wók
 
__±hªad_rwlock_de°roy


568 #¥agm®
wók
 
__±hªad_rwlock_rdlock


569 #¥agm®
wók
 
__±hªad_rwlock_åyrdlock


570 #¥agm®
wók
 
__±hªad_rwlock_wæock


571 #¥agm®
wók
 
__±hªad_rwlock_åywæock


572 #¥agm®
wók
 
__±hªad_rwlock_u∆ock


573 #¥agm®
wók
 
__±hªad_key_¸óã


574 #¥agm®
wók
 
__±hªad_£t•ecific


575 #¥agm®
wók
 
__±hªad_gë•ecific


576 #¥agm®
wók
 
__±hªad_⁄˚


577 #¥agm®
wók
 
__±hªad_öôülize


578 #¥agm®
wók
 
__±hªad_©f‹k


579 #¥agm®
wók
 
_±hªad_˛ónup_push_de„r


580 #¥agm®
wók
 
_±hªad_˛ónup_p›_ª°‹e


581 #¥agm®
wók
 
±hªad_£tˇn˚l°©e


	@/usr/include/gconv.h

23 #i‚de‡
_GCONV_H


24 
	#_GCONV_H
 1

	)

26 
	~<„©uªs.h
>

27 
	#__√ed_mb°©e_t


	)

28 
	#__√ed_wöt_t


	)

29 
	~<wch¨.h
>

30 
	#__√ed_size_t


	)

31 
	#__√ed_wch¨_t


	)

32 
	~<°ddef.h
>

35 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

40 
	m__GCONV_OK
 = 0,

41 
	m__GCONV_NOCONV
,

42 
	m__GCONV_NODB
,

43 
	m__GCONV_NOMEM
,

45 
	m__GCONV_EMPTY_INPUT
,

46 
	m__GCONV_FULL_OUTPUT
,

47 
	m__GCONV_ILLEGAL_INPUT
,

48 
	m__GCONV_INCOMPLETE_INPUT
,

50 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

51 
	m__GCONV_INTERNAL_ERROR


58 
	m__GCONV_IS_LAST
 = 0x0001,

59 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

60 
	m__GCONV_SWAP
 = 0x0004

65 
	g__gc⁄v_°ï
;

66 
	g__gc⁄v_°ï_d©a
;

67 
	g__gc⁄v_lﬂded_obje˘
;

68 
	g__gc⁄v_å™s_d©a
;

72 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 
	t__c⁄°
 **, __const *,

74 **, 
	tsize_t
 *, , );

77 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

80 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

81 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

85 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

86 
	t__gc⁄v_°ï_d©a
 *, *,

87 
	t__c⁄°
 *,

88 
	t__c⁄°
 **,

89 
	t__c⁄°
 *, **,

90 
	tsize_t
 *);

93 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
Ë(*, 
	t__c⁄°
 *,

94 
	t__c⁄°
 *,

98 (*
	t__gc⁄v_å™s_quîy_f˘
Ë(
	t__c⁄°
 *, __const ***,

99 
	tsize_t
 *);

102 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

103 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

105 
	s__gc⁄v_å™s_d©a


108 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

109 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

110 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

111 *
__d©a
;

112 
__gc⁄v_å™s_d©a
 *
__√xt
;

117 
	s__gc⁄v_°ï


119 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

120 
__c⁄°
 *
__mod«me
;

122 
__cou¡î
;

124 *
__‰om_«me
;

125 *
__to_«me
;

127 
__gc⁄v_f˘
 
__f˘
;

128 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

129 
__gc⁄v_öô_f˘
 
__öô_f˘
;

130 
__gc⁄v_íd_f˘
 
__íd_f˘
;

134 
__mö_√eded_‰om
;

135 
__max_√eded_‰om
;

136 
__mö_√eded_to
;

137 
__max_√eded_to
;

140 
__°©eful
;

142 *
__d©a
;

147 
	s__gc⁄v_°ï_d©a


149 *
__outbuf
;

150 *
__outbu„nd
;

154 
__Êags
;

158 
__övoˇti⁄_cou¡î
;

162 
__öã∫Æ_u£
;

164 
__mb°©e_t
 *
__°©ï
;

165 
__mb°©e_t
 
__°©e
;

169 
__gc⁄v_å™s_d©a
 *
__å™s
;

174 
	s__gc⁄v_öfo


176 
size_t
 
__n°ïs
;

177 
__gc⁄v_°ï
 *
__°ïs
;

178 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

179 } *
	t__gc⁄v_t
;

	@/usr/include/linux/posix_types.h

1 #i‚de‡
_LINUX_POSIX_TYPES_H


2 
	#_LINUX_POSIX_TYPES_H


	)

4 
	~<löux/°ddef.h
>

21 #unde‡
__NFDBITS


22 
	#__NFDBITS
 (8 * ())

	)

24 #unde‡
__FD_SETSIZE


25 
	#__FD_SETSIZE
 1024

	)

27 #unde‡
__FDSET_LONGS


28 
	#__FDSET_LONGS
 (
__FD_SETSIZE
/
__NFDBITS
)

	)

30 #unde‡
__FDELT


31 
	#__FDELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

33 #unde‡
__FDMASK


34 
	#__FDMASK
(
d
Ë(1UL << ((dË% 
__NFDBITS
))

	)

37 
	mfds_bôs
 [
__FDSET_LONGS
];

38 } 
	t__kî√l_fd_£t
;

41 (*
	t__kî√l_sigh™dÀr_t
)();

44 
	t__kî√l_key_t
;

45 
	t__kî√l_mqd_t
;

47 
	~<asm/posix_ty≥s.h
>

	@/usr/include/wchar.h

24 #i‚de‡
_WCHAR_H


26 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


27 
	#_WCHAR_H
 1

	)

28 
	~<„©uªs.h
>

31 #ifde‡
_WCHAR_H


33 
	#__√ed___FILE


	)

34 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


35 
	#__√ed_FILE


	)

37 
	~<°dio.h
>

39 
	#__√ed___va_li°


	)

40 
	~<°d¨g.h
>

42 
	~<bôs/wch¨.h
>

45 
	#__√ed_size_t


	)

46 
	#__√ed_wch¨_t


	)

47 
	#__√ed_NULL


	)

49 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


50 #unde‡
__√ed_wöt_t


51 
	#__√ed_wöt_t


	)

52 
	~<°ddef.h
>

56 #i‚de‡
_WINT_T


61 
	#_WINT_T


	)

62 
	twöt_t
;

66 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

67 && 
deföed
 
__WINT_TYPE__


68 
__BEGIN_NAMESPACE_STD


69 
__WINT_TYPE__
 
	twöt_t
;

70 
	g__END_NAMESPACE_STD


75 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

76 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

80 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
__mb°©e_t_deföed


81 
	#__mb°©e_t_deföed
 1

	)

85 
	m__cou¡
;

88 #ifde‡
__WINT_TYPE__


89 
__WINT_TYPE__
 
	m__wch
;

91 
wöt_t
 
	m__wch
;

93 
	m__wchb
[4];

94 } 
	m__vÆue
;

95 } 
	t__mb°©e_t
;

97 #unde‡
__√ed_mb°©e_t


102 #ifde‡
_WCHAR_H


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 #ifde‡
__USE_GNU


109 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

112 #i‚de‡
WCHAR_MIN


114 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

115 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

118 #i‚de‡
WEOF


119 
	#WEOF
 (0xffffffffu)

	)

124 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


125 
	~<w˘y≥.h
>

129 
__BEGIN_DECLS


131 
__BEGIN_NAMESPACE_STD


134 
tm
;

135 
__END_NAMESPACE_STD


139 
	$__USING_NAMESPACE_STD
(
tm
)

142 
__BEGIN_NAMESPACE_STD


144 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

145 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

147 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

149 
__THROW
;

152 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

153 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

155 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

157 
__THROW
;

160 
	$wcscmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
)

161 
__THROW
 
__©åibuã_puª__
;

163 
	$wc¢cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

164 
__THROW
 
__©åibuã_puª__
;

165 
__END_NAMESPACE_STD


167 #ifde‡
__USE_XOPEN2K8


169 
	$wcsˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

172 
	$wc¢ˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

173 
size_t
 
__n
Ë
__THROW
;

177 
	~<xloˇÀ.h
>

179 
	$wcsˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

180 
__loˇÀ_t
 
__loc
Ë
__THROW
;

182 
	$wc¢ˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

183 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

186 
__BEGIN_NAMESPACE_STD


189 
	$wcscﬁl
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

193 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

194 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

195 
__END_NAMESPACE_STD


197 #ifde‡
__USE_XOPEN2K8


203 
	$wcscﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

204 
__loˇÀ_t
 
__loc
Ë
__THROW
;

209 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

210 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

213 
wch¨_t
 *
	$wcsdup
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

216 
__BEGIN_NAMESPACE_STD


218 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


219 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

220 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

221 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

222 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
__©åibuã_puª__
;

228 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


229 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

230 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

231 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

232 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
__©åibuã_puª__
;

237 
__END_NAMESPACE_STD


239 #ifde‡
__USE_GNU


242 
wch¨_t
 *
	$wcsch∫ul
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__wc
)

243 
__THROW
 
__©åibuã_puª__
;

246 
__BEGIN_NAMESPACE_STD


249 
size_t
 
	$wcsc•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ªje˘
)

250 
__THROW
 
__©åibuã_puª__
;

253 
size_t
 
	$wcs•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

254 
__THROW
 
__©åibuã_puª__
;

256 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


257 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, 
__c⁄°
 wch¨_à*
__ac˚±
)

258 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

259 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
,

260 
__c⁄°
 
wch¨_t
 *
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

263 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

264 
__THROW
 
__©åibuã_puª__
;

267 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


268 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

269 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

270 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

271 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

274 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

275 
__THROW
 
__©åibuã_puª__
;

279 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

280 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

281 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

284 
size_t
 
	$wc¶í
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

285 
__END_NAMESPACE_STD


287 #ifde‡
__USE_XOPEN


289 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


290 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

291 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

292 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

293 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

296 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

297 
__THROW
 
__©åibuã_puª__
;

301 #ifde‡
__USE_XOPEN2K8


303 
size_t
 
	$wc¢Àn
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

304 
__THROW
 
__©åibuã_puª__
;

308 
__BEGIN_NAMESPACE_STD


310 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


311 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

312 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

313 "C++" 
__c⁄°
 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
,

314 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

317 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

318 
__THROW
 
__©åibuã_puª__
;

322 
	$wmemcmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

323 
__THROW
 
__©åibuã_puª__
;

326 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

327 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

331 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
)

332 
__THROW
;

335 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

336 
__END_NAMESPACE_STD


338 #ifde‡
__USE_GNU


341 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

342 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

343 
__THROW
;

347 
__BEGIN_NAMESPACE_STD


350 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

354 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

358 
	$mbsöô
 (
__c⁄°
 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

362 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

363 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

364 
mb°©e_t
 *
__p
Ë
__THROW
;

367 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

368 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

371 
size_t
 
	$__mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

372 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

373 
size_t
 
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

374 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

375 
__END_NAMESPACE_STD


377 #ifde‡
__USE_EXTERN_INLINES


383 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

384 
__exã∫_ölöe
 
wöt_t


385 
	`__NTH
 (
	$btowc
 (
__c
))

386 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

387 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

389 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

390 
__exã∫_ölöe
 

391 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

392 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

393 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

395 
__exã∫_ölöe
 
size_t


396 
__NTH
 (
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

397 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

398 {  (
__ps
 !
NULL


399 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

402 
__BEGIN_NAMESPACE_STD


405 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

406 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

407 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

411 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

412 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

413 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

414 
__END_NAMESPACE_STD


417 #ifdef 
__USE_XOPEN2K8


420 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

421 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

422 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

426 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

427 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

428 
size_t
 
__nwc
, size_à
__Àn
,

429 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

434 #ifde‡
__USE_XOPEN


436 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

440 
	$wcswidth
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

444 
__BEGIN_NAMESPACE_STD


447 
	$wc°od
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

448 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

449 
__END_NAMESPACE_STD


451 #ifde‡
__USE_ISOC99


452 
__BEGIN_NAMESPACE_C99


454 
	$wc°of
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

455 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

456 
	$wc°ﬁd
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

457 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

458 
__END_NAMESPACE_C99


462 
__BEGIN_NAMESPACE_STD


465 
	$wc°ﬁ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

466 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

470 
	$wc°oul
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

471 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

472 
__THROW
;

473 
__END_NAMESPACE_STD


475 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GNUC__
 && deföed 
__USE_GNU
)

476 
__BEGIN_NAMESPACE_C99


479 
__exãnsi⁄__


480 
	$wc°ﬁl
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

481 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

482 
__THROW
;

486 
__exãnsi⁄__


487 
	$wc°ouŒ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

488 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

489 
__ba£
Ë
__THROW
;

490 
__END_NAMESPACE_C99


493 #i‡
deföed
 
__GNUC__
 && deföed 
__USE_GNU


496 
__exãnsi⁄__


497 
	$wc°oq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

498 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

499 
__THROW
;

503 
__exãnsi⁄__


504 
	$wc°ouq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

505 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

506 
__ba£
Ë
__THROW
;

509 #ifde‡
__USE_GNU


523 
	~<xloˇÀ.h
>

527 
	$wc°ﬁ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

528 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

529 
__loˇÀ_t
 
__loc
Ë
__THROW
;

531 
	$wc°oul_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

532 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

533 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

535 
__exãnsi⁄__


536 
	$wc°ﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

537 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

538 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

540 
__exãnsi⁄__


541 
	$wc°ouŒ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

542 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

543 
__ba£
, 
__loˇÀ_t
 
__loc
)

544 
__THROW
;

546 
	$wc°od_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

547 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

548 
__THROW
;

550 
	$wc°of_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

551 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

552 
__THROW
;

554 
	$wc°ﬁd_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

555 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

556 
__loˇÀ_t
 
__loc
Ë
__THROW
;

560 #ifde‡
__USE_XOPEN2K8


563 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

564 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

568 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

569 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

570 
__THROW
;

577 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

580 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


581 
__BEGIN_NAMESPACE_STD


584 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

591 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

592 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

598 
	`w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

601 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

602 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

603 
__THROW
 ;

609 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

610 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

611 
__gnuc_va_li°
 
__¨g
)

617 
	`vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

618 
__gnuc_va_li°
 
__¨g
)

622 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

623 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

624 
__gnuc_va_li°
 
__¨g
)

625 
__THROW
 ;

632 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

633 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

639 
	`wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

642 
	$swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

643 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

644 
__THROW
 ;

646 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

647 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

648 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

649 #ifde‡
__REDIRECT


653 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

654 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

655 
__isoc99_fwsˇnf
)

657 
	`__REDIRECT
 (
wsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

658 
__isoc99_wsˇnf
)

660 
	`__REDIRECT_NTH
 (
swsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

661 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

662 ...), 
__isoc99_swsˇnf
)

665 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

666 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

667 
	`__isoc99_wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

668 
	$__isoc99_swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

669 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

670 
__THROW
;

671 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

672 
	#wsˇnf
 
__isoc99_wsˇnf


	)

673 
	#swsˇnf
 
__isoc99_swsˇnf


	)

677 
__END_NAMESPACE_STD


680 #ifde‡
__USE_ISOC99


681 
__BEGIN_NAMESPACE_C99


686 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

687 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

688 
__gnuc_va_li°
 
__¨g
)

694 
	`vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

695 
__gnuc_va_li°
 
__¨g
)

698 
	$vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

699 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

700 
__gnuc_va_li°
 
__¨g
)

701 
__THROW
 ;

703 #i‡!
deföed
 
__USE_GNU
 \

704 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

705 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

706 #ifde‡
__REDIRECT


707 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

708 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

709 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

711 
	`__REDIRECT
 (
vwsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

712 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

714 
	`__REDIRECT_NTH
 (
vswsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

715 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

716 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

719 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

720 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

721 
__gnuc_va_li°
 
__¨g
);

722 
	`__isoc99_vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

723 
__gnuc_va_li°
 
__¨g
);

724 
	$__isoc99_vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

725 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

726 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

727 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

728 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

729 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

733 
__END_NAMESPACE_C99


737 
__BEGIN_NAMESPACE_STD


742 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

743 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

749 
wöt_t
 
	`gëwch¨
 ();

756 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

757 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

763 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

771 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

772 
__FILE
 *
__ª°ri˘
 
__°ªam
);

778 
	`Âutws
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

779 
__FILE
 *
__ª°ri˘
 
__°ªam
);

786 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

787 
__END_NAMESPACE_STD


790 #ifde‡
__USE_GNU


798 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

799 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

807 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

815 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

824 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

825 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

834 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

835 
__FILE
 *
__ª°ri˘
 
__°ªam
);

843 
	`Âutws_u∆ocked
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

844 
__FILE
 *
__ª°ri˘
 
__°ªam
);

848 
__BEGIN_NAMESPACE_C99


852 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

853 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

854 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

855 
__END_NAMESPACE_C99


857 #ifde‡
__USE_GNU


858 
	~<xloˇÀ.h
>

862 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

863 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

864 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

865 
__loˇÀ_t
 
__loc
Ë
__THROW
;

874 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


875 
	#__√ed_iswxxx


	)

876 
	~<w˘y≥.h
>

880 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


881 
	~<bôs/wch¨2.h
>

884 #ifde‡
__LDBL_COMPAT


885 
	~<bôs/wch¨-ldbl.h
>

888 
__END_DECLS


896 #unde‡
__√ed_mb°©e_t


897 #unde‡
__√ed_wöt_t


	@/usr/include/asm-generic/errno.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_H


2 
	#_ASM_GENERIC_ERRNO_H


	)

4 
	~<asm-gíîic/î∫o-ba£.h
>

6 
	#EDEADLK
 35

	)

7 
	#ENAMETOOLONG
 36

	)

8 
	#ENOLCK
 37

	)

9 
	#ENOSYS
 38

	)

10 
	#ENOTEMPTY
 39

	)

11 
	#ELOOP
 40

	)

12 
	#EWOULDBLOCK
 
EAGAIN


	)

13 
	#ENOMSG
 42

	)

14 
	#EIDRM
 43

	)

15 
	#ECHRNG
 44

	)

16 
	#EL2NSYNC
 45

	)

17 
	#EL3HLT
 46

	)

18 
	#EL3RST
 47

	)

19 
	#ELNRNG
 48

	)

20 
	#EUNATCH
 49

	)

21 
	#ENOCSI
 50

	)

22 
	#EL2HLT
 51

	)

23 
	#EBADE
 52

	)

24 
	#EBADR
 53

	)

25 
	#EXFULL
 54

	)

26 
	#ENOANO
 55

	)

27 
	#EBADRQC
 56

	)

28 
	#EBADSLT
 57

	)

30 
	#EDEADLOCK
 
EDEADLK


	)

32 
	#EBFONT
 59

	)

33 
	#ENOSTR
 60

	)

34 
	#ENODATA
 61

	)

35 
	#ETIME
 62

	)

36 
	#ENOSR
 63

	)

37 
	#ENONET
 64

	)

38 
	#ENOPKG
 65

	)

39 
	#EREMOTE
 66

	)

40 
	#ENOLINK
 67

	)

41 
	#EADV
 68

	)

42 
	#ESRMNT
 69

	)

43 
	#ECOMM
 70

	)

44 
	#EPROTO
 71

	)

45 
	#EMULTIHOP
 72

	)

46 
	#EDOTDOT
 73

	)

47 
	#EBADMSG
 74

	)

48 
	#EOVERFLOW
 75

	)

49 
	#ENOTUNIQ
 76

	)

50 
	#EBADFD
 77

	)

51 
	#EREMCHG
 78

	)

52 
	#ELIBACC
 79

	)

53 
	#ELIBBAD
 80

	)

54 
	#ELIBSCN
 81

	)

55 
	#ELIBMAX
 82

	)

56 
	#ELIBEXEC
 83

	)

57 
	#EILSEQ
 84

	)

58 
	#ERESTART
 85

	)

59 
	#ESTRPIPE
 86

	)

60 
	#EUSERS
 87

	)

61 
	#ENOTSOCK
 88

	)

62 
	#EDESTADDRREQ
 89

	)

63 
	#EMSGSIZE
 90

	)

64 
	#EPROTOTYPE
 91

	)

65 
	#ENOPROTOOPT
 92

	)

66 
	#EPROTONOSUPPORT
 93

	)

67 
	#ESOCKTNOSUPPORT
 94

	)

68 
	#EOPNOTSUPP
 95

	)

69 
	#EPFNOSUPPORT
 96

	)

70 
	#EAFNOSUPPORT
 97

	)

71 
	#EADDRINUSE
 98

	)

72 
	#EADDRNOTAVAIL
 99

	)

73 
	#ENETDOWN
 100

	)

74 
	#ENETUNREACH
 101

	)

75 
	#ENETRESET
 102

	)

76 
	#ECONNABORTED
 103

	)

77 
	#ECONNRESET
 104

	)

78 
	#ENOBUFS
 105

	)

79 
	#EISCONN
 106

	)

80 
	#ENOTCONN
 107

	)

81 
	#ESHUTDOWN
 108

	)

82 
	#ETOOMANYREFS
 109

	)

83 
	#ETIMEDOUT
 110

	)

84 
	#ECONNREFUSED
 111

	)

85 
	#EHOSTDOWN
 112

	)

86 
	#EHOSTUNREACH
 113

	)

87 
	#EALREADY
 114

	)

88 
	#EINPROGRESS
 115

	)

89 
	#ESTALE
 116

	)

90 
	#EUCLEAN
 117

	)

91 
	#ENOTNAM
 118

	)

92 
	#ENAVAIL
 119

	)

93 
	#EISNAM
 120

	)

94 
	#EREMOTEIO
 121

	)

95 
	#EDQUOT
 122

	)

97 
	#ENOMEDIUM
 123

	)

98 
	#EMEDIUMTYPE
 124

	)

99 
	#ECANCELED
 125

	)

100 
	#ENOKEY
 126

	)

101 
	#EKEYEXPIRED
 127

	)

102 
	#EKEYREVOKED
 128

	)

103 
	#EKEYREJECTED
 129

	)

106 
	#EOWNERDEAD
 130

	)

107 
	#ENOTRECOVERABLE
 131

	)

109 
	#ERFKILL
 132

	)

111 
	#EHWPOISON
 133

	)

	@/usr/include/asm-generic/types.h

1 #i‚de‡
_ASM_GENERIC_TYPES_H


2 
	#_ASM_GENERIC_TYPES_H


	)

7 
	~<asm-gíîic/öt-Œ64.h
>

9 #i‚de‡
__ASSEMBLY__


11 
	tumode_t
;

	@/usr/include/asm/posix_types.h

1 #ifde‡
__i386__


2 
	~"posix_ty≥s_32.h
"

4 
	~"posix_ty≥s_64.h
"

	@/usr/include/bits/wchar-ldbl.h

20 #i‚de‡
_WCHAR_H


24 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


25 
__BEGIN_NAMESPACE_C99


26 
__LDBL_REDIR_DECL
 (
fw¥ötf
);

27 
__LDBL_REDIR_DECL
 (
w¥ötf
);

28 
__LDBL_REDIR_DECL
 (
sw¥ötf
);

29 
__LDBL_REDIR_DECL
 (
vfw¥ötf
);

30 
__LDBL_REDIR_DECL
 (
vw¥ötf
);

31 
__LDBL_REDIR_DECL
 (
vsw¥ötf
);

32 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

33 && !
deföed
 
	g__REDIRECT
 \

34 && (
deföed
 
	g__STRICT_ANSI__
 || deföed 
	g__USE_XOPEN2K
)

35 
	$__LDBL_REDIR1_DECL
 (
fwsˇnf
, 
__∆dbl___isoc99_fwsˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
wsˇnf
, 
__∆dbl___isoc99_wsˇnf
)

37 
	$__LDBL_REDIR1_DECL
 (
swsˇnf
, 
__∆dbl___isoc99_swsˇnf
)

39 
	`__LDBL_REDIR_DECL
 (
fwsˇnf
);

40 
	`__LDBL_REDIR_DECL
 (
wsˇnf
);

41 
	`__LDBL_REDIR_DECL
 (
swsˇnf
);

43 
__END_NAMESPACE_C99


46 #ifde‡
__USE_ISOC99


47 
__BEGIN_NAMESPACE_C99


48 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd
, 
wc°od
);

49 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

50 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

51 
	$__LDBL_REDIR1_DECL
 (
vfwsˇnf
, 
__∆dbl___isoc99_vfwsˇnf
)

52 
	$__LDBL_REDIR1_DECL
 (
vwsˇnf
, 
__∆dbl___isoc99_vwsˇnf
)

53 
	$__LDBL_REDIR1_DECL
 (
vswsˇnf
, 
__∆dbl___isoc99_vswsˇnf
)

55 
	`__LDBL_REDIR_DECL
 (
vfwsˇnf
);

56 
	`__LDBL_REDIR_DECL
 (
vwsˇnf
);

57 
	`__LDBL_REDIR_DECL
 (
vswsˇnf
);

59 
__END_NAMESPACE_C99


62 #ifde‡
__USE_GNU


63 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd_l
, 
wc°od_l
);

66 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


67 
	$__LDBL_REDIR_DECL
 (
__sw¥ötf_chk
)

68 
	$__LDBL_REDIR_DECL
 (
__vsw¥ötf_chk
)

69 #i‡
__USE_FORTIFY_LEVEL
 > 1

70 
	$__LDBL_REDIR_DECL
 (
__fw¥ötf_chk
)

71 
	$__LDBL_REDIR_DECL
 (
__w¥ötf_chk
)

72 
	$__LDBL_REDIR_DECL
 (
__vfw¥ötf_chk
)

73 
	$__LDBL_REDIR_DECL
 (
__vw¥ötf_chk
)

	@/usr/include/bits/wchar.h

20 #i‚de‡
_BITS_WCHAR_H


21 
	#_BITS_WCHAR_H
 1

	)

23 
	#__WCHAR_MIN
 (-2147483647»- 1l)

	)

24 
	#__WCHAR_MAX
 (2147483647l)

	)

	@/usr/include/bits/wchar2.h

20 #i‚de‡
_WCHAR_H


25 
wch¨_t
 *
	$__wmem˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

26 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

27 
size_t
 
__ns1
Ë
__THROW
;

28 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_Æüs
,

29 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

30 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
),

31 
wmem˝y
);

32 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_chk_w¨n
,

33 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

34 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

35 
size_t
 
__ns1
), 
__wmem˝y_chk
)

36 
	`__w¨«âr
 ("wmemcpy called withÜength biggerÅhan size of destination "

39 
__exã∫_Æways_ölöe
 
wch¨_t
 *

40 
	`__NTH
 (
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

41 
size_t
 
__n
))

43 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

45 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

46  
	`__wmem˝y_chk
 (
__s1
, 
__s2
, 
__n
,

47 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

49 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

50  
	`__wmem˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

51 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

53  
	`__wmem˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

54 
	}
}

57 
wch¨_t
 *
	$__wmemmove_chk
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

58 
size_t
 
__n
, size_à
__ns1
Ë
__THROW
;

59 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_Æüs
, (wch¨_à*
__s1
,

60 
__c⁄°
 
wch¨_t
 *
__s2
,

61 
size_t
 
__n
), 
wmemmove
);

62 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_chk_w¨n
,

63 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

64 
size_t
 
__n
, size_à
__ns1
), 
__wmemmove_chk
)

65 
	`__w¨«âr
 ("wmemmove called withÜength biggerÅhan size of destination "

68 
__exã∫_Æways_ölöe
 
wch¨_t
 *

69 
	`__NTH
 (
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
))

71 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

73 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

74  
	`__wmemmove_chk
 (
__s1
, 
__s2
, 
__n
,

75 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

77 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

78  
	`__wmemmove_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

79 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

81  
	`__wmemmove_Æüs
 (
__s1
, 
__s2
, 
__n
);

82 
	}
}

85 #ifde‡
__USE_GNU


86 
wch¨_t
 *
	$__wmemp˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

87 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

88 
size_t
 
__ns1
Ë
__THROW
;

89 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_Æüs
,

90 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

91 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
,

92 
size_t
 
__n
), 
wmemp˝y
);

93 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_chk_w¨n
,

94 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

95 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

96 
size_t
 
__ns1
), 
__wmemp˝y_chk
)

97 
	`__w¨«âr
 ("wmempcpy called withÜength biggerÅhan size of destination "

100 
__exã∫_Æways_ölöe
 
wch¨_t
 *

101 
	`__NTH
 (
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

102 
size_t
 
__n
))

104 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

106 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

107  
	`__wmemp˝y_chk
 (
__s1
, 
__s2
, 
__n
,

108 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

110 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

111  
	`__wmemp˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

112 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

114  
	`__wmemp˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

115 
	}
}

119 
wch¨_t
 *
	$__wmem£t_chk
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

120 
size_t
 
__ns
Ë
__THROW
;

121 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_Æüs
, (wch¨_à*
__s
, wch¨_à
__c
,

122 
size_t
 
__n
), 
wmem£t
);

123 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_chk_w¨n
,

124 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

125 
size_t
 
__ns
), 
__wmem£t_chk
)

126 
	`__w¨«âr
 ("wmemset called withÜength biggerÅhan size of destination "

129 
__exã∫_Æways_ölöe
 
wch¨_t
 *

130 
	`__NTH
 (
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
))

132 i‡(
	`__bos0
 (
__s
Ë!(
size_t
) -1)

134 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

135  
	`__wmem£t_chk
 (
__s
, 
__c
, 
__n
, 
	`__bos0
 (__sË/  (
wch¨_t
));

137 i‡(
__n
 > 
	`__bos0
 (
__s
Ë/  (
wch¨_t
))

138  
	`__wmem£t_chk_w¨n
 (
__s
, 
__c
, 
__n
,

139 
	`__bos0
 (
__s
Ë/  (
wch¨_t
));

141  
	`__wmem£t_Æüs
 (
__s
, 
__c
, 
__n
);

142 
	}
}

145 
wch¨_t
 *
	$__wcs˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

146 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

147 
size_t
 
__n
Ë
__THROW
;

148 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcs˝y_Æüs
,

149 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

150 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcs˝y
);

152 
__exã∫_Æways_ölöe
 
wch¨_t
 *

153 
	`__NTH
 (
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
))

155 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

156  
	`__wcs˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

157  
	`__wcs˝y_Æüs
 (
__de°
, 
__§c
);

158 
	}
}

161 
wch¨_t
 *
	$__w˝˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

162 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

163 
size_t
 
__de°Àn
Ë
__THROW
;

164 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝˝y_Æüs
,

165 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

166 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
w˝˝y
);

168 
__exã∫_Æways_ölöe
 
wch¨_t
 *

169 
	`__NTH
 (
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
))

171 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

172  
	`__w˝˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

173  
	`__w˝˝y_Æüs
 (
__de°
, 
__§c
);

174 
	}
}

177 
wch¨_t
 *
	$__wc¢˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

178 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

179 
size_t
 
__de°Àn
Ë
__THROW
;

180 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_Æüs
,

181 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

182 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

183 
size_t
 
__n
), 
wc¢˝y
);

184 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_chk_w¨n
,

185 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

186 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

187 
size_t
 
__n
, size_à
__de°Àn
), 
__wc¢˝y_chk
)

188 
	`__w¨«âr
 ("wcsncpy called withÜength biggerÅhan size of destination "

191 
__exã∫_Æways_ölöe
 
wch¨_t
 *

192 
	`__NTH
 (
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
,

193 
size_t
 
__n
))

195 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

197 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

198  
	`__wc¢˝y_chk
 (
__de°
, 
__§c
, 
__n
,

199 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

200 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

201  
	`__wc¢˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

202 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

204  
	`__wc¢˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

205 
	}
}

208 
wch¨_t
 *
	$__w˝n˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

209 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

210 
size_t
 
__de°Àn
Ë
__THROW
;

211 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_Æüs
,

212 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

213 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

214 
size_t
 
__n
), 
w˝n˝y
);

215 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_chk_w¨n
,

216 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

217 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

218 
size_t
 
__n
, size_à
__de°Àn
), 
__w˝n˝y_chk
)

219 
	`__w¨«âr
 ("wcpncpy called withÜength biggerÅhan size of destination "

222 
__exã∫_Æways_ölöe
 
wch¨_t
 *

223 
	`__NTH
 (
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
,

224 
size_t
 
__n
))

226 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

228 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

229  
	`__w˝n˝y_chk
 (
__de°
, 
__§c
, 
__n
,

230 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

231 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

232  
	`__w˝n˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

233 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

235  
	`__w˝n˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

236 
	}
}

239 
wch¨_t
 *
	$__wcsˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

240 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

241 
size_t
 
__de°Àn
Ë
__THROW
;

242 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcsˇt_Æüs
,

243 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

244 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcsˇt
);

246 
__exã∫_Æways_ölöe
 
wch¨_t
 *

247 
	`__NTH
 (
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
))

249 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

250  
	`__wcsˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

251  
	`__wcsˇt_Æüs
 (
__de°
, 
__§c
);

252 
	}
}

255 
wch¨_t
 *
	$__wc¢ˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

256 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

257 
size_t
 
__n
, size_à
__de°Àn
Ë
__THROW
;

258 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢ˇt_Æüs
,

259 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

260 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

261 
size_t
 
__n
), 
wc¢ˇt
);

263 
__exã∫_Æways_ölöe
 
wch¨_t
 *

264 
	`__NTH
 (
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
,

265 
size_t
 
__n
))

267 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

268  
	`__wc¢ˇt_chk
 (
__de°
, 
__§c
, 
__n
,

269 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

270  
	`__wc¢ˇt_Æüs
 (
__de°
, 
__§c
, 
__n
);

271 
	}
}

274 
	$__sw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

275 
__Êag
, 
size_t
 
__s_Àn
,

276 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

277 
__THROW
 ;

279 
	`__REDIRECT_NTH_LDBL
 (
__sw¥ötf_Æüs
,

280 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

281 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...),

282 
sw¥ötf
);

284 #ifde‡
__va_¨g_∑ck


285 
__exã∫_Æways_ölöe
 

286 
	`__NTH
 (
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

287 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...))

289 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

290  
	`__sw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

291 
	`__bos
 (
__s
Ë/  (
wch¨_t
),

292 
__fmt
, 
	`__va_¨g_∑ck
 ());

293  
	`__sw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
	`__va_¨g_∑ck
 ());

294 
	}
}

295 #ñi‡!
deföed
 
__˝lu•lus


297 
	#sw¥ötf
(
s
, 
n
, ...) \

298 (
	`__bos
 (
s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1 \

299 ? 
	`__sw¥ötf_chk
 (
s
, 
n
, 
__USE_FORTIFY_LEVEL
 - 1, \

300 
	`__bos
 (
s
Ë/  (
wch¨_t
), 
__VA_ARGS__
) \

301 : 
	`sw¥ötf
 (
s
, 
n
, 
__VA_ARGS__
))

	)

304 
	$__vsw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

305 
__Êag
, 
size_t
 
__s_Àn
,

306 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

307 
__gnuc_va_li°
 
__¨g
)

308 
__THROW
 ;

310 
	`__REDIRECT_NTH_LDBL
 (
__vsw¥ötf_Æüs
,

311 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

312 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
,

313 
__gnuc_va_li°
 
__≠
), 
vsw¥ötf
);

315 
__exã∫_Æways_ölöe
 

316 
	`__NTH
 (
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

317 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

319 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

320  
	`__vsw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

321 
	`__bos
 (
__s
Ë/  (
wch¨_t
), 
__fmt
, 
__≠
);

322  
	`__vsw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
__≠
);

323 
	}
}

326 #i‡
__USE_FORTIFY_LEVEL
 > 1

328 
__fw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

329 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

330 
__w¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

332 
__vfw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

333 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

334 
__gnuc_va_li°
 
__≠
);

335 
__vw¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

336 
__gnuc_va_li°
 
__≠
);

338 #ifde‡
__va_¨g_∑ck


339 
__exã∫_Æways_ölöe
 

340 
	$w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...)

342  
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

343 
	}
}

345 
__exã∫_Æways_ölöe
 

346 
	$fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__fmt
, ...)

348  
	`__fw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

349 
	`__va_¨g_∑ck
 ());

350 
	}
}

351 #ñi‡!
deföed
 
__˝lu•lus


352 
	#w¥ötf
(...) \

353 
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

354 
	#fw¥ötf
(
°ªam
, ...) \

355 
	`__fw¥ötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

358 
__exã∫_Æways_ölöe
 

359 
	$vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

361  
	`__vw¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

362 
	}
}

364 
__exã∫_Æways_ölöe
 

365 
	$vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

366 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

368  
	`__vfw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

369 
	}
}

373 
wch¨_t
 *
	$__fgëws_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

374 
__FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

375 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_Æüs
,

376 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

377 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws
Ë
__wur
;

378 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_chk_w¨n
,

379 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

380 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgëws_chk
)

381 
__wur
 
	`__w¨«âr
 ("fgetws called with bigger sizeÅhanÜength "

384 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

385 
	$fgëws
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

387 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

389 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

390  
	`__fgëws_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

391 
__n
, 
__°ªam
);

393 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

394  
	`__fgëws_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

395 
__n
, 
__°ªam
);

397  
	`__fgëws_Æüs
 (
__s
, 
__n
, 
__°ªam
);

398 
	}
}

400 #ifde‡
__USE_GNU


401 
wch¨_t
 *
	$__fgëws_u∆ocked_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
,

402 
__n
, 
__FILE
 *
__ª°ri˘
 
__°ªam
)

403 
__wur
;

404 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_Æüs
,

405 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

406 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws_u∆ocked
)

407 
__wur
;

408 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_chk_w¨n
,

409 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

410 
__FILE
 *
__ª°ri˘
 
__°ªam
),

411 
__fgëws_u∆ocked_chk
)

412 
__wur
 
	`__w¨«âr
 ("fgetws_unlocked called with bigger sizeÅhanÜength "

415 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

416 
	$fgëws_u∆ocked
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

418 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

420 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

421  
	`__fgëws_u∆ocked_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

422 
__n
, 
__°ªam
);

424 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

425  
	`__fgëws_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

426 
__n
, 
__°ªam
);

428  
	`__fgëws_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

429 
	}
}

433 
size_t
 
	$__w¸tomb_chk
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

434 
mb°©e_t
 *
__ª°ri˘
 
__p
,

435 
size_t
 
__buÊí
Ë
__THROW
 
__wur
;

436 
size_t
 
	`__REDIRECT_NTH
 (
__w¸tomb_Æüs
,

437 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

438 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
w¸tomb
Ë
__wur
;

440 
__exã∫_Æways_ölöe
 
__wur
 
size_t


441 
	`__NTH
 (
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

442 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

447 
	#__WCHAR_MB_LEN_MAX
 16

	)

448 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__WCHAR_MB_LEN_MAX


451 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__WCHAR_MB_LEN_MAX
 > __bos (__s))

452  
	`__w¸tomb_chk
 (
__s
, 
__wch¨
, 
__ps
, 
	`__bos
 (__s));

453  
	`__w¸tomb_Æüs
 (
__s
, 
__wch¨
, 
__ps
);

454 
	}
}

457 
size_t
 
	$__mb§towcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

458 
__c⁄°
 **
__ª°ri˘
 
__§c
,

459 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

460 
size_t
 
__d°Àn
Ë
__THROW
;

461 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_Æüs
,

462 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

463 
__c⁄°
 **
__ª°ri˘
 
__§c
,

464 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

465 
mb§towcs
);

466 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_chk_w¨n
,

467 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

468 
__c⁄°
 **
__ª°ri˘
 
__§c
,

469 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

470 
size_t
 
__d°Àn
), 
__mb§towcs_chk
)

471 
	`__w¨«âr
 ("mbsrtowcs called with dst buffer smallerÅhanÜen "

474 
__exã∫_Æways_ölöe
 
size_t


475 
	`__NTH
 (
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

476 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

478 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

480 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

481  
	`__mb§towcs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

482 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

484 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

485  
	`__mb§towcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

486 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

488  
	`__mb§towcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

489 
	}
}

492 
size_t
 
	$__wc§tombs_chk
 (*
__ª°ri˘
 
__d°
,

493 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

494 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

495 
size_t
 
__d°Àn
Ë
__THROW
;

496 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_Æüs
,

497 (*
__ª°ri˘
 
__d°
,

498 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

499 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

500 
wc§tombs
);

501 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_chk_w¨n
,

502 (*
__ª°ri˘
 
__d°
,

503 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

504 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

505 
size_t
 
__d°Àn
), 
__wc§tombs_chk
)

506 
	`__w¨«âr
 ("wcsrtombs called with dst buffer smallerÅhanÜen");

508 
__exã∫_Æways_ölöe
 
size_t


509 
	`__NTH
 (
	$wc§tombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

510 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

512 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

514 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

515  
	`__wc§tombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

517 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

518  
	`__wc§tombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

520  
	`__wc§tombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

521 
	}
}

524 #ifde‡
__USE_GNU


525 
size_t
 
	$__mb¢πowcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

526 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

527 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

528 
size_t
 
__d°Àn
Ë
__THROW
;

529 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_Æüs
,

530 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

531 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

532 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

533 
mb¢πowcs
);

534 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_chk_w¨n
,

535 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

536 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

537 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

538 
size_t
 
__d°Àn
), 
__mb¢πowcs_chk
)

539 
	`__w¨«âr
 ("mbsnrtowcs called with dst buffer smallerÅhanÜen "

542 
__exã∫_Æways_ölöe
 
size_t


543 
	`__NTH
 (
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

544 
size_t
 
__nmc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

546 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

548 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

549  
	`__mb¢πowcs_chk
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

550 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

552 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

553  
	`__mb¢πowcs_chk_w¨n
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

554 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

556  
	`__mb¢πowcs_Æüs
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
);

557 
	}
}

560 
size_t
 
	$__wc¢πombs_chk
 (*
__ª°ri˘
 
__d°
,

561 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

562 
size_t
 
__nwc
, size_à
__Àn
,

563 
mb°©e_t
 *
__ª°ri˘
 
__ps
, 
size_t
 
__d°Àn
)

564 
__THROW
;

565 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_Æüs
,

566 (*
__ª°ri˘
 
__d°
,

567 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

568 
size_t
 
__nwc
, size_à
__Àn
,

569 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
wc¢πombs
);

570 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_chk_w¨n
,

571 (*
__ª°ri˘
 
__d°
,

572 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

573 
size_t
 
__nwc
, size_à
__Àn
,

574 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

575 
size_t
 
__d°Àn
), 
__wc¢πombs_chk
)

576 
	`__w¨«âr
 ("wcsnrtombs called with dst buffer smallerÅhanÜen");

578 
__exã∫_Æways_ölöe
 
size_t


579 
	`__NTH
 (
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

580 
size_t
 
__nwc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

582 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

584 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

585  
	`__wc¢πombs_chk
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

586 
	`__bos
 (
__d°
));

588 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

589  
	`__wc¢πombs_chk_w¨n
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

590 
	`__bos
 (
__d°
));

592  
	`__wc¢πombs_Æüs
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
);

593 
	}
}

	@/usr/include/linux/ioctl.h

1 #i‚de‡
_LINUX_IOCTL_H


2 
	#_LINUX_IOCTL_H


	)

4 
	~<asm/io˘l.h
>

	@/usr/include/linux/stddef.h

1 #i‚de‡
_LINUX_STDDEF_H


2 
	#_LINUX_STDDEF_H


	)

6 #unde‡
NULL


7 #i‡
deföed
(
__˝lu•lus
)

8 
	#NULL
 0

	)

10 
	#NULL
 ((*)0)

	)

	@/usr/include/pthread.h

20 #i‚de‡
_PTHREAD_H


21 
	#_PTHREAD_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<ídün.h
>

25 
	~<sched.h
>

26 
	~<time.h
>

28 
	~<bôs/±hªadty≥s.h
>

29 
	~<bôs/£tjmp.h
>

30 
	~<bôs/w‹dsize.h
>

36 
	mPTHREAD_CREATE_JOINABLE
,

37 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

38 
	mPTHREAD_CREATE_DETACHED


39 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

46 
	mPTHREAD_MUTEX_TIMED_NP
,

47 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

48 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

49 
	mPTHREAD_MUTEX_ADAPTIVE_NP


50 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


52 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

53 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

54 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

55 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


57 #ifde‡
__USE_GNU


59 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


64 #ifde‡
__USE_XOPEN2K


68 
	mPTHREAD_MUTEX_STALLED
,

69 
	mPTHREAD_MUTEX_STALLED_NP
 = 
PTHREAD_MUTEX_STALLED
,

70 
	mPTHREAD_MUTEX_ROBUST
,

71 
	mPTHREAD_MUTEX_ROBUST_NP
 = 
PTHREAD_MUTEX_ROBUST


76 #ifde‡
__USE_UNIX98


80 
	mPTHREAD_PRIO_NONE
,

81 
	mPTHREAD_PRIO_INHERIT
,

82 
	mPTHREAD_PRIO_PROTECT


88 #i‡
__WORDSIZE
 == 64

89 
	#PTHREAD_MUTEX_INITIALIZER
 \

90 { { 0, 0, 0, 0, 0, 0, { 0, 0 } } }

	)

91 #ifde‡
__USE_GNU


92 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

93 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0, 0 } } }

	)

94 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

95 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0, 0 } } }

	)

96 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

97 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0, 0 } } }

	)

100 
	#PTHREAD_MUTEX_INITIALIZER
 \

101 { { 0, 0, 0, 0, 0, { 0 } } }

	)

102 #ifde‡
__USE_GNU


103 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

104 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0 } } }

	)

105 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

106 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0 } } }

	)

107 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

108 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0 } } }

	)

114 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


117 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

118 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

119 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

120 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


124 
	#PTHREAD_RWLOCK_INITIALIZER
 \

125 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

	)

126 #ifde‡
__USE_GNU


127 #i‡
__WORDSIZE
 == 64

128 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

130 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

132 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


133 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

134 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

135 0, 0, 0, 0 } }

	)

137 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

138 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

139 0 } }

	)

149 
	mPTHREAD_INHERIT_SCHED
,

150 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

151 
	mPTHREAD_EXPLICIT_SCHED


152 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

159 
	mPTHREAD_SCOPE_SYSTEM
,

160 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

161 
	mPTHREAD_SCOPE_PROCESS


162 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

169 
	mPTHREAD_PROCESS_PRIVATE
,

170 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

171 
	mPTHREAD_PROCESS_SHARED


172 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

178 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

182 
	s_±hªad_˛ónup_buf„r


184 (*
	m__routöe
) (*);

185 *
	m__¨g
;

186 
	m__ˇn˚…y≥
;

187 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

193 
	mPTHREAD_CANCEL_ENABLE
,

194 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

195 
	mPTHREAD_CANCEL_DISABLE


196 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

200 
	mPTHREAD_CANCEL_DEFERRED
,

201 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

202 
	mPTHREAD_CANCEL_ASYNCHRONOUS


203 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

205 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

209 
	#PTHREAD_ONCE_INIT
 0

	)

212 #ifde‡
__USE_XOPEN2K


216 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

220 
__BEGIN_DECLS


225 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

226 
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

227 *(*
__°¨t_routöe
) (*),

228 *
__ª°ri˘
 
__¨g
Ë
__THROWNL
 
__n⁄nuŒ
 ((1, 3));

234 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

242 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

244 #ifde‡
__USE_GNU


247 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

255 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

256 
__c⁄°
 
time•ec
 *
__ab°ime
);

263 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

267 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

270 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
Ë
__THROW
;

278 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

281 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

282 
__THROW
 
	`__n⁄nuŒ
 ((1));

285 
	$±hªad_©å_gëdëach°©e
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

286 *
__dëach°©e
)

287 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

290 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

291 
__dëach°©e
)

292 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 
	$±hªad_©å_gëgu¨dsize
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

297 
size_t
 *
__gu¨dsize
)

298 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

301 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

302 
size_t
 
__gu¨dsize
)

303 
__THROW
 
	`__n⁄nuŒ
 ((1));

307 
	$±hªad_©å_gësched∑øm
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


308 
__©å
,

309 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

310 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

313 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

314 
__c⁄°
 
sched_∑øm
 *
__ª°ri˘


315 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

318 
	$±hªad_©å_gëschedpﬁicy
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


319 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

320 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

323 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

324 
__THROW
 
	`__n⁄nuŒ
 ((1));

327 
	$±hªad_©å_gëöhîôsched
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


328 
__©å
, *
__ª°ri˘
 
__öhîô
)

329 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

332 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

333 
__öhîô
)

334 
__THROW
 
	`__n⁄nuŒ
 ((1));

338 
	$±hªad_©å_gësc›e
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

339 *
__ª°ri˘
 
__sc›e
)

340 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

343 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

344 
__THROW
 
	`__n⁄nuŒ
 ((1));

347 
	$±hªad_©å_gë°ackaddr
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


348 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

349 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

355 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

356 *
__°ackaddr
)

357 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

360 
	$±hªad_©å_gë°acksize
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


361 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

362 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

367 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

368 
size_t
 
__°acksize
)

369 
__THROW
 
	`__n⁄nuŒ
 ((1));

371 #ifde‡
__USE_XOPEN2K


373 
	$±hªad_©å_gë°ack
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

374 **
__ª°ri˘
 
__°ackaddr
,

375 
size_t
 *
__ª°ri˘
 
__°acksize
)

376 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

381 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

382 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

385 #ifde‡
__USE_GNU


388 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

389 
size_t
 
__˝u£tsize
,

390 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

391 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

395 
	$±hªad_©å_gëafföôy_≈
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

396 
size_t
 
__˝u£tsize
,

397 
˝u_£t_t
 *
__˝u£t
)

398 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

404 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

405 
__THROW
 
	`__n⁄nuŒ
 ((2));

413 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

414 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

415 
__THROW
 
	`__n⁄nuŒ
 ((3));

418 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

419 *
__ª°ri˘
 
__pﬁicy
,

420 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

421 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

424 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

425 
__THROW
;

428 #ifde‡
__USE_GNU


430 
	$±hªad_gë«me_≈
 (
±hªad_t
 
__èrgë_thªad
, *
__buf
,

431 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

435 
	$±hªad_£äame_≈
 (
±hªad_t
 
__èrgë_thªad
, 
__c⁄°
 *
__«me
)

436 
__THROW
 
	`__n⁄nuŒ
 ((2));

440 #ifde‡
__USE_UNIX98


442 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

445 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

448 #ifde‡
__USE_GNU


453 
	$±hªad_yõld
 (Ë
__THROW
;

458 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

459 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

460 
__THROW
 
	`__n⁄nuŒ
 ((3));

463 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

464 
˝u_£t_t
 *
__˝u£t
)

465 
__THROW
 
	`__n⁄nuŒ
 ((3));

478 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

479 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

490 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

494 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

497 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

502 
	`±hªad_ã°ˇn˚l
 ();

511 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

512 
__mask_was_ßved
;

513 } 
__ˇn˚l_jmp_buf
[1];

514 *
__∑d
[4];

515 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

518 #i‚de‡
__˛ónup_f˘_©åibuã


519 
	#__˛ónup_f˘_©åibuã


	)

524 
	s__±hªad_˛ónup_‰ame


526 (*
__ˇn˚l_routöe
) (*);

527 *
__ˇn˚l_¨g
;

528 
__do_ô
;

529 
__ˇn˚l_ty≥
;

532 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


533 #ifde‡
__˝lu•lus


535 ˛as†
	c__±hªad_˛ónup_˛ass


537 (*
__ˇn˚l_routöe
) (*);

538 *
__ˇn˚l_¨g
;

539 
__do_ô
;

540 
__ˇn˚l_ty≥
;

542 
public
:

543 
	`__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

544 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

545 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

546 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

547 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

548 &
__ˇn˚l_ty≥
); 
	}
}

549 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

559 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

561 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

565 
	#±hªad_˛ónup_p›
(
execuã
) \

566 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

567 } 0)

	)

569 #ifde‡
__USE_GNU


573 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

575 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

576 
__˛‰ame
.
	`__de„r
 ()

	)

581 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

582 
__˛‰ame
.
	`__ª°‹e
 (); \

583 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

584 } 0)

	)

591 
__exã∫_ölöe
 

592 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

594 i‡(
__‰ame
->
__do_ô
)

595 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

596 
	}
}

605 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

607 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

608 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

609 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

610 .
__do_ô
 = 1 };

	)

614 
	#±hªad_˛ónup_p›
(
execuã
) \

615 
__˛‰ame
.
__do_ô
 = (
execuã
); \

616 } 0)

	)

618 #ifde‡
__USE_GNU


622 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

624 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

625 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

626 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

627 .
__do_ô
 = 1 }; \

628 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

629 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

634 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

635 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

636 
__˛‰ame
.
__do_ô
 = (
execuã
); \

637 } 0)

	)

648 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

650 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

651 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

652 *
__ˇn˚l_¨g
 = (
¨g
); \

653 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

654 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

655 i‡(
	`__buûtö_ex≥˘
 (
__nŸ_fú°_ˇŒ
, 0)) \

657 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

658 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

662 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

663 dÿ{

	)

664 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

665 
__˛ónup_f˘_©åibuã
;

669 
	#±hªad_˛ónup_p›
(
execuã
) \

672 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

673 i‡(
execuã
) \

674 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

675 } 0)

	)

676 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

677 
__˛ónup_f˘_©åibuã
;

679 #ifde‡
__USE_GNU


683 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

685 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

686 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

687 *
__ˇn˚l_¨g
 = (
¨g
); \

688 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

689 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

690 i‡(
	`__buûtö_ex≥˘
 (
__nŸ_fú°_ˇŒ
, 0)) \

692 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

693 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

697 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

698 dÿ{

	)

699 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

700 
__˛ónup_f˘_©åibuã
;

705 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

708 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

709 i‡(
execuã
) \

710 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

711 
	}
} 0)

	)

712 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

713 
__˛ónup_f˘_©åibuã
;

717 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

718 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

719 #i‚de‡
SHARED


720 
	`__©åibuã__
 ((
__wók__
))

726 
__jmp_buf_èg
;

727 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROW
;

733 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

734 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx©å
)

735 
__THROW
 
	`__n⁄nuŒ
 ((1));

738 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

739 
__THROW
 
	`__n⁄nuŒ
 ((1));

742 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

743 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

746 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

747 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

749 #ifde‡
__USE_XOPEN2K


751 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

752 
__c⁄°
 
time•ec
 *
__ª°ri˘


753 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

757 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

758 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

762 
	$±hªad_muãx_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx_t
 *

763 
__ª°ri˘
 
__muãx
,

764 *
__ª°ri˘
 
__¥io˚ûög
)

765 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

769 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

770 
__¥io˚ûög
,

771 *
__ª°ri˘
 
__ﬁd_˚ûög
)

772 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

775 #ifde‡
__USE_XOPEN2K8


777 
	$±hªad_muãx_c⁄si°ít
 (
±hªad_muãx_t
 *
__muãx
)

778 
__THROW
 
	`__n⁄nuŒ
 ((1));

779 #ifde‡
__USE_GNU


780 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

781 
__THROW
 
	`__n⁄nuŒ
 ((1));

790 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

791 
__THROW
 
	`__n⁄nuŒ
 ((1));

794 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

795 
__THROW
 
	`__n⁄nuŒ
 ((1));

798 
	$±hªad_muãx©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_muãx©å_t
 *

799 
__ª°ri˘
 
__©å
,

800 *
__ª°ri˘
 
__psh¨ed
)

801 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

804 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

805 
__psh¨ed
)

806 
__THROW
 
	`__n⁄nuŒ
 ((1));

808 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


810 
	$±hªad_muãx©å_gëty≥
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__ª°ri˘


811 
__©å
, *
__ª°ri˘
 
__köd
)

812 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

817 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

818 
__THROW
 
	`__n⁄nuŒ
 ((1));

822 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (
__c⁄°
 
±hªad_muãx©å_t
 *

823 
__ª°ri˘
 
__©å
,

824 *
__ª°ri˘
 
__¥Ÿocﬁ
)

825 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

829 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

830 
__¥Ÿocﬁ
)

831 
__THROW
 
	`__n⁄nuŒ
 ((1));

834 
	$±hªad_muãx©å_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx©å_t
 *

835 
__ª°ri˘
 
__©å
,

836 *
__ª°ri˘
 
__¥io˚ûög
)

837 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

840 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

841 
__¥io˚ûög
)

842 
__THROW
 
	`__n⁄nuŒ
 ((1));

844 #ifde‡
__USE_XOPEN2K


846 
	$±hªad_muãx©å_gërobu°
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

847 *
__robu°√ss
)

848 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

849 #ifde‡
__USE_GNU


850 
	$±hªad_muãx©å_gërobu°_≈
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

851 *
__robu°√ss
)

852 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

856 
	$±hªad_muãx©å_£åobu°
 (
±hªad_muãx©å_t
 *
__©å
,

857 
__robu°√ss
)

858 
__THROW
 
	`__n⁄nuŒ
 ((1));

859 #ifde‡
__USE_GNU


860 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

861 
__robu°√ss
)

862 
__THROW
 
	`__n⁄nuŒ
 ((1));

867 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


872 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

873 
__c⁄°
 
±hªad_rwlock©å_t
 *
__ª°ri˘


874 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

877 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

878 
__THROW
 
	`__n⁄nuŒ
 ((1));

881 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

882 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

885 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

886 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

888 #ifde‡
__USE_XOPEN2K


890 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

891 
__c⁄°
 
time•ec
 *
__ª°ri˘


892 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

896 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

897 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

900 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

901 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

903 #ifde‡
__USE_XOPEN2K


905 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

906 
__c⁄°
 
time•ec
 *
__ª°ri˘


907 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

911 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

912 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

918 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

919 
__THROW
 
	`__n⁄nuŒ
 ((1));

922 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

923 
__THROW
 
	`__n⁄nuŒ
 ((1));

926 
	$±hªad_rwlock©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

927 
__ª°ri˘
 
__©å
,

928 *
__ª°ri˘
 
__psh¨ed
)

929 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

932 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

933 
__psh¨ed
)

934 
__THROW
 
	`__n⁄nuŒ
 ((1));

937 
	$±hªad_rwlock©å_gëköd_≈
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

938 
__ª°ri˘
 
__©å
,

939 *
__ª°ri˘
 
__¥ef
)

940 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

943 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

944 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

952 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

953 
__c⁄°
 
±hªad_c⁄d©å_t
 *
__ª°ri˘


954 
__c⁄d_©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

957 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

958 
__THROW
 
	`__n⁄nuŒ
 ((1));

961 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

962 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

965 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

966 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

973 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

974 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

975 
	`__n⁄nuŒ
 ((1, 2));

984 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

985 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

986 
__c⁄°
 
time•ec
 *
__ª°ri˘


987 
__ab°ime
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

992 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

993 
__THROW
 
	`__n⁄nuŒ
 ((1));

996 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

997 
__THROW
 
	`__n⁄nuŒ
 ((1));

1000 
	$±hªad_c⁄d©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

1001 
__ª°ri˘
 
__©å
,

1002 *
__ª°ri˘
 
__psh¨ed
)

1003 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1006 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

1007 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1009 #ifde‡
__USE_XOPEN2K


1011 
	$±hªad_c⁄d©å_gë˛ock
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

1012 
__ª°ri˘
 
__©å
,

1013 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

1014 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1017 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

1018 
__˛ockid_t
 
__˛ock_id
)

1019 
__THROW
 
	`__n⁄nuŒ
 ((1));

1023 #ifde‡
__USE_XOPEN2K


1028 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1029 
__THROW
 
	`__n⁄nuŒ
 ((1));

1032 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1033 
__THROW
 
	`__n⁄nuŒ
 ((1));

1036 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1037 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1040 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1041 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1044 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1045 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1052 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1053 
__c⁄°
 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1054 
__©å
, 
__cou¡
)

1055 
__THROW
 
	`__n⁄nuŒ
 ((1));

1058 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1059 
__THROW
 
	`__n⁄nuŒ
 ((1));

1062 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1063 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1067 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1068 
__THROW
 
	`__n⁄nuŒ
 ((1));

1071 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1072 
__THROW
 
	`__n⁄nuŒ
 ((1));

1075 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (
__c⁄°
 
±hªad_b¨rõøâr_t
 *

1076 
__ª°ri˘
 
__©å
,

1077 *
__ª°ri˘
 
__psh¨ed
)

1078 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1081 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1082 
__psh¨ed
)

1083 
__THROW
 
	`__n⁄nuŒ
 ((1));

1095 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1096 (*
__de°r_fun˘i⁄
) (*))

1097 
__THROW
 
	`__n⁄nuŒ
 ((1));

1100 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1103 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1106 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1107 
__c⁄°
 *
__poöãr
Ë
__THROW
 ;

1110 #ifde‡
__USE_XOPEN2K


1112 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1113 
__˛ockid_t
 *
__˛ock_id
)

1114 
__THROW
 
	`__n⁄nuŒ
 ((2));

1129 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1130 (*
__∑ª¡
) (),

1131 (*
__chûd
Ë()Ë
__THROW
;

1134 #ifde‡
__USE_EXTERN_INLINES


1136 
__exã∫_ölöe
 

1137 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1139  
__thªad1
 =
__thªad2
;

1140 
	}
}

1143 
	g__END_DECLS


	@/usr/include/wctype.h

24 #i‚de‡
_WCTYPE_H


26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #i‚de‡
__√ed_iswxxx


30 
	#_WCTYPE_H
 1

	)

33 
	#__√ed_wöt_t


	)

34 
	~<wch¨.h
>

38 #i‚de‡
WEOF


39 
	#WEOF
 (0xffffffffu)

	)

42 #unde‡
__√ed_iswxxx


47 #i‚de‡
__iswxxx_deföed


48 
	#__iswxxx_deföed
 1

	)

50 
__BEGIN_NAMESPACE_C99


53 
	tw˘y≥_t
;

54 
	g__END_NAMESPACE_C99


56 #i‚de‡
_ISwbô


61 
	~<ídün.h
>

62 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


63 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

65 
	#_ISwbô
(
bô
) \

66 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

67 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

68 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

69 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

74 
	m__ISwuµî
 = 0,

75 
	m__ISwlowî
 = 1,

76 
	m__ISwÆpha
 = 2,

77 
	m__ISwdigô
 = 3,

78 
	m__ISwxdigô
 = 4,

79 
	m__ISw•a˚
 = 5,

80 
	m__ISw¥öt
 = 6,

81 
	m__ISwgøph
 = 7,

82 
	m__ISwbœnk
 = 8,

83 
	m__ISw˙ål
 = 9,

84 
	m__ISwpun˘
 = 10,

85 
	m__ISwÆnum
 = 11,

87 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

88 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

89 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

90 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

91 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

92 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

93 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

94 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

95 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

96 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

97 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

98 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

103 
__BEGIN_DECLS


105 
__BEGIN_NAMESPACE_C99


112 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

118 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

121 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

125 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

129 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

134 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

137 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

142 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

147 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

152 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

157 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

162 #ifde‡
__USE_ISOC99


163 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

172 
w˘y≥_t
 
	$w˘y≥
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

176 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

177 
__END_NAMESPACE_C99


184 
__BEGIN_NAMESPACE_C99


187 
__c⁄°
 
	t__öt32_t
 *
	tw˘øns_t
;

188 
__END_NAMESPACE_C99


189 #ifde‡
__USE_GNU


190 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

193 
__BEGIN_NAMESPACE_C99


195 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

199 
__END_NAMESPACE_C99


201 
__END_DECLS


208 #ifde‡
_WCTYPE_H


214 
__BEGIN_DECLS


216 
__BEGIN_NAMESPACE_C99


219 
w˘øns_t
 
	$w˘øns
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

222 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

223 
__END_NAMESPACE_C99


225 #ifde‡
__USE_XOPEN2K8


227 
	~<xloˇÀ.h
>

231 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

237 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

240 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

244 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

248 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

253 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

256 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

261 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

266 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

271 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

276 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

281 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

285 
w˘y≥_t
 
	$w˘y≥_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

286 
__THROW
;

290 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

291 
__THROW
;

299 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

302 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

306 
w˘øns_t
 
	$w˘øns_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

307 
__THROW
;

310 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

311 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

315 
__END_DECLS


	@/usr/include/asm-generic/errno-base.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_BASE_H


2 
	#_ASM_GENERIC_ERRNO_BASE_H


	)

4 
	#EPERM
 1

	)

5 
	#ENOENT
 2

	)

6 
	#ESRCH
 3

	)

7 
	#EINTR
 4

	)

8 
	#EIO
 5

	)

9 
	#ENXIO
 6

	)

10 
	#E2BIG
 7

	)

11 
	#ENOEXEC
 8

	)

12 
	#EBADF
 9

	)

13 
	#ECHILD
 10

	)

14 
	#EAGAIN
 11

	)

15 
	#ENOMEM
 12

	)

16 
	#EACCES
 13

	)

17 
	#EFAULT
 14

	)

18 
	#ENOTBLK
 15

	)

19 
	#EBUSY
 16

	)

20 
	#EEXIST
 17

	)

21 
	#EXDEV
 18

	)

22 
	#ENODEV
 19

	)

23 
	#ENOTDIR
 20

	)

24 
	#EISDIR
 21

	)

25 
	#EINVAL
 22

	)

26 
	#ENFILE
 23

	)

27 
	#EMFILE
 24

	)

28 
	#ENOTTY
 25

	)

29 
	#ETXTBSY
 26

	)

30 
	#EFBIG
 27

	)

31 
	#ENOSPC
 28

	)

32 
	#ESPIPE
 29

	)

33 
	#EROFS
 30

	)

34 
	#EMLINK
 31

	)

35 
	#EPIPE
 32

	)

36 
	#EDOM
 33

	)

37 
	#ERANGE
 34

	)

	@/usr/include/asm-generic/int-ll64.h

8 #i‚de‡
_ASM_GENERIC_INT_LL64_H


9 
	#_ASM_GENERIC_INT_LL64_H


	)

11 
	~<asm/bô•îl⁄g.h
>

13 #i‚de‡
__ASSEMBLY__


19 
__sig√d__
 
	t__s8
;

20 
	t__u8
;

22 
__sig√d__
 
	t__s16
;

23 
	t__u16
;

25 
__sig√d__
 
	t__s32
;

26 
	t__u32
;

28 #ifde‡
__GNUC__


29 
__exãnsi⁄__
 
__sig√d__
 
	t__s64
;

30 
__exãnsi⁄__
 
	t__u64
;

32 
__sig√d__
 
	t__s64
;

33 
	t__u64
;

	@/usr/include/asm/ioctl.h

1 
	~<asm-gíîic/io˘l.h
>

	@/usr/include/sched.h

21 #i‚def 
_SCHED_H


22 
	#_SCHED_H
 1

	)

24 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 
	#__√ed_size_t


	)

30 
	~<°ddef.h
>

32 
	#__√ed_time_t


	)

33 
	#__√ed_time•ec


	)

34 
	~<time.h
>

36 #i‚de‡
__pid_t_deföed


37 
__pid_t
 
	tpid_t
;

38 
	#__pid_t_deföed


	)

43 
	~<bôs/sched.h
>

45 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

48 
__BEGIN_DECLS


51 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

52 
__THROW
;

55 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

58 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

59 
__c⁄°
 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

62 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

65 
	$sched_yõld
 (Ë
__THROW
;

68 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

71 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

74 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

77 #ifde‡
__USE_GNU


79 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

80 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

81 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

82 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

83 
˝u£ç
)

	)

84 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

85 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

87 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

88 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

89 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

90 
˝u£ç
)

	)

91 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

92 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

94 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

95 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

96 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

97 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

99 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

100 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

101 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

102 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

103 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

104 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

105 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

106 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

107 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

108 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

109 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

110 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

112 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

113 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

114 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

118 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

119 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

122 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

123 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

126 
__END_DECLS


	@/usr/include/asm-generic/ioctl.h

1 #i‚de‡
_ASM_GENERIC_IOCTL_H


2 
	#_ASM_GENERIC_IOCTL_H


	)

22 
	#_IOC_NRBITS
 8

	)

23 
	#_IOC_TYPEBITS
 8

	)

30 #i‚de‡
_IOC_SIZEBITS


31 
	#_IOC_SIZEBITS
 14

	)

34 #i‚de‡
_IOC_DIRBITS


35 
	#_IOC_DIRBITS
 2

	)

38 
	#_IOC_NRMASK
 ((1 << 
_IOC_NRBITS
)-1)

	)

39 
	#_IOC_TYPEMASK
 ((1 << 
_IOC_TYPEBITS
)-1)

	)

40 
	#_IOC_SIZEMASK
 ((1 << 
_IOC_SIZEBITS
)-1)

	)

41 
	#_IOC_DIRMASK
 ((1 << 
_IOC_DIRBITS
)-1)

	)

43 
	#_IOC_NRSHIFT
 0

	)

44 
	#_IOC_TYPESHIFT
 (
_IOC_NRSHIFT
+
_IOC_NRBITS
)

	)

45 
	#_IOC_SIZESHIFT
 (
_IOC_TYPESHIFT
+
_IOC_TYPEBITS
)

	)

46 
	#_IOC_DIRSHIFT
 (
_IOC_SIZESHIFT
+
_IOC_SIZEBITS
)

	)

53 #i‚de‡
_IOC_NONE


54 
	#_IOC_NONE
 0U

	)

57 #i‚de‡
_IOC_WRITE


58 
	#_IOC_WRITE
 1U

	)

61 #i‚de‡
_IOC_READ


62 
	#_IOC_READ
 2U

	)

65 
	#_IOC
(
dú
,
ty≥
,
ƒ
,
size
) \

66 (((
dú
Ë<< 
_IOC_DIRSHIFT
) | \

67 ((
ty≥
Ë<< 
_IOC_TYPESHIFT
) | \

68 ((
ƒ
Ë<< 
_IOC_NRSHIFT
) | \

69 ((
size
Ë<< 
_IOC_SIZESHIFT
))

	)

71 
	#_IOC_TYPECHECK
(
t
Ë(—))

	)

74 
	#_IO
(
ty≥
,
ƒ
Ë
	`_IOC
(
_IOC_NONE
,—y≥),“r),0)

	)

75 
	#_IOR
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

76 
	#_IOW
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_WRITE
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

77 
	#_IOWR
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
|
_IOC_WRITE
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

78 
	#_IOR_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
,—y≥),“r),(size))

	)

79 
	#_IOW_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_WRITE
,—y≥),“r),(size))

	)

80 
	#_IOWR_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
|
_IOC_WRITE
,—y≥),“r),(size))

	)

83 
	#_IOC_DIR
(
ƒ
Ë((“rË>> 
_IOC_DIRSHIFT
Ë& 
_IOC_DIRMASK
)

	)

84 
	#_IOC_TYPE
(
ƒ
Ë((“rË>> 
_IOC_TYPESHIFT
Ë& 
_IOC_TYPEMASK
)

	)

85 
	#_IOC_NR
(
ƒ
Ë((“rË>> 
_IOC_NRSHIFT
Ë& 
_IOC_NRMASK
)

	)

86 
	#_IOC_SIZE
(
ƒ
Ë((“rË>> 
_IOC_SIZESHIFT
Ë& 
_IOC_SIZEMASK
)

	)

90 
	#IOC_IN
 (
_IOC_WRITE
 << 
_IOC_DIRSHIFT
)

	)

91 
	#IOC_OUT
 (
_IOC_READ
 << 
_IOC_DIRSHIFT
)

	)

92 
	#IOC_INOUT
 ((
_IOC_WRITE
|
_IOC_READ
Ë<< 
_IOC_DIRSHIFT
)

	)

93 
	#IOCSIZE_MASK
 (
_IOC_SIZEMASK
 << 
_IOC_SIZESHIFT
)

	)

94 
	#IOCSIZE_SHIFT
 (
_IOC_SIZESHIFT
)

	)

	@/usr/include/asm/bitsperlong.h

1 #i‚de‡
__ASM_X86_BITSPERLONG_H


2 
	#__ASM_X86_BITSPERLONG_H


	)

4 #ifde‡
__x86_64__


5 
	#__BITS_PER_LONG
 64

	)

7 
	#__BITS_PER_LONG
 32

	)

10 
	~<asm-gíîic/bô•îl⁄g.h
>

	@/usr/include/bits/sched.h

22 #i‚de‡
__√ed_sched∑øm


24 #i‚de‡
_SCHED_H


30 
	#SCHED_OTHER
 0

	)

31 
	#SCHED_FIFO
 1

	)

32 
	#SCHED_RR
 2

	)

33 #ifde‡
__USE_GNU


34 
	#SCHED_BATCH
 3

	)

35 
	#SCHED_IDLE
 5

	)

37 
	#SCHED_RESET_ON_FORK
 0x40000000

	)

40 #ifde‡
__USE_GNU


42 
	#CSIGNAL
 0x000000f‡

	)

43 
	#CLONE_VM
 0x00000100

	)

44 
	#CLONE_FS
 0x00000200

	)

45 
	#CLONE_FILES
 0x00000400

	)

46 
	#CLONE_SIGHAND
 0x00000800

	)

47 
	#CLONE_PTRACE
 0x00002000

	)

48 
	#CLONE_VFORK
 0x00004000

	)

50 
	#CLONE_PARENT
 0x00008000

	)

52 
	#CLONE_THREAD
 0x00010000

	)

53 
	#CLONE_NEWNS
 0x00020000

	)

54 
	#CLONE_SYSVSEM
 0x00040000

	)

55 
	#CLONE_SETTLS
 0x00080000

	)

56 
	#CLONE_PARENT_SETTID
 0x00100000

	)

58 
	#CLONE_CHILD_CLEARTID
 0x00200000

	)

60 
	#CLONE_DETACHED
 0x00400000

	)

61 
	#CLONE_UNTRACED
 0x00800000

	)

63 
	#CLONE_CHILD_SETTID
 0x01000000

	)

65 
	#CLONE_NEWUTS
 0x04000000

	)

66 
	#CLONE_NEWIPC
 0x08000000

	)

67 
	#CLONE_NEWUSER
 0x10000000

	)

68 
	#CLONE_NEWPID
 0x20000000

	)

69 
	#CLONE_NEWNET
 0x40000000

	)

70 
	#CLONE_IO
 0x80000000

	)

74 
	ssched_∑øm


76 
	m__sched_¥i‹ôy
;

79 
	g__BEGIN_DECLS


81 #ifde‡
__USE_GNU


83 
˛⁄e
 ((*
__‚
Ë(*
__¨g
), *
__chûd_°ack
,

84 
__Êags
, *
__¨g
, ...Ë
__THROW
;

87 
	$unsh¨e
 (
__Êags
Ë
__THROW
;

90 
	$sched_gë˝u
 (Ë
__THROW
;

93 
	$£äs
 (
__fd
, 
__n°y≥
Ë
__THROW
;

97 
__END_DECLS


101 #i‡!
deföed
 
__deföed_sched∑øm
 \

102 && (
deföed
 
__√ed_sched∑øm
 || deföed 
_SCHED_H
)

103 
	#__deföed_sched∑øm
 1

	)

105 
	s__sched_∑øm


107 
__sched_¥i‹ôy
;

109 #unde‡
__√ed_sched∑øm


113 #i‡
deföed
 
_SCHED_H
 && !deföed 
__˝u_£t_t_deföed


114 
	#__˝u_£t_t_deföed


	)

116 
	#__CPU_SETSIZE
 1024

	)

117 
	#__NCPUBITS
 (8 *  (
__˝u_mask
))

	)

120 
	t__˝u_mask
;

123 
	#__CPUELT
(
˝u
Ë((˝uË/ 
__NCPUBITS
)

	)

124 
	#__CPUMASK
(
˝u
Ë((
__˝u_mask
Ë1 << ((˝uË% 
__NCPUBITS
))

	)

129 
__˝u_mask
 
__bôs
[
__CPU_SETSIZE
 / 
__NCPUBITS
];

130 } 
	t˝u_£t_t
;

133 #i‡
	`__GNUC_PREREQ
 (2, 91)

134 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

135 dÿ
	`__buûtö_mem£t
 (
˝u£ç
, '\0', 
£tsize
); 0)

	)

137 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

139 
size_t
 
__i
; \

140 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

141 
__˝u_mask
 *
__bôs
 = (
˝u£ç
)->__bits; \

142 
__i
 = 0; __ò< 
__imax
; ++__i) \

143 
__bôs
[
__i
] = 0; \

144 
	}
} 0)

	)

146 
	#__CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

147 (
__exãnsi⁄__
 \

148 ({ 
size_t
 
__˝u
 = (
˝u
); \

149 
__˝u
 < 8 * (
£tsize
) \

150 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

151 |
	`__CPUMASK
 (
__˝u
)) \

152 : 0; }))

	)

153 
	#__CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

154 (
__exãnsi⁄__
 \

155 ({ 
size_t
 
__˝u
 = (
˝u
); \

156 
__˝u
 < 8 * (
£tsize
) \

157 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

158 &~
	`__CPUMASK
 (
__˝u
)) \

159 : 0; }))

	)

160 
	#__CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

161 (
__exãnsi⁄__
 \

162 ({ 
size_t
 
__˝u
 = (
˝u
); \

163 
__˝u
 < 8 * (
£tsize
) \

164 ? ((((
__c⁄°
 
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

165 & 
	`__CPUMASK
 (
__˝u
))) != 0 \

166 : 0; }))

	)

168 
	#__CPU_COUNT_S
(
£tsize
, 
˝u£ç
) \

169 
	`__sched_˝ucou¡
 (
£tsize
, 
˝u£ç
)

	)

171 #i‡
__GNUC_PREREQ
 (2, 91)

172 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

173 (
	`__buûtö_memcmp
 (
˝u£ç1
, 
˝u£ç2
, 
£tsize
Ë=0)

	)

175 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

176 (
__exãnsi⁄__
 \

177 ({ 
__c⁄°
 
__˝u_mask
 *
__¨r1
 = (
˝u£ç1
)->
__bôs
; \

178 
__c⁄°
 
__˝u_mask
 *
__¨r2
 = (
˝u£ç2
)->
__bôs
; \

179 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

180 
size_t
 
__i
; \

181 
__i
 = 0; __ò< 
__imax
; ++__i) \

182 i‡(
__¨r1
[
__i
] !
__¨r2
[__i]) \

184 
__i
 =
__imax
; }))

	)

187 
	#__CPU_OP_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, 
›
) \

188 (
__exãnsi⁄__
 \

189 ({ 
˝u_£t_t
 *
__de°
 = (
de°£t
); \

190 
__c⁄°
 
__˝u_mask
 *
__¨r1
 = (
§c£t1
)->
__bôs
; \

191 
__c⁄°
 
__˝u_mask
 *
__¨r2
 = (
§c£t2
)->
__bôs
; \

192 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

193 
size_t
 
__i
; \

194 
__i
 = 0; __ò< 
__imax
; ++__i) \

195 ((
__˝u_mask
 *Ë
__de°
->
__bôs
)[
__i
] = 
__¨r1
[__i] 
›
 
__¨r2
[__i]; \

196 
__de°
; }))

	)

198 
	#__CPU_ALLOC_SIZE
(
cou¡
) \

199 ((((
cou¡
Ë+ 
__NCPUBITS
 - 1Ë/ __NCPUBITSË*  (
__˝u_mask
))

	)

200 
	#__CPU_ALLOC
(
cou¡
Ë
	`__sched_˝uÆloc
 (cou¡)

	)

201 
	#__CPU_FREE
(
˝u£t
Ë
	`__sched_˝u‰ì
 (˝u£t)

	)

203 
__BEGIN_DECLS


205 
	$__sched_˝ucou¡
 (
size_t
 
__£tsize
, c⁄° 
˝u_£t_t
 *
__£ç
)

206 
__THROW
;

207 
˝u_£t_t
 *
	$__sched_˝uÆloc
 (
size_t
 
__cou¡
Ë
__THROW
 
__wur
;

208 
	$__sched_˝u‰ì
 (
˝u_£t_t
 *
__£t
Ë
__THROW
;

210 
__END_DECLS


	@/usr/include/asm-generic/bitsperlong.h

1 #i‚de‡
__ASM_GENERIC_BITS_PER_LONG


2 
	#__ASM_GENERIC_BITS_PER_LONG


	)

11 #i‚de‡
__BITS_PER_LONG


12 
	#__BITS_PER_LONG
 32

	)

	@
1
.
1
/usr/include
168
3840
Makefile.am
Makefile.in
ascii-xfr.c
charmap.h
common.c
config.c
configsym.h
defmap.h
dial.c
file.c
functions.c
getsdir.c
getsdir.h
help.c
intl.h
ipc.c
keyboard.h
keyserv.c
main.c
minicom.c
minicom.h
port.h
rcsid.h
rwconf.c
script.c
sysdep.h
sysdep1.c
sysdep2.c
updown.c
util.c
vt100.c
vt100.h
wildmat.c
windiv.c
window.c
window.h
wkeys.c
xminicom
/usr/include/ctype.h
/usr/include/dirent.h
/usr/include/errno.h
/usr/include/fcntl.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libintl.h
/usr/include/locale.h
/usr/include/pwd.h
/usr/include/setjmp.h
/usr/include/sgtty.h
/usr/include/signal.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/sys/file.h
/usr/include/sys/ioctl.h
/usr/include/sys/kd.h
/usr/include/sys/param.h
/usr/include/sys/select.h
/usr/include/sys/stat.h
/usr/include/sys/termios.h
/usr/include/sys/time.h
/usr/include/sys/times.h
/usr/include/sys/types.h
/usr/include/sys/wait.h
/usr/include/termcap.h
/usr/include/termios.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/alloca.h
/usr/include/bits/confname.h
/usr/include/bits/dirent.h
/usr/include/bits/environments.h
/usr/include/bits/errno.h
/usr/include/bits/fcntl.h
/usr/include/bits/fcntl2.h
/usr/include/bits/ioctl-types.h
/usr/include/bits/ioctls.h
/usr/include/bits/locale.h
/usr/include/bits/posix1_lim.h
/usr/include/bits/posix_opt.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/select.h
/usr/include/bits/select2.h
/usr/include/bits/setjmp.h
/usr/include/bits/setjmp2.h
/usr/include/bits/sigaction.h
/usr/include/bits/sigcontext.h
/usr/include/bits/siginfo.h
/usr/include/bits/signum.h
/usr/include/bits/sigset.h
/usr/include/bits/sigstack.h
/usr/include/bits/sigthread.h
/usr/include/bits/stat.h
/usr/include/bits/stdio-ldbl.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/string.h
/usr/include/bits/string2.h
/usr/include/bits/string3.h
/usr/include/bits/sys_errlist.h
/usr/include/bits/termios.h
/usr/include/bits/time.h
/usr/include/bits/types.h
/usr/include/bits/unistd.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/endian.h
/usr/include/gnu/stubs.h
/usr/include/libio.h
/usr/include/limits.h
/usr/include/linux/kd.h
/usr/include/linux/limits.h
/usr/include/linux/param.h
/usr/include/ncurses_dll.h
/usr/include/sys/cdefs.h
/usr/include/sys/resource.h
/usr/include/sys/sysmacros.h
/usr/include/sys/ttydefaults.h
/usr/include/sys/ucontext.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/asm/ioctls.h
/usr/include/asm/param.h
/usr/include/asm/sigcontext.h
/usr/include/bits/byteswap.h
/usr/include/bits/endian.h
/usr/include/bits/libio-ldbl.h
/usr/include/bits/local_lim.h
/usr/include/bits/posix2_lim.h
/usr/include/bits/resource.h
/usr/include/bits/stdio-lock.h
/usr/include/bits/timex.h
/usr/include/bits/typesizes.h
/usr/include/bits/uio.h
/usr/include/bits/wordsize.h
/usr/include/bits/xopen_lim.h
/usr/include/gnu/stubs-32.h
/usr/include/linux/errno.h
/usr/include/linux/types.h
/usr/include/asm-generic/ioctls.h
/usr/include/asm-generic/param.h
/usr/include/asm/errno.h
/usr/include/asm/types.h
/usr/include/bits/libc-lock.h
/usr/include/gconv.h
/usr/include/linux/posix_types.h
/usr/include/wchar.h
/usr/include/asm-generic/errno.h
/usr/include/asm-generic/types.h
/usr/include/asm/posix_types.h
/usr/include/bits/wchar-ldbl.h
/usr/include/bits/wchar.h
/usr/include/bits/wchar2.h
/usr/include/linux/ioctl.h
/usr/include/linux/stddef.h
/usr/include/pthread.h
/usr/include/wctype.h
/usr/include/asm-generic/errno-base.h
/usr/include/asm-generic/int-ll64.h
/usr/include/asm/ioctl.h
/usr/include/sched.h
/usr/include/asm-generic/ioctl.h
/usr/include/asm/bitsperlong.h
/usr/include/bits/sched.h
/usr/include/asm-generic/bitsperlong.h
